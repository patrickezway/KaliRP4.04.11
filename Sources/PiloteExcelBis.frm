VERSION 5.00
Object = "{6B7E6392-850A-101B-AFC0-4210102A8DA7}#1.3#0"; "COMCTL32.OCX"
Object = "{5E9E78A0-531B-11CF-91F6-C2863C385E30}#1.0#0"; "MSFLXGRD.OCX"
Object = "{F9043C88-F6F2-101A-A3C9-08002B2F49FB}#1.2#0"; "COMDLG32.OCX"
Begin VB.Form PiloteExcelBis 
   BorderStyle     =   4  'Fixed ToolWindow
   ClientHeight    =   11805
   ClientLeft      =   45
   ClientTop       =   615
   ClientWidth     =   15270
   KeyPreview      =   -1  'True
   LinkTopic       =   "Form1"
   MaxButton       =   0   'False
   MinButton       =   0   'False
   ScaleHeight     =   11805
   ScaleWidth      =   15270
   ShowInTaskbar   =   0   'False
   StartUpPosition =   2  'CenterScreen
   Visible         =   0   'False
   Begin VB.Frame Frame1 
      BackColor       =   &H00C0C0C0&
      Height          =   1515
      Left            =   0
      TabIndex        =   49
      Top             =   10080
      Width           =   15405
      Begin VB.CommandButton cmd 
         BackColor       =   &H00C0C0C0&
         Caption         =   "-> Excel 10"
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   510
         Index           =   50
         Left            =   12480
         Style           =   1  'Graphical
         TabIndex        =   119
         TabStop         =   0   'False
         ToolTipText     =   "Convertir en XLSX (Excel 7 et plus)"
         Top             =   240
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   1035
      End
      Begin VB.CommandButton cmd 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Transformer en Modèle"
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   9
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   750
         Index           =   27
         Left            =   1440
         Style           =   1  'Graphical
         TabIndex        =   115
         TabStop         =   0   'False
         ToolTipText     =   "Transformer la simulation en modèle"
         Top             =   240
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   1155
      End
      Begin VB.CommandButton cmdImgS 
         BackColor       =   &H00C0FFC0&
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   495
         Left            =   4800
         Picture         =   "PiloteExcelBis.frx":0000
         Style           =   1  'Graphical
         TabIndex        =   107
         TabStop         =   0   'False
         ToolTipText     =   "Effectuer une simulation"
         Top             =   200
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   495
      End
      Begin VB.CommandButton cmdimgH 
         BackColor       =   &H00C0FFC0&
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   495
         Left            =   15840
         Picture         =   "PiloteExcelBis.frx":0492
         Style           =   1  'Graphical
         TabIndex        =   106
         TabStop         =   0   'False
         ToolTipText     =   "Effectuer une simulation"
         Top             =   360
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   615
      End
      Begin VB.CommandButton cmdTypeChp 
         BackColor       =   &H00C0C0C0&
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   375
         Index           =   8
         Left            =   2520
         Picture         =   "PiloteExcelBis.frx":0AB7
         Style           =   1  'Graphical
         TabIndex        =   71
         TabStop         =   0   'False
         ToolTipText     =   "ChampNumérique"
         Top             =   120
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   435
      End
      Begin VB.CommandButton cmdTypeChp 
         BackColor       =   &H00C0C0C0&
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   375
         Index           =   7
         Left            =   2040
         Picture         =   "PiloteExcelBis.frx":0E2C
         Style           =   1  'Graphical
         TabIndex        =   70
         TabStop         =   0   'False
         ToolTipText     =   "Champ Date"
         Top             =   120
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   435
      End
      Begin VB.CommandButton cmdTypeChp 
         BackColor       =   &H00C0C0C0&
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   375
         Index           =   6
         Left            =   1560
         Picture         =   "PiloteExcelBis.frx":1288
         Style           =   1  'Graphical
         TabIndex        =   69
         TabStop         =   0   'False
         ToolTipText     =   "Bouton Radio"
         Top             =   120
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   435
      End
      Begin VB.CommandButton cmdTypeChp 
         BackColor       =   &H00C0C0C0&
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   375
         Index           =   5
         Left            =   1080
         Picture         =   "PiloteExcelBis.frx":162A
         Style           =   1  'Graphical
         TabIndex        =   68
         TabStop         =   0   'False
         ToolTipText     =   "Case à Cocher"
         Top             =   120
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   435
      End
      Begin VB.CommandButton cmdTypeChp 
         BackColor       =   &H00C0C0C0&
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   375
         Index           =   4
         Left            =   600
         Picture         =   "PiloteExcelBis.frx":196C
         Style           =   1  'Graphical
         TabIndex        =   67
         TabStop         =   0   'False
         ToolTipText     =   "Champ Texte"
         Top             =   120
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   435
      End
      Begin VB.CommandButton cmdTypeChp 
         BackColor       =   &H00C0C0C0&
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   375
         Index           =   3
         Left            =   120
         Picture         =   "PiloteExcelBis.frx":1CC3
         Style           =   1  'Graphical
         TabIndex        =   66
         TabStop         =   0   'False
         ToolTipText     =   "ChampListe Hiérarchique"
         Top             =   120
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   435
      End
      Begin VB.CommandButton cmdTypeChp 
         BackColor       =   &H00C0C0C0&
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   375
         Index           =   2
         Left            =   3000
         Picture         =   "PiloteExcelBis.frx":1D71
         Style           =   1  'Graphical
         TabIndex        =   65
         TabStop         =   0   'False
         ToolTipText     =   "ChampListe"
         Top             =   120
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   435
      End
      Begin VB.CommandButton cmdTypeChp 
         BackColor       =   &H00C0C0C0&
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   375
         Index           =   1
         Left            =   3480
         Picture         =   "PiloteExcelBis.frx":20C2
         Style           =   1  'Graphical
         TabIndex        =   64
         TabStop         =   0   'False
         ToolTipText     =   "Champ Fonction"
         Top             =   120
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   435
      End
      Begin VB.CommandButton cmdTypeChp 
         BackColor       =   &H00C0C0C0&
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   375
         Index           =   0
         Left            =   3960
         Picture         =   "PiloteExcelBis.frx":2525
         Style           =   1  'Graphical
         TabIndex        =   63
         TabStop         =   0   'False
         ToolTipText     =   "Champ Service"
         Top             =   120
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   435
      End
      Begin VB.CommandButton cmd 
         BackColor       =   &H00E0E0E0&
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   9
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   750
         Index           =   28
         Left            =   2640
         Picture         =   "PiloteExcelBis.frx":2AB4
         Style           =   1  'Graphical
         TabIndex        =   59
         TabStop         =   0   'False
         ToolTipText     =   "Restaurer le modèle"
         Top             =   240
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   555
      End
      Begin VB.CommandButton cmd 
         BackColor       =   &H00C0C0C0&
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   510
         Index           =   1
         Left            =   14400
         Picture         =   "PiloteExcelBis.frx":2E65
         Style           =   1  'Graphical
         TabIndex        =   56
         TabStop         =   0   'False
         Top             =   240
         UseMaskColor    =   -1  'True
         Width           =   675
      End
      Begin VB.CommandButton cmd 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Nouveau Rapport"
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   9
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   750
         Index           =   0
         Left            =   120
         Style           =   1  'Graphical
         TabIndex        =   55
         TabStop         =   0   'False
         ToolTipText     =   "Créer un nouveau modèle de rapport"
         Top             =   240
         UseMaskColor    =   -1  'True
         Width           =   1275
      End
      Begin VB.CommandButton cmd 
         BackColor       =   &H00C0C0C0&
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   8.25
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   510
         Index           =   8
         Left            =   13560
         Picture         =   "PiloteExcelBis.frx":341E
         Style           =   1  'Graphical
         TabIndex        =   54
         TabStop         =   0   'False
         ToolTipText     =   "Enregistrer"
         Top             =   240
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   675
      End
      Begin VB.CommandButton cmd 
         BackColor       =   &H00C0C0C0&
         Caption         =   "SQL"
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   9
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   420
         Index           =   21
         Left            =   3240
         Style           =   1  'Graphical
         TabIndex        =   51
         TabStop         =   0   'False
         ToolTipText     =   "Passer de l'affichage SQL à la désignation du champ"
         Top             =   240
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   1275
      End
      Begin VB.CommandButton cmd 
         BackColor       =   &H00E0E0E0&
         Caption         =   "Voir la Liste"
         BeginProperty Font 
            Name            =   "Times New Roman"
            Size            =   9
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   300
         Index           =   20
         Left            =   3240
         Style           =   1  'Graphical
         TabIndex        =   50
         TabStop         =   0   'False
         ToolTipText     =   "Voir les formulaires concernés par cette condition"
         Top             =   650
         UseMaskColor    =   -1  'True
         Visible         =   0   'False
         Width           =   1275
      End
      Begin ComctlLib.ProgressBar PgBarChp 
         Height          =   255
         Left            =   10800
         TabIndex        =   52
         Top             =   240
         Visible         =   0   'False
         Width           =   1575
         _ExtentX        =   2778
         _ExtentY        =   450
         _Version        =   327682
         Appearance      =   1
      End
      Begin ComctlLib.ProgressBar PgBarFeuille 
         Height          =   255
         Left            =   4800
         TabIndex        =   53
         Top             =   240
         Visible         =   0   'False
         Width           =   2175
         _ExtentX        =   3836
         _ExtentY        =   450
         _Version        =   327682
         Appearance      =   1
      End
      Begin ComctlLib.ProgressBar PgBar 
         Height          =   255
         Left            =   4800
         TabIndex        =   57
         Top             =   720
         Visible         =   0   'False
         Width           =   7560
         _ExtentX        =   13335
         _ExtentY        =   450
         _Version        =   327682
         Appearance      =   1
         Max             =   1000
      End
      Begin VB.Label LblSimulFeuille 
         Alignment       =   2  'Center
         BorderStyle     =   1  'Fixed Single
         BeginProperty Font 
            Name            =   "MS Sans Serif"
            Size            =   9.75
            Charset         =   0
            Weight          =   700
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         Height          =   375
         Left            =   1440
         TabIndex        =   114
         Top             =   1080
         Visible         =   0   'False
         Width           =   12135
      End
      Begin VB.Label LblHelp 
         Alignment       =   2  'Center
         BorderStyle     =   1  'Fixed Single
         ForeColor       =   &H000000FF&
         Height          =   855
         Left            =   4680
         TabIndex        =   58
         Top             =   120
         Visible         =   0   'False
         Width           =   7680
      End
   End
   Begin VB.Frame frm 
      BackColor       =   &H00C0C0C0&
      Caption         =   "Choix des relecteurs"
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   9.75
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      ForeColor       =   &H00800080&
      Height          =   10230
      Left            =   0
      TabIndex        =   0
      Top             =   -15
      Width           =   15375
      Begin VB.Frame Frame2 
         BackColor       =   &H00C0E0FF&
         Height          =   10080
         Left            =   0
         TabIndex        =   1
         Top             =   0
         Width           =   15360
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   375
            Index           =   49
            Left            =   10320
            Picture         =   "PiloteExcelBis.frx":3987
            Style           =   1  'Graphical
            TabIndex        =   118
            TabStop         =   0   'False
            ToolTipText     =   "Mettre l'objet Excel en visible et en avant_plan"
            Top             =   2400
            UseMaskColor    =   -1  'True
            Width           =   390
         End
         Begin VB.Frame FrmHTML 
            BackColor       =   &H00C0E0FF&
            Height          =   1935
            Left            =   9360
            TabIndex        =   110
            Top             =   2280
            Visible         =   0   'False
            Width           =   735
            Begin VB.CommandButton cmd 
               BackColor       =   &H00C0C0C0&
               Caption         =   "Vider"
               BeginProperty Font 
                  Name            =   "Times New Roman"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   255
               Index           =   48
               Left            =   50
               Style           =   1  'Graphical
               TabIndex        =   117
               TabStop         =   0   'False
               ToolTipText     =   "Viderr le fichierTemp.xls pour effectuer une nouvelle simulation"
               Top             =   1600
               UseMaskColor    =   -1  'True
               Visible         =   0   'False
               Width           =   630
            End
            Begin VB.CommandButton cmd 
               BackColor       =   &H00C0C0C0&
               Caption         =   "Temp"
               BeginProperty Font 
                  Name            =   "Times New Roman"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   255
               Index           =   47
               Left            =   50
               Style           =   1  'Graphical
               TabIndex        =   116
               TabStop         =   0   'False
               ToolTipText     =   "Ouvrir et Voir le fichierTemp.xls sous Excel"
               Top             =   1310
               UseMaskColor    =   -1  'True
               Visible         =   0   'False
               Width           =   630
            End
            Begin VB.CommandButton cmd 
               BackColor       =   &H00C0C0C0&
               BeginProperty Font 
                  Name            =   "Times New Roman"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   255
               Index           =   44
               Left            =   50
               Picture         =   "PiloteExcelBis.frx":3BCC
               Style           =   1  'Graphical
               TabIndex        =   113
               TabStop         =   0   'False
               ToolTipText     =   "Ouvrir et Voir le fichier sous forme HTML"
               Top             =   960
               UseMaskColor    =   -1  'True
               Visible         =   0   'False
               Width           =   630
            End
            Begin VB.CommandButton cmd 
               BackColor       =   &H00C0C0C0&
               BeginProperty Font 
                  Name            =   "Times New Roman"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   255
               Index           =   45
               Left            =   50
               Picture         =   "PiloteExcelBis.frx":3F9B
               Style           =   1  'Graphical
               TabIndex        =   112
               TabStop         =   0   'False
               ToolTipText     =   "Transformer   le fichier sous forme HTML"
               Top             =   600
               UseMaskColor    =   -1  'True
               Visible         =   0   'False
               Width           =   630
            End
            Begin VB.CommandButton cmd 
               BackColor       =   &H00C0C0C0&
               BeginProperty Font 
                  Name            =   "Times New Roman"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   375
               Index           =   46
               Left            =   50
               Picture         =   "PiloteExcelBis.frx":439B
               Style           =   1  'Graphical
               TabIndex        =   111
               TabStop         =   0   'False
               ToolTipText     =   "envoyer par mail"
               Top             =   150
               UseMaskColor    =   -1  'True
               Visible         =   0   'False
               Width           =   630
            End
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            Caption         =   "C"
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   300
            Index           =   43
            Left            =   4275
            MaskColor       =   &H0080FFFF&
            Style           =   1  'Graphical
            TabIndex        =   109
            TabStop         =   0   'False
            ToolTipText     =   "Copier cette condition sur un autre champ"
            Top             =   2880
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   315
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   300
            Index           =   42
            Left            =   14805
            Picture         =   "PiloteExcelBis.frx":4566
            Style           =   1  'Graphical
            TabIndex        =   108
            TabStop         =   0   'False
            ToolTipText     =   "Accéder au Paramétrage du filtre"
            Top             =   3000
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   320
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   525
            Index           =   41
            Left            =   8640
            Picture         =   "PiloteExcelBis.frx":4905
            Style           =   1  'Graphical
            TabIndex        =   105
            TabStop         =   0   'False
            ToolTipText     =   "Génération automatique des graphiques"
            Top             =   3000
            UseMaskColor    =   -1  'True
            Width           =   630
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0FFC0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   375
            Index           =   40
            Left            =   13350
            Picture         =   "PiloteExcelBis.frx":4D97
            Style           =   1  'Graphical
            TabIndex        =   104
            TabStop         =   0   'False
            ToolTipText     =   "Effectuer une simulation"
            Top             =   5925
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   375
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   500
            Index           =   39
            Left            =   10920
            Picture         =   "PiloteExcelBis.frx":5229
            Style           =   1  'Graphical
            TabIndex        =   103
            TabStop         =   0   'False
            ToolTipText     =   "Simulation à l'écran pour cette feuille"
            Top             =   2400
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   630
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   500
            Index           =   10
            Left            =   10920
            Picture         =   "PiloteExcelBis.frx":563F
            Style           =   1  'Graphical
            TabIndex        =   102
            TabStop         =   0   'False
            ToolTipText     =   "Effectuer une Simulation complète (toutes les feuilles) vers Excel"
            Top             =   3600
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   630
         End
         Begin VB.CommandButton cmdTrace 
            BackColor       =   &H00C0C0C0&
            Height          =   420
            Left            =   2880
            Picture         =   "PiloteExcelBis.frx":60C1
            Style           =   1  'Graphical
            TabIndex        =   101
            TabStop         =   0   'False
            ToolTipText     =   "Consulter les Traces"
            Top             =   3120
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   435
         End
         Begin VB.CheckBox ChkExpert 
            BackColor       =   &H00C0E0FF&
            Caption         =   "Mode expert"
            BeginProperty Font 
               Name            =   "MS Sans Serif"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00808080&
            Height          =   200
            Left            =   15120
            TabIndex        =   100
            Top             =   360
            Value           =   1  'Checked
            Visible         =   0   'False
            Width           =   1920
         End
         Begin VB.Timer TimerPictureLien 
            Left            =   10320
            Top             =   1200
         End
         Begin VB.PictureBox PictureLien 
            Height          =   375
            Index           =   0
            Left            =   9120
            Picture         =   "PiloteExcelBis.frx":6E03
            ScaleHeight     =   315
            ScaleWidth      =   435
            TabIndex        =   99
            Top             =   1200
            Visible         =   0   'False
            Width           =   500
         End
         Begin VB.PictureBox PictureLien 
            Height          =   375
            Index           =   1
            Left            =   9720
            Picture         =   "PiloteExcelBis.frx":7255
            ScaleHeight     =   315
            ScaleWidth      =   435
            TabIndex        =   98
            Top             =   1200
            Visible         =   0   'False
            Width           =   500
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H000000FF&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   375
            Index           =   36
            Left            =   13350
            Picture         =   "PiloteExcelBis.frx":76A7
            Style           =   1  'Graphical
            TabIndex        =   97
            TabStop         =   0   'False
            ToolTipText     =   "accès aux []"
            Top             =   6285
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   375
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0FFC0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   375
            Index           =   37
            Left            =   13350
            Picture         =   "PiloteExcelBis.frx":7AF9
            Style           =   1  'Graphical
            TabIndex        =   96
            TabStop         =   0   'False
            ToolTipText     =   "Effectuer une simulation"
            Top             =   6645
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   375
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00FFFF80&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   375
            Index           =   35
            Left            =   13350
            Style           =   1  'Graphical
            TabIndex        =   95
            TabStop         =   0   'False
            ToolTipText     =   "Mode Champ"
            Top             =   7005
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   375
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00E0E0E0&
            Caption         =   "Créer un Fichier de Résultat"
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   9
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   345
            Index           =   34
            Left            =   1680
            Style           =   1  'Graphical
            TabIndex        =   92
            TabStop         =   0   'False
            ToolTipText     =   "Créer un Fichier de Résultat"
            Top             =   3720
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   1875
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00FFFF80&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   375
            Index           =   33
            Left            =   13350
            Picture         =   "PiloteExcelBis.frx":7E78
            Style           =   1  'Graphical
            TabIndex        =   91
            TabStop         =   0   'False
            ToolTipText     =   "Mode Formule"
            Top             =   7365
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   375
         End
         Begin VB.Frame FrmProp 
            BackColor       =   &H00FF8080&
            Caption         =   "Style et Police"
            BeginProperty Font 
               Name            =   "MS Sans Serif"
               Size            =   9.75
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00800080&
            Height          =   1605
            Left            =   3600
            TabIndex        =   85
            Top             =   6480
            Visible         =   0   'False
            Width           =   9615
            Begin VB.CommandButton cmdPolice 
               BackColor       =   &H00C0C0C0&
               Caption         =   "Coller  Mise en Forme"
               BeginProperty Font 
                  Name            =   "Times New Roman"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   400
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   510
               Index           =   3
               Left            =   120
               Style           =   1  'Graphical
               TabIndex        =   94
               TabStop         =   0   'False
               ToolTipText     =   "Valider cette formule"
               Top             =   960
               UseMaskColor    =   -1  'True
               Width           =   1995
            End
            Begin VB.CommandButton cmdPolice 
               BackColor       =   &H00C0C0C0&
               Caption         =   "Copier Mise en Forme"
               BeginProperty Font 
                  Name            =   "Times New Roman"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   400
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   495
               Index           =   0
               Left            =   120
               Style           =   1  'Graphical
               TabIndex        =   93
               TabStop         =   0   'False
               ToolTipText     =   "Valider cette formule"
               Top             =   360
               UseMaskColor    =   -1  'True
               Width           =   1995
            End
            Begin VB.CommandButton cmdPolice 
               BackColor       =   &H00C0C0C0&
               BeginProperty Font 
                  Name            =   "Times New Roman"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   510
               Index           =   2
               Left            =   8880
               Picture         =   "PiloteExcelBis.frx":81ED
               Style           =   1  'Graphical
               TabIndex        =   90
               TabStop         =   0   'False
               ToolTipText     =   "Valider cette formule"
               Top             =   960
               UseMaskColor    =   -1  'True
               Width           =   550
            End
            Begin VB.CommandButton cmdPolice 
               BackColor       =   &H00C0C0C0&
               BeginProperty Font 
                  Name            =   "Times New Roman"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   495
               Index           =   1
               Left            =   8880
               Picture         =   "PiloteExcelBis.frx":8646
               Style           =   1  'Graphical
               TabIndex        =   89
               TabStop         =   0   'False
               ToolTipText     =   "Choisir laPolice et la Couleur"
               Top             =   360
               UseMaskColor    =   -1  'True
               Width           =   550
            End
            Begin VB.TextBox txtPolice 
               BackColor       =   &H00FFFFFF&
               BeginProperty Font 
                  Name            =   "MS Sans Serif"
                  Size            =   9.75
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               ForeColor       =   &H00800000&
               Height          =   1125
               Left            =   2190
               MaxLength       =   2000
               MultiLine       =   -1  'True
               ScrollBars      =   3  'Both
               TabIndex        =   86
               Top             =   360
               Width           =   6555
            End
            Begin MSComDlg.CommonDialog ComDialog 
               Left            =   7800
               Top             =   960
               _ExtentX        =   847
               _ExtentY        =   847
               _Version        =   393216
            End
            Begin VB.Label Lbl 
               Caption         =   "Bold"
               Height          =   255
               Index           =   26
               Left            =   4680
               TabIndex        =   88
               Top             =   360
               Visible         =   0   'False
               Width           =   1455
            End
            Begin VB.Label Lbl 
               BackColor       =   &H00C0C0C0&
               Caption         =   "Taille"
               Height          =   255
               Index           =   27
               Left            =   6360
               TabIndex        =   87
               Top             =   360
               Visible         =   0   'False
               Width           =   1455
            End
         End
         Begin VB.Frame FrmFormule 
            BackColor       =   &H00FF8080&
            Caption         =   "Formule"
            BeginProperty Font 
               Name            =   "MS Sans Serif"
               Size            =   9.75
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   1695
            Left            =   6720
            TabIndex        =   74
            Top             =   6480
            Visible         =   0   'False
            Width           =   5775
            Begin VB.CommandButton cmdFormule 
               BackColor       =   &H00C0C0C0&
               BeginProperty Font 
                  Name            =   "Times New Roman"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   510
               Index           =   8
               Left            =   5040
               Style           =   1  'Graphical
               TabIndex        =   84
               TabStop         =   0   'False
               ToolTipText     =   "Valider cette formule"
               Top             =   360
               UseMaskColor    =   -1  'True
               Width           =   550
            End
            Begin VB.CommandButton cmdFormule 
               BackColor       =   &H00C0C0C0&
               Caption         =   ")"
               Height          =   375
               Index           =   7
               Left            =   4200
               Style           =   1  'Graphical
               TabIndex        =   83
               TabStop         =   0   'False
               Top             =   480
               UseMaskColor    =   -1  'True
               Width           =   255
            End
            Begin VB.CommandButton cmdFormule 
               BackColor       =   &H00C0C0C0&
               Caption         =   "("
               Height          =   375
               Index           =   6
               Left            =   3960
               Style           =   1  'Graphical
               TabIndex        =   82
               TabStop         =   0   'False
               Top             =   480
               UseMaskColor    =   -1  'True
               Width           =   255
            End
            Begin VB.CommandButton cmdFormule 
               BackColor       =   &H00C0C0C0&
               Caption         =   "X"
               Height          =   375
               Index           =   5
               Left            =   1800
               Style           =   1  'Graphical
               TabIndex        =   81
               TabStop         =   0   'False
               ToolTipText     =   "Multiplication"
               Top             =   480
               UseMaskColor    =   -1  'True
               Width           =   375
            End
            Begin VB.CommandButton cmdFormule 
               BackColor       =   &H00C0C0C0&
               Caption         =   "/"
               Height          =   375
               Index           =   0
               Left            =   1320
               Style           =   1  'Graphical
               TabIndex        =   80
               TabStop         =   0   'False
               ToolTipText     =   "Division"
               Top             =   480
               UseMaskColor    =   -1  'True
               Width           =   375
            End
            Begin VB.CommandButton cmdFormule 
               BackColor       =   &H00C0C0C0&
               Caption         =   "->"
               Height          =   375
               Index           =   4
               Left            =   2880
               Style           =   1  'Graphical
               TabIndex        =   79
               TabStop         =   0   'False
               ToolTipText     =   "Somme : jusqu'à"
               Top             =   480
               UseMaskColor    =   -1  'True
               Width           =   375
            End
            Begin VB.CommandButton cmdFormule 
               BackColor       =   &H00C0C0C0&
               BeginProperty Font 
                  Name            =   "Times New Roman"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   375
               Index           =   3
               Left            =   2400
               Picture         =   "PiloteExcelBis.frx":8A37
               Style           =   1  'Graphical
               TabIndex        =   78
               TabStop         =   0   'False
               ToolTipText     =   "Somme"
               Top             =   480
               UseMaskColor    =   -1  'True
               Width           =   375
            End
            Begin VB.CommandButton cmdFormule 
               BackColor       =   &H00C0C0C0&
               Height          =   375
               Index           =   2
               Left            =   840
               Picture         =   "PiloteExcelBis.frx":8DAC
               Style           =   1  'Graphical
               TabIndex        =   77
               TabStop         =   0   'False
               ToolTipText     =   "Opérateur Moins"
               Top             =   480
               UseMaskColor    =   -1  'True
               Width           =   375
            End
            Begin VB.CommandButton cmdFormule 
               BackColor       =   &H00C0C0C0&
               BeginProperty Font 
                  Name            =   "Times New Roman"
                  Size            =   8.25
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   375
               Index           =   1
               Left            =   360
               Picture         =   "PiloteExcelBis.frx":91EB
               Style           =   1  'Graphical
               TabIndex        =   76
               TabStop         =   0   'False
               ToolTipText     =   "Opérateur Plus"
               Top             =   480
               UseMaskColor    =   -1  'True
               Width           =   375
            End
            Begin VB.TextBox TxtFormule 
               Height          =   375
               Left            =   360
               TabIndex        =   75
               Top             =   1080
               Width           =   5295
            End
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00FFFF80&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   375
            Index           =   32
            Left            =   13350
            Picture         =   "PiloteExcelBis.frx":9642
            Style           =   1  'Graphical
            TabIndex        =   73
            TabStop         =   0   'False
            ToolTipText     =   "Mode Choix de la Police"
            Top             =   7725
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   375
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   540
            Index           =   31
            Left            =   14160
            Picture         =   "PiloteExcelBis.frx":9A33
            Style           =   1  'Graphical
            TabIndex        =   72
            TabStop         =   0   'False
            ToolTipText     =   "accéder au paramétrage du formulaire"
            Top             =   1320
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   675
         End
         Begin VB.Frame FrmComHyp 
            BackColor       =   &H00C0E0FF&
            Height          =   550
            Index           =   1
            Left            =   240
            TabIndex        =   60
            Top             =   2990
            Width           =   1455
            Begin VB.CheckBox ChkHyperlien 
               BackColor       =   &H00C0E0FF&
               Caption         =   "Hyperliens"
               Height          =   255
               Left            =   120
               TabIndex        =   62
               ToolTipText     =   "Chaque valeur récupérée durant la simulation devient un HypertLien vers la liste des fiches concernées dans KaliWeb"
               Top             =   200
               Width           =   1215
            End
         End
         Begin VB.Frame FrmComHyp 
            BackColor       =   &H00C0E0FF&
            Height          =   550
            Index           =   0
            Left            =   240
            TabIndex        =   48
            Top             =   3480
            Visible         =   0   'False
            Width           =   1455
            Begin VB.CheckBox ChkCommentaire 
               BackColor       =   &H00C0E0FF&
               Caption         =   "Commentaire"
               Height          =   255
               Left            =   80
               TabIndex        =   61
               ToolTipText     =   "Lors de la simulation, un commentaire sera inséré pour chaque valeur récupérée (avec requête SQL)"
               Top             =   200
               Width           =   1300
            End
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            Height          =   300
            Index           =   30
            Left            =   4275
            Picture         =   "PiloteExcelBis.frx":9E60
            Style           =   1  'Graphical
            TabIndex        =   47
            TabStop         =   0   'False
            ToolTipText     =   "Supprimer la condition"
            Top             =   3600
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   320
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   300
            Index           =   29
            Left            =   4275
            Picture         =   "PiloteExcelBis.frx":A29F
            Style           =   1  'Graphical
            TabIndex        =   46
            TabStop         =   0   'False
            ToolTipText     =   "Ajouter une condition au filtre"
            Top             =   2400
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   315
         End
         Begin VB.Frame FrmHTTPD 
            BackColor       =   &H00C0C0C0&
            Height          =   1815
            Left            =   5040
            TabIndex        =   36
            Top             =   4680
            Visible         =   0   'False
            Width           =   8175
            Begin ComctlLib.ProgressBar PgbarHTTPDTemps 
               Height          =   255
               Left            =   2880
               TabIndex        =   41
               Top             =   1320
               Width           =   5175
               _ExtentX        =   9128
               _ExtentY        =   450
               _Version        =   327682
               Appearance      =   1
            End
            Begin ComctlLib.ProgressBar PgbarHTTPDTaille 
               Height          =   255
               Left            =   2880
               TabIndex        =   40
               Top             =   840
               Width           =   5175
               _ExtentX        =   9128
               _ExtentY        =   450
               _Version        =   327682
               Appearance      =   1
            End
            Begin VB.Label lblHTTPDTaille 
               BackColor       =   &H00C0C0C0&
               Height          =   255
               Left            =   360
               TabIndex        =   39
               Top             =   840
               Width           =   2295
            End
            Begin VB.Label lblHTTPDTemps 
               BackColor       =   &H00C0C0C0&
               Height          =   255
               Left            =   360
               TabIndex        =   38
               Top             =   1320
               Width           =   2295
            End
            Begin VB.Label lblMaj 
               BackColor       =   &H00C0C0C0&
               BeginProperty Font 
                  Name            =   "MS Sans Serif"
                  Size            =   9.75
                  Charset         =   0
                  Weight          =   700
                  Underline       =   0   'False
                  Italic          =   0   'False
                  Strikethrough   =   0   'False
               EndProperty
               Height          =   255
               Left            =   480
               TabIndex        =   37
               Top             =   240
               Width           =   7455
            End
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   500
            Index           =   26
            Left            =   10920
            Picture         =   "PiloteExcelBis.frx":A6F6
            Style           =   1  'Graphical
            TabIndex        =   35
            TabStop         =   0   'False
            ToolTipText     =   "Paramétrer la diffusion pour ce modèle de rapport"
            Top             =   3000
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   630
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   300
            Index           =   25
            Left            =   3360
            Style           =   1  'Graphical
            TabIndex        =   34
            TabStop         =   0   'False
            ToolTipText     =   "Charger la suite de cette fenêtre"
            Top             =   1440
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   915
         End
         Begin VB.Frame Attente_Frame 
            Caption         =   "Un instant de patience SVP ...."
            BeginProperty Font 
               Name            =   "MS Sans Serif"
               Size            =   9.75
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   1695
            Left            =   4680
            TabIndex        =   31
            Top             =   5280
            Visible         =   0   'False
            Width           =   8175
            Begin ComctlLib.ProgressBar Attente_PgBar 
               Height          =   495
               Left            =   240
               TabIndex        =   32
               Top             =   720
               Width           =   7815
               _ExtentX        =   13785
               _ExtentY        =   873
               _Version        =   327682
               Appearance      =   1
            End
            Begin VB.Label Attente_Titre 
               Height          =   375
               Left            =   240
               TabIndex        =   33
               Top             =   360
               Width           =   7695
            End
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   300
            Index           =   24
            Left            =   3360
            Picture         =   "PiloteExcelBis.frx":AEF8
            Style           =   1  'Graphical
            TabIndex        =   30
            TabStop         =   0   'False
            ToolTipText     =   "Charger toutes les feuilles"
            Top             =   720
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   320
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   540
            Index           =   23
            Left            =   14160
            Picture         =   "PiloteExcelBis.frx":B31C
            Style           =   1  'Graphical
            TabIndex        =   29
            TabStop         =   0   'False
            ToolTipText     =   "Voir le formulaire"
            Top             =   720
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   675
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   495
            Index           =   7
            Left            =   1800
            Picture         =   "PiloteExcelBis.frx":B71F
            Style           =   1  'Graphical
            TabIndex        =   28
            TabStop         =   0   'False
            ToolTipText     =   "Accès au fichier d'aide en ligne"
            Top             =   3120
            UseMaskColor    =   -1  'True
            Width           =   555
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            Caption         =   "Nouveau"
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   300
            Index           =   6
            Left            =   13920
            Style           =   1  'Graphical
            TabIndex        =   23
            TabStop         =   0   'False
            ToolTipText     =   "Créer un nouveau filtre"
            Top             =   360
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   795
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   450
            Index           =   22
            Left            =   2400
            Picture         =   "PiloteExcelBis.frx":BA78
            Style           =   1  'Graphical
            TabIndex        =   22
            TabStop         =   0   'False
            ToolTipText     =   "Ouvrir le Fichier de paramétrage"
            Top             =   3120
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   435
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            Height          =   435
            Index           =   19
            Left            =   360
            MousePointer    =   13  'Arrow and Hourglass
            Picture         =   "PiloteExcelBis.frx":BE17
            Style           =   1  'Graphical
            TabIndex        =   21
            TabStop         =   0   'False
            ToolTipText     =   "Ouvrir le fichier de paramétrage"
            Top             =   720
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   435
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            Height          =   300
            Index           =   18
            Left            =   14805
            Picture         =   "PiloteExcelBis.frx":C242
            Style           =   1  'Graphical
            TabIndex        =   20
            TabStop         =   0   'False
            ToolTipText     =   "Supprimer la règle"
            Top             =   3720
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   320
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   300
            Index           =   17
            Left            =   14805
            Picture         =   "PiloteExcelBis.frx":C681
            Style           =   1  'Graphical
            TabIndex        =   19
            TabStop         =   0   'False
            ToolTipText     =   "Ajouter une règle"
            Top             =   2400
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   320
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   315
            Index           =   16
            Left            =   13800
            Picture         =   "PiloteExcelBis.frx":CAD8
            Style           =   1  'Graphical
            TabIndex        =   17
            TabStop         =   0   'False
            ToolTipText     =   "Accéder au Paramétrage du filtre"
            Top             =   1200
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   320
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   375
            Index           =   15
            Left            =   3360
            Style           =   1  'Graphical
            TabIndex        =   16
            TabStop         =   0   'False
            ToolTipText     =   "Publier les Résultats"
            Top             =   3480
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   435
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   300
            Index           =   14
            Left            =   3360
            Picture         =   "PiloteExcelBis.frx":CE77
            Style           =   1  'Graphical
            TabIndex        =   15
            TabStop         =   0   'False
            ToolTipText     =   "Déplacer la feuille vers le haut"
            Top             =   2280
            UseMaskColor    =   -1  'True
            Width           =   320
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   300
            Index           =   13
            Left            =   3360
            Picture         =   "PiloteExcelBis.frx":D26C
            Style           =   1  'Graphical
            TabIndex        =   14
            TabStop         =   0   'False
            ToolTipText     =   "Déplacerla feuille vers le bas"
            Top             =   2640
            UseMaskColor    =   -1  'True
            Width           =   320
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   300
            Index           =   12
            Left            =   3360
            Picture         =   "PiloteExcelBis.frx":D66C
            Style           =   1  'Graphical
            TabIndex        =   13
            TabStop         =   0   'False
            ToolTipText     =   "Ajouter une feuille au Fichier Excel"
            Top             =   360
            UseMaskColor    =   -1  'True
            Width           =   320
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   500
            Index           =   11
            Left            =   8640
            Picture         =   "PiloteExcelBis.frx":DAC3
            Style           =   1  'Graphical
            TabIndex        =   12
            TabStop         =   0   'False
            ToolTipText     =   "Ouvrir et Voir le fichier Excel correspondant à votre modèle de rapport"
            Top             =   2445
            UseMaskColor    =   -1  'True
            Width           =   630
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   300
            Index           =   4
            Left            =   8160
            Picture         =   "PiloteExcelBis.frx":E765
            Style           =   1  'Graphical
            TabIndex        =   9
            TabStop         =   0   'False
            ToolTipText     =   "Ajouter une condition au filtre"
            Top             =   2400
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   320
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            Height          =   300
            Index           =   5
            Left            =   8160
            Picture         =   "PiloteExcelBis.frx":EBBC
            Style           =   1  'Graphical
            TabIndex        =   8
            TabStop         =   0   'False
            ToolTipText     =   "Supprimer la condition"
            Top             =   3720
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   320
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   300
            Index           =   2
            Left            =   13800
            Picture         =   "PiloteExcelBis.frx":EFFB
            Style           =   1  'Graphical
            TabIndex        =   7
            TabStop         =   0   'False
            ToolTipText     =   "Ajouter un  filtre existant"
            Top             =   720
            UseMaskColor    =   -1  'True
            Width           =   320
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            Height          =   300
            Index           =   3
            Left            =   13800
            Picture         =   "PiloteExcelBis.frx":F452
            Style           =   1  'Graphical
            TabIndex        =   6
            TabStop         =   0   'False
            ToolTipText     =   "Supprimer le filtre"
            Top             =   1800
            UseMaskColor    =   -1  'True
            Width           =   320
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00E0E0E0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   500
            Index           =   38
            Left            =   10200
            Picture         =   "PiloteExcelBis.frx":F891
            Style           =   1  'Graphical
            TabIndex        =   4
            TabStop         =   0   'False
            ToolTipText     =   "Effectuer une Simulation sur cette feuille vers Excel"
            Top             =   3600
            UseMaskColor    =   -1  'True
            Visible         =   0   'False
            Width           =   630
         End
         Begin VB.CommandButton cmd 
            BackColor       =   &H00C0C0C0&
            BeginProperty Font 
               Name            =   "Times New Roman"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            Height          =   500
            Index           =   9
            Left            =   8640
            Picture         =   "PiloteExcelBis.frx":10313
            Style           =   1  'Graphical
            TabIndex        =   2
            TabStop         =   0   'False
            ToolTipText     =   "Rafraichir la Feuille en cours"
            Top             =   3600
            UseMaskColor    =   -1  'True
            Width           =   630
         End
         Begin MSFlexGridLib.MSFlexGrid grdFeuille 
            Height          =   2565
            Left            =   240
            TabIndex        =   3
            Top             =   360
            Visible         =   0   'False
            Width           =   3165
            _ExtentX        =   5583
            _ExtentY        =   4524
            _Version        =   393216
            Cols            =   1
            FixedRows       =   0
            FixedCols       =   0
            BackColor       =   16777215
            ForeColor       =   8388608
            BackColorFixed  =   8454143
            ForeColorFixed  =   0
            BackColorSel    =   8388608
            ForeColorSel    =   16777215
            BackColorBkg    =   16777215
            GridColor       =   16777215
            GridColorFixed  =   16777215
            WordWrap        =   -1  'True
            AllowBigSelection=   0   'False
            ScrollTrack     =   -1  'True
            FocusRect       =   0
            HighLight       =   2
            GridLines       =   0
            GridLinesFixed  =   0
            ScrollBars      =   2
            SelectionMode   =   1
         End
         Begin MSFlexGridLib.MSFlexGrid grdForm 
            Height          =   1815
            Left            =   4680
            TabIndex        =   5
            Top             =   360
            Width           =   9135
            _ExtentX        =   16113
            _ExtentY        =   3201
            _Version        =   393216
            Cols            =   1
            FixedRows       =   0
            FixedCols       =   0
            BackColor       =   16777215
            ForeColor       =   8388608
            BackColorFixed  =   8454143
            ForeColorFixed  =   0
            BackColorSel    =   8388608
            ForeColorSel    =   16777215
            BackColorBkg    =   16777215
            GridColor       =   16777215
            GridColorFixed  =   16777215
            WordWrap        =   -1  'True
            AllowBigSelection=   0   'False
            ScrollTrack     =   -1  'True
            FocusRect       =   0
            HighLight       =   2
            GridLinesFixed  =   0
            ScrollBars      =   2
            SelectionMode   =   1
         End
         Begin MSFlexGridLib.MSFlexGrid grdCond 
            Height          =   1605
            Index           =   0
            Left            =   4560
            TabIndex        =   10
            Top             =   2400
            Visible         =   0   'False
            Width           =   3645
            _ExtentX        =   6429
            _ExtentY        =   2831
            _Version        =   393216
            Cols            =   1
            FixedRows       =   0
            FixedCols       =   0
            BackColor       =   16761024
            ForeColor       =   8388608
            BackColorFixed  =   8454143
            ForeColorFixed  =   0
            BackColorSel    =   8388608
            ForeColorSel    =   16777215
            BackColorBkg    =   16777215
            GridColor       =   16777215
            GridColorFixed  =   16777215
            WordWrap        =   -1  'True
            AllowBigSelection=   0   'False
            ScrollTrack     =   -1  'True
            FocusRect       =   0
            HighLight       =   2
            GridLinesFixed  =   0
            ScrollBars      =   2
            SelectionMode   =   1
         End
         Begin MSFlexGridLib.MSFlexGrid grdCell 
            Height          =   5700
            Index           =   0
            Left            =   120
            TabIndex        =   11
            Top             =   4200
            Width           =   15000
            _ExtentX        =   26458
            _ExtentY        =   10054
            _Version        =   393216
            BackColorSel    =   16777215
            BackColorBkg    =   16761024
            WordWrap        =   -1  'True
            AllowBigSelection=   0   'False
            AllowUserResizing=   1
         End
         Begin MSFlexGridLib.MSFlexGrid grdDem 
            Height          =   1605
            Left            =   11640
            TabIndex        =   18
            Top             =   2400
            Visible         =   0   'False
            Width           =   3180
            _ExtentX        =   5609
            _ExtentY        =   2831
            _Version        =   393216
            Cols            =   1
            FixedRows       =   0
            FixedCols       =   0
            BackColor       =   16777215
            ForeColor       =   8388608
            BackColorFixed  =   8454143
            ForeColorFixed  =   0
            BackColorSel    =   8388608
            ForeColorSel    =   16777215
            BackColorBkg    =   16777215
            GridColor       =   16777215
            GridColorFixed  =   16777215
            WordWrap        =   -1  'True
            AllowBigSelection=   0   'False
            ScrollTrack     =   -1  'True
            FocusRect       =   0
            HighLight       =   2
            GridLines       =   0
            GridLinesFixed  =   0
            ScrollBars      =   2
            SelectionMode   =   1
         End
         Begin MSFlexGridLib.MSFlexGrid grdCondChamp 
            Height          =   1605
            Index           =   0
            Left            =   4560
            TabIndex        =   45
            Top             =   2400
            Visible         =   0   'False
            Width           =   3645
            _ExtentX        =   6429
            _ExtentY        =   2831
            _Version        =   393216
            Cols            =   1
            FixedRows       =   0
            FixedCols       =   0
            BackColor       =   12640511
            ForeColor       =   8421631
            BackColorFixed  =   8454143
            ForeColorFixed  =   8421631
            BackColorSel    =   8388608
            ForeColorSel    =   16777215
            BackColorBkg    =   16777215
            GridColor       =   16777215
            GridColorFixed  =   16777215
            WordWrap        =   -1  'True
            AllowBigSelection=   0   'False
            ScrollTrack     =   -1  'True
            FocusRect       =   0
            HighLight       =   2
            GridLines       =   0
            GridLinesFixed  =   0
            ScrollBars      =   2
            SelectionMode   =   1
         End
         Begin VB.Label LabelC1 
            BackColor       =   &H00C0E0FF&
            Caption         =   "Les conditions sur ce Champ"
            BeginProperty Font 
               Name            =   "MS Sans Serif"
               Size            =   9.75
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   -1  'True
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H000000C0&
            Height          =   255
            Left            =   4320
            TabIndex        =   44
            Top             =   2160
            Width           =   4575
         End
         Begin VB.Label LabelF2 
            BackColor       =   &H00C0E0FF&
            Caption         =   "(A) ajoutées "
            BeginProperty Font 
               Name            =   "MS Sans Serif"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00008000&
            Height          =   255
            Left            =   7920
            TabIndex        =   43
            Top             =   2160
            Width           =   1215
         End
         Begin VB.Label LabelF1 
            BackColor       =   &H00C0E0FF&
            Caption         =   "(F)  du filtre -"
            BeginProperty Font 
               Name            =   "MS Sans Serif"
               Size            =   8.25
               Charset         =   0
               Weight          =   700
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00FF0000&
            Height          =   255
            Left            =   6720
            TabIndex        =   42
            Top             =   2160
            Width           =   1695
         End
         Begin ComctlLib.ImageList listImg 
            Left            =   3840
            Top             =   120
            _ExtentX        =   1005
            _ExtentY        =   1005
            BackColor       =   -2147483643
            ImageWidth      =   13
            ImageHeight     =   14
            MaskColor       =   12632256
            _Version        =   327682
            BeginProperty Images {0713E8C2-850A-101B-AFC0-4210102A8DA7} 
               NumListImages   =   2
               BeginProperty ListImage1 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":10819
                  Key             =   ""
               EndProperty
               BeginProperty ListImage2 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":10A9B
                  Key             =   ""
               EndProperty
            EndProperty
         End
         Begin VB.Label Label4 
            BackColor       =   &H00C0E0FF&
            Caption         =   "Liste des feuilles du tableau Excel"
            BeginProperty Font 
               Name            =   "MS Sans Serif"
               Size            =   9.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00FF0000&
            Height          =   255
            Left            =   360
            TabIndex        =   27
            Top             =   120
            Width           =   3255
         End
         Begin VB.Label Label3 
            BackColor       =   &H00C0E0FF&
            Caption         =   "Les 'à demander'"
            BeginProperty Font 
               Name            =   "MS Sans Serif"
               Size            =   9.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00FF0000&
            Height          =   255
            Left            =   11640
            TabIndex        =   26
            Top             =   2160
            Width           =   1695
         End
         Begin VB.Label LabelF0 
            BackColor       =   &H00C0E0FF&
            Caption         =   "Les conditions d'extraction"
            BeginProperty Font 
               Name            =   "MS Sans Serif"
               Size            =   9.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00FF0000&
            Height          =   255
            Left            =   4320
            TabIndex        =   25
            Top             =   2160
            Width           =   2535
         End
         Begin VB.Label Label1 
            BackColor       =   &H00C0E0FF&
            Caption         =   "Liste des filtres utilisés"
            BeginProperty Font 
               Name            =   "MS Sans Serif"
               Size            =   9.75
               Charset         =   0
               Weight          =   400
               Underline       =   0   'False
               Italic          =   0   'False
               Strikethrough   =   0   'False
            EndProperty
            ForeColor       =   &H00FF0000&
            Height          =   255
            Left            =   5040
            TabIndex        =   24
            Top             =   120
            Width           =   9495
         End
         Begin ComctlLib.ImageList imglst 
            Left            =   4080
            Top             =   120
            _ExtentX        =   1005
            _ExtentY        =   1005
            BackColor       =   -2147483643
            ImageWidth      =   16
            ImageHeight     =   16
            MaskColor       =   12632256
            _Version        =   327682
            BeginProperty Images {0713E8C2-850A-101B-AFC0-4210102A8DA7} 
               NumListImages   =   26
               BeginProperty ListImage1 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":10DED
                  Key             =   ""
               EndProperty
               BeginProperty ListImage2 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":113CF
                  Key             =   ""
               EndProperty
               BeginProperty ListImage3 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":1199D
                  Key             =   ""
               EndProperty
               BeginProperty ListImage4 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":11F43
                  Key             =   ""
               EndProperty
               BeginProperty ListImage5 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":12525
                  Key             =   ""
               EndProperty
               BeginProperty ListImage6 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":14B13
                  Key             =   ""
               EndProperty
               BeginProperty ListImage7 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":150F5
                  Key             =   ""
               EndProperty
               BeginProperty ListImage8 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":156D7
                  Key             =   ""
               EndProperty
               BeginProperty ListImage9 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":15B59
                  Key             =   ""
               EndProperty
               BeginProperty ListImage10 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":1613B
                  Key             =   ""
               EndProperty
               BeginProperty ListImage11 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":1671D
                  Key             =   ""
               EndProperty
               BeginProperty ListImage12 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":16CD7
                  Key             =   ""
               EndProperty
               BeginProperty ListImage13 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":17255
                  Key             =   ""
               EndProperty
               BeginProperty ListImage14 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":1780F
                  Key             =   ""
               EndProperty
               BeginProperty ListImage15 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":17DC9
                  Key             =   ""
               EndProperty
               BeginProperty ListImage16 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":183AB
                  Key             =   ""
               EndProperty
               BeginProperty ListImage17 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":1898D
                  Key             =   ""
               EndProperty
               BeginProperty ListImage18 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":18F6F
                  Key             =   ""
               EndProperty
               BeginProperty ListImage19 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":19619
                  Key             =   ""
               EndProperty
               BeginProperty ListImage20 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":19CC3
                  Key             =   ""
               EndProperty
               BeginProperty ListImage21 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":1A36D
                  Key             =   ""
               EndProperty
               BeginProperty ListImage22 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":1AA17
                  Key             =   ""
               EndProperty
               BeginProperty ListImage23 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":1AF39
                  Key             =   ""
               EndProperty
               BeginProperty ListImage24 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":1B45B
                  Key             =   ""
               EndProperty
               BeginProperty ListImage25 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":1B97D
                  Key             =   ""
               EndProperty
               BeginProperty ListImage26 {0713E8C3-850A-101B-AFC0-4210102A8DA7} 
                  Picture         =   "PiloteExcelBis.frx":1BE9F
                  Key             =   ""
               EndProperty
            EndProperty
         End
      End
   End
   Begin VB.Menu MnuSelection 
      Caption         =   "Mode sélection"
      Begin VB.Menu MnuSelectionnerDe_A 
         Caption         =   "Sélectionner de ... à ..."
      End
      Begin VB.Menu MnuSelectionnerUne_par_Une 
         Caption         =   "Sélectionner par click"
      End
      Begin VB.Menu MnuSelection_Voir 
         Caption         =   "Voir la Sélection"
      End
      Begin VB.Menu MnuSelectionStop 
         Caption         =   "Vider la Sélection"
      End
      Begin VB.Menu MnuSelectionNewForm 
         Caption         =   "Transférer vers autre formulaire"
      End
   End
   Begin VB.Menu MnuAuto 
      Caption         =   "&Automatique"
      Visible         =   0   'False
   End
   Begin VB.Menu MnuAide 
      Caption         =   "Aide"
      Visible         =   0   'False
   End
   Begin VB.Menu MnuQuitter 
      Caption         =   "&Quitter"
      Visible         =   0   'False
   End
   Begin VB.Menu Menu 
      Caption         =   "Menu"
      Visible         =   0   'False
      Begin VB.Menu MnuDemande 
         Caption         =   "MnuDemande"
         Visible         =   0   'False
         Begin VB.Menu MnuDemandeGlobaleFormulaire 
            Caption         =   "Globale à ce formulaire"
         End
         Begin VB.Menu MnuDemandeGlobaleFiltre 
            Caption         =   "Globale à ce filtre"
         End
         Begin VB.Menu MnuDemandeLocale 
            Caption         =   "Locale"
         End
      End
      Begin VB.Menu MnuFiltre 
         Caption         =   "MnuFiltre"
         Begin VB.Menu MnuFiltreRenommer 
            Caption         =   "Renommer ce filtre"
         End
         Begin VB.Menu MnuFiltreRecopier 
            Caption         =   "Recopier un Filtre"
            Visible         =   0   'False
         End
      End
      Begin VB.Menu MnuFeuille 
         Caption         =   "MnuFeuille"
         Begin VB.Menu MnuFeuilleChargerTout 
            Caption         =   "Charger toutes les feuilles"
         End
         Begin VB.Menu MnuFeuilleCharger 
            Caption         =   "Charger cette feuille"
         End
         Begin VB.Menu MnuFeuilleNbrLignes 
            Caption         =   "Nombre de lignes"
         End
         Begin VB.Menu MnuFeuilleCopier 
            Caption         =   "Copier"
         End
         Begin VB.Menu MnuFeuilleColler 
            Caption         =   "Coller"
         End
         Begin VB.Menu MnuFeuilleRenommer 
            Caption         =   "Renommer"
         End
         Begin VB.Menu MnuFeuilleSupprimer 
            Caption         =   "Supprimer"
         End
      End
      Begin VB.Menu MnuSimulCell 
         Caption         =   "MnuSimulCell"
         Begin VB.Menu MnuSimulCellLib1 
            Caption         =   "MnuSimulCellLib1"
            Enabled         =   0   'False
         End
         Begin VB.Menu MnuSimulCellLib2 
            Caption         =   "MnuSimulCellLib2"
            Enabled         =   0   'False
         End
         Begin VB.Menu MnuSimulCellLib3 
            Caption         =   "MnuSimulCellLib3"
            Enabled         =   0   'False
         End
         Begin VB.Menu MnuSimulCellLib4 
            Caption         =   "----------------------------------------------------"
            Enabled         =   0   'False
         End
         Begin VB.Menu MnuChpCopier 
            Caption         =   "Copier le Champ"
         End
         Begin VB.Menu MnuChpColler 
            Caption         =   "Coller le Champ"
         End
         Begin VB.Menu MnuChpRelier 
            Caption         =   "Relier le champ"
         End
         Begin VB.Menu MnuChpCollerSelection 
            Caption         =   "Coller la Sélection"
         End
         Begin VB.Menu MnuChpDeplacerSelection 
            Caption         =   "Déplacer la Sélection"
         End
         Begin VB.Menu MnuSimulCellSimulTout 
            Caption         =   "Simulation"
            Begin VB.Menu MnuSimulCellSimul 
               Caption         =   ">> Effectuer une simulation sur ce champ"
               Visible         =   0   'False
            End
            Begin VB.Menu MnuSimulCellSimulFeuille 
               Caption         =   ">> Effectuer une simulation sur cette feuille"
               Visible         =   0   'False
            End
            Begin VB.Menu MnuSimulCellSimulToutes 
               Caption         =   ">> Effectuer une simulation complète"
            End
         End
         Begin VB.Menu MnuSimulCellDeplacerTout 
            Caption         =   "Déplacement - Transfert"
            Begin VB.Menu MnuSimulCellDeplacer 
               Caption         =   "Déplacer ce champ"
            End
            Begin VB.Menu MnuSimulCellDeplacerTous 
               Caption         =   "Déplacer tous les champs de cette fenêtre"
            End
            Begin VB.Menu MnuSimulCellChgFiltreUnChp 
               Caption         =   "Transférer ce champ vers un autre Filtre"
            End
            Begin VB.Menu MnuSimulCellChgFiltreDesChp 
               Caption         =   "Transférer plusieurs champs vers un autre Filtre"
            End
            Begin VB.Menu MnuSimulCellChgFiltreTous 
               Caption         =   "Transférer vers un autre filtre "
               Begin VB.Menu MnuSimulCellChgFiltreFenChp 
                  Caption         =   "seulement les champs de cette fenêtre liés à ce filtre"
               End
               Begin VB.Menu MnuSimulCellChgFiltreTousChp 
                  Caption         =   "tous les champs liés à ce filtre"
               End
            End
         End
         Begin VB.Menu MnuLigCol 
            Caption         =   "Ajouter lignes - colonnes"
            Begin VB.Menu MnuLigCol_AddLigDessus 
               Caption         =   "Ajouter des lignes au dessus"
            End
            Begin VB.Menu MnuLigCol_AddLigDessous 
               Caption         =   "Ajouter des lignes au dessous"
            End
            Begin VB.Menu MnuLigCol_AddColAvant 
               Caption         =   "Ajouter des colonnes à droite"
            End
         End
      End
      Begin VB.Menu MnuChpGraphique 
         Caption         =   "MnuChpGraphique"
         Begin VB.Menu MnuChpGraphiqueHisto 
            Caption         =   "Histogramme"
         End
         Begin VB.Menu MnuChpGraphiqueSecteur 
            Caption         =   "Secteur"
         End
         Begin VB.Menu MnuChpGraphiqueCopier 
            Caption         =   "Créer à partir de ..."
         End
         Begin VB.Menu MnuChpGraphiqueRenommer 
            Caption         =   "Renommer"
         End
      End
      Begin VB.Menu MnuChpAjout 
         Caption         =   "MnuChpAjout"
         Begin VB.Menu MnuChpAjoutChamp 
            Caption         =   "Ajouter un Champ"
         End
         Begin VB.Menu MnuChpAjoutPlusieursChamp 
            Caption         =   "Ajouter Plusieurs Champ du filtre"
         End
         Begin VB.Menu MnuChpAjoutChampFiltre 
            Caption         =   "Ajouter une liste de champs détaillés "
         End
         Begin VB.Menu MnuChpAjoutResultatRapport 
            Caption         =   "Ajouter un résultat d'un rapport"
         End
         Begin VB.Menu MnuChpAjoutIndic 
            Caption         =   "Ajouter un indicateur"
            Enabled         =   0   'False
         End
      End
   End
End
Attribute VB_Name = "PiloteExcelBis"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Option Explicit

Private Button_GrdCell As Integer

' Pour le menu Selectionner
Private p_Mode_SelectionDeA As Boolean
Private p_Mode_SelectionClick As Boolean
Private p_Tab_Selection()

Private StopperChargement As Boolean
Private ChargementEnCours As Boolean

Private UrlAppelUneCellule As String

' caractéristiques de l'ancienne cellule
Private p_Anc_Cell_BackColor
Private p_Anc_Cell_GridIndice
Private p_Anc_Cell_GridRow
Private p_Anc_Cell_GridCol

Private Const ImgEnregPasModif = 21
Private Const ImgEnregModif1 = 19
Private Const ImgEnregModif2 = 18
Private Const ImgEnregCritique = 20

'Private p_dansExcel As Boolean
'Private p_dansGrid As Boolean

Private p_XgrdCell As Integer, p_YgrdCell As Integer

Private Const Cmd_Police_Copier = 0
Private Const Cmd_Police_Valider = 2
Private Const Cmd_Police_Choisir = 1
Private Const Cmd_Police_Coller = 3
Private g_Police_Color As String
Private g_Police_Name As String
Private g_Police_Italic As String
Private g_Police_Size As String
Private g_Police_Bold As String

Private Const Cmd_Formule_Plus = 1
Private Const Cmd_Formule_Moins = 2
Private Const Cmd_Formule_Somme = 3
Private Const Cmd_Formule_Vers = 4
Private Const Cmd_Formule_Div = 0
Private Const Cmd_Formule_Mult = 5
Private Const Cmd_Formule_ParG = 6
Private Const Cmd_Formule_ParD = 7
Private Const Cmd_Formule_Valider = 8

Private CellAncRow As String, CellAncCol As String
Private DerKeycode As Integer

Private g_Ajouter_Champ_Index As Integer
Private g_Ajouter_Champ_numfiltre_encours As Integer
Private g_Ajouter_Champ_grdCell_RowSel As String
Private g_Ajouter_Champ_grdCell_ColSel As String
Private g_Ajouter_Champ_bdeja As Boolean

Private g_ChpRelier As String

Private bDeplacer As Boolean
Private bDragDropCell As Boolean
Private iDragDropCell As Integer
Private XDragDropCell As Integer
Private YDragDropCell As Integer
Private XDeplacer As Integer
Private YDeplacer As Integer
Private bModeFormule As Boolean
Private g_ColSelDest As String
Private bLigCol As Boolean
Private bDeplacerTous As Boolean
Private bTransfereTous As Boolean
Private bTransfereSelection As Boolean
Private bTransfereFen As Boolean
Private bCopieFiltre As Boolean
Private bTransfereUn As Boolean
Private bTransfereDes As Boolean
Private bRafraichir As Boolean
Private lstTransfert As String

Private g_DernierNumFor As Integer
Private g_DernierNumFiltre As Integer

Private bfaire_Click As Boolean
Private bcopier_feuille As Boolean
Private SimulationFaite As Boolean
Private NumChpDernierChoisi As Integer
Private LibChpDernierChoisi As String
Private g_cheminTB_Copie As String
Private g_bNouveau As Boolean

' contenu de la position "GrdCondChpIndTbl" de la ligne cliquée dans GrdCondChamp
Private g_i_CondTbChamp As Integer
' index du GrdCondChamp cliqué
Private g_i_IndexGrdChamp As Integer
' index de la ligne cliquée
Private g_i_LigneGrdChamp As Integer
Private g_modecopierConChamp As Boolean

Private Const Ligne_Lib_Val = 1
Private Const Ligne_Lib = 2
Private Const Ligne_Val = 3
Private Const Colonne_Lib_Val = 4
Private Const Colonne_Lib = 5
Private Const Colonne_Val = 6
Private Const Total_Val = 7
Private Const Pourcent_Val = 8

Private Const GrdCond_NumFiltre = 0
Private Const GrdCond_Oper = 1
Private Const GrdCond_CondImg = 2
Private Const GrdCond_CondF = 3
Private Const GrdCond_TypeFL = 4
Private Const GrdCond_PourFeuilles = 5
Private Const GrdCond_NumIndice = 6
Private Const GrdCond_Cond = 7
Private Const GrdCond_CondPF = 8
Private Const GrdCond_CondFctValid = 9
Private Const GrdCond_I_TblCond = 10
Private Const GrdCond_CondSQL = 11

Private Const GrdCondChpChpNum = 0
Private Const GrdCondChpCndNum = 1
Private Const GrdCondChpCndOper = 2
Private Const GrdCondChpCndVal = 3
Private Const GrdCondChpBoolDetail = 4
Private Const GrdCondChpImgDetail = 5
Private Const GrdCondChpCndFrancais = 7
Private Const GrdCondChpCndSQL = 8
Private Const GrdCondChpIndTbl = 9

Private Const GrdFeuil_FenNum = 0
Private Const GrdFeuil_FenNom = 1
Private Const GrdFeuil_LoadFait = 2
Private Const GrdFeuil_RowMax = 3
Private Const GrdFeuil_ColMax = 4
Private Const GrdFeuil_Chargement = 5

' ***************
Private ModeEnvoiFichier As String

'Index sur les objets cmd
Private Const CMD_NOUVEAU_MODELE = 0
Private Const CMD_FERMER = 1
Private Const CMD_PRM_FORM = 2
Private Const CMD_SUPPR_FORM = 3
Private Const CMD_PRM_COND = 4
Private Const CMD_SUPPR_COND = 5
Private Const CMD_NOUVEAU_FILTRE = 6
Private Const CMD_AIDE = 7
Private Const CMD_ENREGISTRER = 8
Private Const CMD_RAFRAICHIR = 9
Private Const CMD_EXCEL_CELL = 11
Private Const CMD_SIMULATION = 10
Private Const CMD_AJOUT_FENETRE = 12
Private Const CMD_FEN_FL_BAS = 13
Private Const CMD_FEN_FL_HAUT = 14
Private Const CMD_PUBLIER = 15
Private Const CMD_PARAM_FILTRE = 16
Private Const CMD_AJOUT_DEM = 17
Private Const CMD_SUPPR_DEM = 18
Private Const CMD_VOIR_FICHIER_PARAM = 19
Private Const CMD_VOIR_LISTE = 20
Private Const CMD_VOIR_SQL = 21
Private Const CMD_OUVRIR_PARAM = 22
Private Const CMD_VOIR_FORM = 23
Private Const CMD_TOUT_CHARGER = 24
Private Const CMD_CHARGER_LE_RESTE = 25
Private Const CMD_PARAM_PUBLIER = 26
Private Const CMD_TMP_VERS_MODELE = 27
Private Const CMD_MODELE_VERS_TMP = 28
Private Const CMD_AJOUT_COND_CHAMP = 29
Private Const CMD_SUPPR_COND_CHAMP = 30
Private Const CMD_ACCES_KALIDOC = 31
Private Const CMD_MODE_POLICE = 32
Private Const CMD_MODE_FORMULE = 33
Private Const CMD_FAIRE_FICHIER = 34
Private Const CMD_MODE_CHAMP = 35
Private Const CMD_MODE_LIEN = 36
Private Const CMD_MODE_SIMUL = 37
Private Const CMD_SIMULATION_UNE = 38
Private Const CMD_SIMULATION_ECRAN = 39
Private Const CMD_MODE_GRAPHIQUE = 40
Private Const CMD_GENERER_AUTO = 41
Private Const CMD_PRM_DEMANDER = 42
Private Const CMD_CPY_CONDCHAMP = 43
Private Const CMD_VOIR_HTML = 44
Private Const CMD_FAIRE_HTML = 45
Private Const CMD_ENVOYER_MAIL = 46
Private Const CMD_VOIR_TEMP = 47
Private Const CMD_VIDER_TEMP = 48
Private Const CMD_VISIBLE_EXCEL = 49
Private Const CMD_VERS_XLSX = 50

Private Const LAB_FEUILLE = 1
Private Const LAB_FORM = 0
Private Const LAB_REGLE = 2

Private g_numModele As Long
Private g_NumForm As Long

' Private p_numfiltre_encours As Integer
' Private p_numindice_encours As Integer
Private g_mode_saisie As Boolean
Private g_txt_avant As String
Private g_form_active As Boolean
Private g_numfeuille As Integer
Private g_Feuille1_araffraichir As Integer
Private g_Feuille2_araffraichir As Integer

Private g_CheminModele As String

' Tableau des Champs et conditions
Dim NomFichierParam As String
Dim BoolFaireSauveFenetre As Boolean

Private Const ColMax = 26
Private Const RowMax = 20


Public Function AppelFrm(ByVal v_nummodele As String, ByVal v_NumForm As String, ByVal v_Trait As String) As Boolean

    g_numModele = v_nummodele
    g_NumForm = v_NumForm
    p_TraitPublier = v_Trait
    p_bool_forcer_vider_temp = False
Faire:
    BoolFaireSauveFenetre = False
    bRafraichir = False
    
    Me.Visible = False
    
    FctTrace ("Début AppelFrm")
    Me.Show 1
    FctTrace ("Apres AppelFrm")
    
    If p_boolRechargerModeleAuto Then
        p_boolRechargerModeleAuto = False
        GoTo Faire
    End If
    FctTrace ("Fin AppelFrm")
 
End Function

Private Function Choisir_Form()

    Dim sql As String
    Dim n As Integer
    Dim rs As rdoResultset
    
    Me.LblHelp.Caption = "Choisir le Formulaire"
    Me.LblHelp.Refresh
    
    Call CL_Init
    n = 0
    
    sql = "select * from formulaire where for_num=" & g_DernierNumFor _
        & " and for_lstrespkw like '%U" & p_NumUtil & ";1;%'"
    If p_CodeUtil = "ROOT" Then
        sql = "select * from formulaire where for_num=" & g_DernierNumFor
    End If
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Choisir_Form = 0
        Exit Function
    End If
    ' celui sélectionné
    If Not rs.EOF Then
        If rs("For_Lib").Value <> "" Then
            Call CL_AddLigne(rs("For_Lib").Value, rs("FOR_Num").Value, "", True)
            n = n + 1
        End If
    End If
    rs.Close
    ' les autres
    sql = "select * from formulaire where for_num<>" & g_DernierNumFor _
            & " and for_lstrespkw like '%U" & p_NumUtil & ";1;%' order by for_Lib"
    If p_CodeUtil = "ROOT" Then
        sql = "select * from formulaire where for_num<>" & g_DernierNumFor
    End If
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Choisir_Form = 0
        Exit Function
    End If
    ' les autres
    While Not rs.EOF
        If rs("For_Lib").Value <> "" Then
            Call CL_AddLigne(rs("For_Lib").Value, rs("FOR_Num").Value, "", False)
            n = n + 1
        End If
        rs.MoveNext
    Wend
    rs.Close
    If n = 0 Then
        Choisir_Form = 0
        MsgBox "Aucun formulaire n'est disponible pour vous"
        End
        Exit Function
    End If
    
    Call CL_InitTitreHelp("Formulaires disponibles", "")
    Call CL_AddBouton("", p_chemin_appli + "\btnok.gif", vbKeyO, vbKeyF1, 0)
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
    Call CL_InitTaille(0, -15)
    ChoixListe.Show 1
    If CL_liste.retour = 1 Then
        Choisir_Form = 0
        Exit Function
    End If
    
    Choisir_Form = CL_liste.lignes(CL_liste.pointeur).num
    
End Function

Private Function ajouter_filtre()

    Dim sql As String, sret As String, sfct As String
    Dim n As Integer, i As Integer
    Dim ret As Integer
    Dim numfor As Long
    Dim leIndex As Integer
    Dim rs As rdoResultset
    Dim laDim As Integer
    Dim NumFiltre As Integer
    Dim Indfiltre As Integer
    Dim bajout As Boolean
    Dim selected As Boolean
    Dim trouve As Boolean
    Dim ProchainIndex As Integer
    Dim DimTbl As Integer
    Dim nbFiltre     As Integer
    
Choisir_Form:
    numfor = Choisir_Form
    If numfor = 0 Then
        ajouter_filtre = False
        Exit Function
    End If
    
    Call CL_Init
    n = 0
    
    If p_ModeAssistant Then
        Me.FrmHTTPD.Caption = "Choix du Filtre"
        Me.PgbarHTTPDTaille.Value = 6
    End If
    'MsgBox "Choisissez un filtre à appliquer à votre rapport"
    
    'Call CL_AddLigne("Aucun Filtre", 0, "", False)
    If numfor = g_DernierNumFor Then
        ' le dernier sélectionné
        sql = "select * from filtreform where ff_num=" & g_DernierNumFiltre
        If Odbc_SelectV(sql, rs) = P_ERREUR Then
            Exit Function
        End If
        While Not rs.EOF
            Call CL_AddLigne(rs("FF_Titre").Value, rs("FF_Num").Value, "", True)
            n = n + 1
            rs.MoveNext
            nbFiltre = 1
        Wend
        rs.Close
    End If
    
    ' les autres
    sql = "select * from filtreform where ff_num<> " & g_DernierNumFiltre & " and ff_fornum=" & numfor _
            & " order by ff_titre"
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Function
    End If
    If nbFiltre = 0 And rs.EOF Then
        ret = MsgBox("Le Formulaire choisi n'a pas de filtre" & Chr(13) & Chr(10) & "Voulez vous en créer un ?", vbDefaultButton1 + vbYesNo + vbQuestion)
        If ret = vbYes Then
            Call Nouveau_IE_Filtre(numfor)
        Else
            GoTo Choisir_Form
            Exit Function
        End If
    End If
    While Not rs.EOF
        'Debug.Print rs("FF_Num").Value
        Call CL_AddLigne(rs("FF_Titre").Value, rs("FF_Num").Value, "", False)
        n = n + 1
        rs.MoveNext
    Wend
    rs.Close
    If n = 0 Then
        ajouter_filtre = False
        Exit Function
    End If
    
    Call CL_InitTitreHelp("Filtres disponibles", "")
    Call CL_AddBouton("", p_chemin_appli + "\btnok.gif", vbKeyO, vbKeyF1, 0)
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
    'Call CL_InitMultiSelect(True, True)
    Call CL_InitTaille(0, -15)
    ChoixListe.Show 1
    
    If CL_liste.retour = 1 Then
        ajouter_filtre = False
        Exit Function
    End If
    ' chercher le prochain index à utiliser
    ProchainIndex = ChercherProchainIndex(CL_liste.lignes(CL_liste.pointeur).num)
    
    ' si ce formulaire n'est pas encore dans le tableau, l'y mettre
    'For i = 0 To UBound(CL_liste.lignes)
    '    If CL_liste.lignes(i).selected Then
            NumFiltre = CL_liste.lignes(CL_liste.pointeur).num
            Indfiltre = ProchainIndex
            If ajouter_form_grd(NumFiltre, Indfiltre, True, False, "") = P_OUI Then
                bajout = True
                ' charger les conditions de ce formulaire dans tblCond
                RecupereConditionF 0, NumFiltre, Indfiltre
                ' charger le grid des regles pour ce formulaire
                Call ChargerGridRegle(NumFiltre, Indfiltre)
                ' Ajouter dans tbl_fichExcel
                On Error GoTo Err_Tab
                DimTbl = UBound(tbl_fichExcel) + 1
                GoTo Suite_Tab
Err_Tab:
                DimTbl = 0
                Resume Suite_Tab
Suite_Tab:
                On Error GoTo 0
                ReDim Preserve tbl_fichExcel(DimTbl) As SFICH_PARAM_EXCEL
                p_bool_tbl_fichExcel = True
                tbl_fichExcel(DimTbl).CmdType = "CONDF"
                tbl_fichExcel(DimTbl).CmdFenNum = g_numfeuille
                tbl_fichExcel(DimTbl).CmdFormNum = tbl_rdoF(UBound(tbl_rdoF)).RDOF_num
                tbl_fichExcel(DimTbl).CmdChpNum = "0"
                tbl_fichExcel(DimTbl).CmdFormIndice = tbl_rdoF(UBound(tbl_rdoF)).RDOF_FormIndice
            End If
    '    End If
    'Next i
    
    If bajout Then
        If grdForm.Rows > 0 Then
            cmd(CMD_SUPPR_FORM).Visible = True
        End If
        Call verifSiSauve
        ajouter_filtre = True
    Else
        ajouter_filtre = False
    End If
    
End Function

Private Function ChercherProchainIndex(ByVal ff_num As Integer)
    Dim i As Integer
    Dim PlusGrand As Integer
    
    PlusGrand = 0
    For i = 0 To grdForm.Rows - 1
        If grdForm.TextMatrix(i, GrdForm_FF_Num) = ff_num Then
            If grdForm.TextMatrix(i, GrdForm_FF_NumIndice) > PlusGrand Then
                PlusGrand = grdForm.TextMatrix(i, GrdForm_FF_NumIndice)
            End If
        End If
    Next i
    ChercherProchainIndex = PlusGrand + 1

End Function

Private Function FctAttribIndex(v_NumFiltre, v_numindice)
    Dim i As Integer, ind As Integer
    
    ind = 0
    On Error GoTo suite
    ind = UBound(p_tbl_index(), 1)
    For i = 1 To ind
        If p_tbl_index(i).NumFiltre = v_NumFiltre Then
            If p_tbl_index(i).NumIndice = v_numindice Then
                FctAttribIndex = p_tbl_index(i).NumIndex
                Exit Function
            End If
        End If
    Next i
suite:
    ind = ind + 1
    ReDim Preserve p_tbl_index(ind) As SINDEX
    p_tbl_index(ind).NumFiltre = v_NumFiltre
    p_tbl_index(ind).NumIndice = v_numindice
    p_tbl_index(ind).NumIndex = ind
    FctAttribIndex = p_tbl_index(ind).NumIndex

End Function

Private Function ChargerGridRegle(ByVal v_NumFiltre As Integer, ByVal v_numindice As Integer)
    Dim i As Integer, lig As Integer, i_grdregle As Integer
    Dim j As Integer
    Dim sCnd As String
    Dim sOp As String
    Dim k As Integer
    Dim kdeja As Boolean
    Dim leUbound As Integer
    Dim leIndex As Integer
    Dim IndexGrd As Integer
    
    'Label(LAB_REGLE).Visible = True
    cmd(CMD_PRM_COND).Visible = True
    cmd(CMD_SUPPR_COND).Visible = True
    
    '''''leIndex = (v_numFiltre * 100) + v_numindice
    leIndex = FctAttribIndex(v_NumFiltre, v_numindice)
    Load grdCond(leIndex)
    For i = 0 To grdForm.Rows - 1
        i_grdregle = FctAttribIndex(grdForm.TextMatrix(i, GrdForm_FF_Num), grdForm.TextMatrix(i, GrdForm_FF_NumIndice))
        'i_grdregle = (IndexGrd)
        '''''i_grdregle = (grdForm.TextMatrix(i, GrdForm_FF_Num) * 100) + grdForm.TextMatrix(i, GrdForm_FF_NumIndice)
        grdCond(i_grdregle).Visible = False
    Next i
    'grdCond(leIndex).Visible = True
    grdCond(leIndex).Cols = 12
    grdCond(leIndex).Rows = 0
    grdCond(leIndex).ColWidth(GrdCond_NumFiltre) = 0                ' cachée
    grdCond(leIndex).ColWidth(GrdCond_NumIndice) = 0                ' cachée
    grdCond(leIndex).ColWidth(GrdCond_Oper) = 0                     ' en kalitech
    grdCond(leIndex).ColWidth(GrdCond_CondImg) = 300
    grdCond(leIndex).ColWidth(GrdCond_CondF) = grdCond(leIndex).Width - 1000   ' en francais
    grdCond(leIndex).ColWidth(GrdCond_Cond) = 0                     ' condition cachée
    grdCond(leIndex).ColWidth(GrdCond_CondPF) = 0                   ' condition cachée
    grdCond(leIndex).ColWidth(GrdCond_TypeFL) = 300                 ' Type
    grdCond(leIndex).ColWidth(GrdCond_PourFeuilles) = 700           ' Limiter à certaines feuilles
    grdCond(leIndex).ColWidth(GrdCond_CondFctValid) = 0             ' FctValid du champ
    grdCond(leIndex).ColWidth(GrdCond_I_TblCond) = 0                ' I dans Tbl_Cond
    On Error GoTo Err_Tab
    i = UBound(tbl_cond())
    For i = 0 To UBound(tbl_cond())
        If tbl_cond(i).CondType = "CONDF" And tbl_cond(i).CondNumFiltre = v_NumFiltre And tbl_cond(i).CondFormIndice = v_numindice Then
            If i > 0 Then
                grdCond(leIndex).AddItem "", lig
            Else
                grdCond(leIndex).AddItem ""
                lig = grdCond(leIndex).Rows - 1
            End If
            
            If tbl_cond(i).CondType = "CONDF" Then
                grdCond(leIndex).TextMatrix(lig, GrdCond_NumFiltre) = tbl_cond(i).CondNumFiltre
                grdCond(leIndex).TextMatrix(lig, GrdCond_NumIndice) = tbl_cond(i).CondFormIndice
                grdCond(leIndex).TextMatrix(lig, GrdCond_Oper) = tbl_cond(i).CondOper
                grdCond(leIndex).TextMatrix(lig, GrdCond_CondF) = tbl_cond(i).CondenFrancais
                grdCond(leIndex).TextMatrix(lig, GrdCond_CondPF) = tbl_cond(i).CondPasFrancais
                grdCond(leIndex).row = lig
                grdCond(leIndex).col = GrdCond_CondF
                grdCond(leIndex).CellFontBold = True
                grdCond(leIndex).TextMatrix(lig, GrdCond_TypeFL) = "F"
                grdCond(leIndex).TextMatrix(lig, GrdCond_CondFctValid) = tbl_cond(i).CondFctValid
                grdCond(leIndex).TextMatrix(lig, GrdCond_CondSQL) = tbl_cond(i).CondenSQL
                ' correspondance Grid - Tableau
                grdCond(leIndex).TextMatrix(lig, GrdCond_I_TblCond) = i
                tbl_cond(i).CondLigneDansGrid = lig
                
                grdCond(leIndex).col = GrdCond_CondImg
                If tbl_cond(i).CondBoolDetail Then
                    grdCond(leIndex).RowHeight(lig) = 260
                    Set grdCond(leIndex).CellPicture = imglst.ListImages(IMG_CHP_DET).Picture
                Else
                    grdCond(leIndex).RowHeight(lig) = 240
                    Set grdCond(leIndex).CellPicture = Nothing
                End If
            End If
        End If
    Next i
Err_Tab:
    On Error GoTo 0
    grdCond(leIndex).Visible = True
    grdDem.Visible = False
End Function


Private Function FctMetCouleur(v_type As String, v_grid As Variant)
    Dim AncCol As Integer, ancrow As Integer
    Dim i As Integer, j As Integer
    
    If v_type = "COND" Or v_type = "DEM" Then
        Me.LabelF0.Visible = True
        Me.LabelF1.Visible = True
        Me.LabelF2.Visible = True
        Me.LabelC1.Visible = False
        cmd(CMD_AJOUT_COND_CHAMP).Visible = False
        cmd(CMD_SUPPR_COND_CHAMP).Visible = False
    End If
    
    On Error GoTo Fin
    AncCol = v_grid.col
    ancrow = v_grid.row
    For i = 0 To v_grid.Rows - 1
        v_grid.row = i
        For j = 0 To v_grid.Cols - 1
            v_grid.col = j
            If v_type = "COND" Then
                If v_grid.TextMatrix(i, GrdCond_TypeFL) = "F" Then
                    v_grid.CellForeColor = Me.LabelF0.ForeColor
                Else
                    v_grid.CellForeColor = Me.LabelF2.ForeColor
                End If
            ElseIf v_type = "DEM" Then
                If v_grid.TextMatrix(i, GrdCond_TypeFL) = "A" Then
                    v_grid.CellForeColor = Me.LabelF2.ForeColor
                Else
                    v_grid.CellForeColor = Me.LabelF0.ForeColor
                End If
            End If
        Next j
    Next i
Fin:
    On Error Resume Next
    v_grid.col = AncCol
    v_grid.row = ancrow
End Function

Private Function modifier_cond(v_index As Integer)
    Dim Frm As Form
    Dim straction As String
    Dim pos1 As Integer, pos2 As Integer
    Dim bcr As String
    Dim numcond As Integer, numfor As Integer
    Dim indTbCond As Integer, nb As Integer, lig As Integer
    Dim LaCond As String, LaCondFrancais As String
    Dim s As String
    Dim Droite As String
    Dim Gauche As String
    Dim posOU As Integer, posET As Integer
    Dim i As Integer
    Dim laS As String, laSF As String
    Dim encore As Boolean
    Dim itbl_rdoL As Integer, indRDO As Integer
    Dim NumIndice As Integer
    Dim leIndex As Integer
    Dim laSPF As String
    Dim laSQL As String
    Dim laSinit As String, laSFinit As String, laSPFinit As String
    Dim gauchePF As String, posPF As Integer
    Dim isuppr As Integer
    Dim num_a_suppr As Integer
    Dim lenomchp As String
    
    numcond = 0
    numfor = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num)
    NumIndice = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice)
    'leIndex = numfor * 100 + NumIndice
    leIndex = v_index
    If grdCond(leIndex).TextMatrix(grdCond(leIndex).RowSel, GrdCond_NumFiltre) = -1 Then
        ' déjà supprimé
        MsgBox "Cette condition est supprimée."
        Exit Function
    End If
    num_a_suppr = grdCond(leIndex).TextMatrix(grdCond(leIndex).RowSel, GrdCond_Oper)
    straction = grdCond(leIndex).TextMatrix(grdCond(leIndex).row, GrdCond_Cond) ' PF)
    Set Frm = PrmFctJSChp
    bcr = PrmFctJSChp.AppelFrm("Modif", True, numcond, straction, 0, numfor)
    Set Frm = Nothing
    If bcr <> "" Then
        nb = STR_GetNbchamp(bcr, "¤")
        If nb = 3 Then
            bcr = bcr & "¤"
        End If
        bcr = reformer_BCR(numfor, bcr)
        Call FaitConditionChamp(bcr, laSQL, laSF)
        
        Call verifSiSauve
        ' remplacer le bon tbcond
        i = grdCond(leIndex).TextMatrix(grdCond(leIndex).row, GrdCond_I_TblCond)
        
        tbl_cond(i).CondNumFiltre = numfor
        tbl_cond(i).CondFormIndice = NumIndice
        tbl_cond(i).CondOper = bcr
        tbl_cond(i).CondenFrancais = laSF
        tbl_cond(i).CondPasFrancais = bcr
        tbl_cond(i).CondenSQL = laSQL
        tbl_cond(i).CondType = "CONDL"  ' condition locale (ajoutée)
        
        ' modifier dans grdcond
        lig = grdCond(leIndex).row
        grdCond(leIndex).TextMatrix(lig, GrdCond_NumFiltre) = numfor
        grdCond(leIndex).TextMatrix(lig, GrdCond_NumIndice) = NumIndice
        grdCond(leIndex).TextMatrix(lig, GrdCond_Oper) = itbl_rdoL
        grdCond(leIndex).TextMatrix(lig, GrdCond_CondF) = laSF
        grdCond(leIndex).TextMatrix(lig, GrdCond_Cond) = bcr
        grdCond(leIndex).TextMatrix(lig, GrdCond_CondPF) = bcr
        grdCond(leIndex).TextMatrix(lig, GrdCond_TypeFL) = "A"  '   "L"
        grdCond(leIndex).TextMatrix(lig, GrdCond_CondFctValid) = ""
    End If
End Function


Private Function ajouter_cond(v_Trait As String, ind_tbl_fichExcel As Integer)
    Dim Frm As Form
    Dim pos1 As Integer, pos2 As Integer
    Dim bcr As String
    Dim numcond As Integer, numfor As Integer
    Dim indTbCond As Integer, nb As Integer, lig As Integer
    Dim LaCond As String, LaCondFrancais As String
    Dim s As String
    Dim laSPF As String
    Dim lenomchp As String
    Dim Loper As String
    Dim Droite As String
    Dim Gauche As String
    Dim UnBcr As String
    Dim pos As Integer
    Dim i As Integer
    Dim lis As Integer
    Dim laS As String, laSF As String
    Dim encore As Boolean
    Dim itbl_rdoL As Integer, indRDO As Integer
    Dim NumIndice As Integer
    Dim leIndex As Integer
    Dim posPF As Integer, gauchePF As String
    Dim posLaSF As Integer, gaucheLaSF As String
    Dim laSinit As String, laSPFinit As String
    Dim listeFen As String
    
    If v_Trait = "Ajout" Then
        numcond = 0
        numfor = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num)
        NumIndice = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice)
        Set Frm = PrmFctJSChp
        bcr = PrmFctJSChp.AppelFrm("Ajout", True, numcond, "", 0, numfor)
        ' i = grdond(grdForm.RowSel).TextMatrix(lig, GrdCond_I_TblCond)
        Set Frm = Nothing
        bcr = reformer_BCR(numfor, bcr)
    End If
    If v_Trait = "Init" Then
        numfor = tbl_fichExcel(ind_tbl_fichExcel).CmdFormNum
        NumIndice = tbl_fichExcel(ind_tbl_fichExcel).CmdFormIndice
        bcr = tbl_fichExcel(ind_tbl_fichExcel).CmdCondition
        bcr = reformer_BCR(numfor, bcr)
    End If
    
    If bcr <> "" Then
        For i = 0 To STR_GetNbchamp(bcr, "§")
            UnBcr = STR_GetChamp(bcr, "§", i)
            If UnBcr <> "" Then
                bcr = reformer_BCR(numfor, bcr)
                Call FaitConditionChamp(UnBcr, laSPF, laSF)
                
                indTbCond = 0
                On Error Resume Next
                indTbCond = UBound(tbl_cond(), 1) + 1
                
                ReDim Preserve tbl_cond(indTbCond) As SCOND_PARAM
                p_bool_tbl_cond = True
                tbl_cond(indTbCond).CondNumFiltre = numfor
                tbl_cond(indTbCond).CondFormIndice = NumIndice
                tbl_cond(indTbCond).CondOper = UnBcr
                tbl_cond(indTbCond).CondPasFrancais = UnBcr
                tbl_cond(indTbCond).CondenFrancais = laSF
                tbl_cond(indTbCond).CondenSQL = laSPF
                tbl_cond(indTbCond).CondType = "CONDL"  ' condition locale (ajoutée)
                ' MODIF LN 27/06/11
                tbl_cond(indTbCond).CondLigneDansGrid = i + 1
                        
                'leIndex = (numfor * 100) + NumIndice
                leIndex = FctAttribIndex(numfor, NumIndice)
                grdCond(leIndex).AddItem ""
                ' ajouter dans grdcond
                lig = grdCond(leIndex).Rows - 1
                'grdCond(leIndex).AddItem "", lig
                grdCond(leIndex).TextMatrix(lig, GrdCond_NumFiltre) = numfor
                grdCond(leIndex).TextMatrix(lig, GrdCond_NumIndice) = NumIndice
                grdCond(leIndex).TextMatrix(lig, GrdCond_Oper) = itbl_rdoL
                grdCond(leIndex).TextMatrix(lig, GrdCond_CondF) = laSF
                grdCond(leIndex).TextMatrix(lig, GrdCond_Cond) = UnBcr
                grdCond(leIndex).TextMatrix(lig, GrdCond_CondPF) = UnBcr
                listeFen = STR_GetChamp(UnBcr, "¤", 3)
                If listeFen <> "" Then
                    For lis = 0 To STR_GetNbchamp(listeFen, ";")
                        s = STR_GetChamp(listeFen, ";", lis)
                        If s <> "" Then
                            grdCond(leIndex).row = lig
                            grdCond(leIndex).col = GrdCond_PourFeuilles
                            grdCond(leIndex).CellBackColor = &H8080FF        ' rouge
                        End If
                    Next lis
                End If
                grdCond(leIndex).TextMatrix(lig, GrdCond_TypeFL) = "A"  '   "L"
                grdCond(leIndex).TextMatrix(lig, GrdCond_CondFctValid) = ""
                
                grdCond(leIndex).TextMatrix(lig, GrdCond_CondSQL) = laSPF
                ' correspondance Grid - Tableau
                grdCond(leIndex).TextMatrix(lig, GrdCond_I_TblCond) = indTbCond
                
                grdCond(leIndex).Visible = True
                grdCond(leIndex).ZOrder 0
            End If
        Next i
    End If
        
    If v_Trait = "Ajout" Then
        Call verifSiSauve
    End If
End Function

Private Function ajouter_condChamp(v_Trait As String, ind_tbl_fichExcel As Integer, ind_tbl_condChp As Integer, v_cndSpecial As String) As String
    Dim Frm As Form
    Dim FenNum As Integer
    Dim s1 As String, s2 As String
    Dim pos1 As Integer, pos2 As Integer
    Dim bcr As String
    Dim numcond As Integer, numfor As Integer
    Dim indTbCondChp As Integer, nb As Integer, lig As Integer
    Dim LaCond As String, LaCondFrancais As String
    Dim s As String, leX As String, leY As String
    Dim errLoad As Integer
    Dim laSPF As String
    Dim lenomchp As String, LeOp As String, LaValChp As String, UneCond As String
    Dim BoolLeDetail As Boolean
    Dim Loper As String, strX As String
    Dim Droite As String
    Dim Gauche As String
    Dim pos As Integer
    Dim i As Integer
    Dim numchp As Integer
    Dim laS As String, laSF As String
    Dim encore As Boolean
    Dim NumIndice As Integer
    Dim leIndex As Integer
    Dim posPF As Integer, gauchePF As String
    Dim posLaSF As Integer, gaucheLaSF As String
    Dim laSinit As String, laSPFinit As String
    Dim LeChp As String
    Dim I_ForNum As Integer, I_ChpNum As Integer, i_chp As Integer
    Dim laFctValid As String, LaCondSQL As String
    Dim IndiceGrid As Integer
    
    If v_Trait = "AjoutSpecialPrem" Then
        ' on est appelé pour créer plusieurs champs d'un seul coup => même condition pour tous
        numcond = 0
        numchp = tbl_fichExcel(p_i_tabExcel).CmdChpNum
        IndiceGrid = tbl_fichExcel(p_i_tabExcel).CmdChpGridIndice
        numfor = tbl_fichExcel(p_i_tabExcel).CmdFormNum
        If v_cndSpecial = "" Then
            Set Frm = PrmFctJSChp
            bcr = PrmFctJSChp.AppelFrm("AjoutSpecialPrem", False, numcond, "", numchp, numfor)
            Set Frm = Nothing
            v_cndSpecial = bcr
        Else
            bcr = v_cndSpecial
        End If
        GoTo Lab_BCR
    End If
    
    If v_Trait = "Ajout" Then
        numcond = 0
        numchp = tbl_fichExcel(p_i_tabExcel).CmdChpNum
        IndiceGrid = tbl_fichExcel(p_i_tabExcel).CmdChpGridIndice
        numfor = tbl_fichExcel(p_i_tabExcel).CmdFormNum
        Set Frm = PrmFctJSChp
        bcr = PrmFctJSChp.AppelFrm("Ajout", False, numcond, "", numchp, numfor)
        Set Frm = Nothing
    End If
    
    If v_Trait = "Copie" Then
        If cmd(CMD_CPY_CONDCHAMP).tag <> "" Then
            s1 = STR_GetChamp(cmd(CMD_CPY_CONDCHAMP).tag, "|", 0)
            s2 = STR_GetChamp(cmd(CMD_CPY_CONDCHAMP).tag, "|", 1)
            s = grdCondChamp(s1).TextMatrix(s2, GrdCond_I_TblCond)
            bcr = tbl_condChp(s).CondChpCndOrigine
            numchp = tbl_fichExcel(p_i_tabExcel).CmdChpNum
            IndiceGrid = tbl_fichExcel(p_i_tabExcel).CmdChpGridIndice
            numfor = tbl_fichExcel(p_i_tabExcel).CmdFormNum
        End If
    End If
    
    If v_Trait = "Modif" Then
        numcond = ind_tbl_condChp
        numchp = tbl_fichExcel(p_i_tabExcel).CmdChpNum
        IndiceGrid = tbl_fichExcel(p_i_tabExcel).CmdChpGridIndice
        numfor = tbl_condChp(ind_tbl_condChp).CondChpCndFormNum
        LaCond = tbl_condChp(ind_tbl_condChp).CondChpCndOrigine
        ' on ne prend que la partie droite
        LaCond = STR_GetChamp(LaCond, "µ", 0)
        Set Frm = PrmFctJSChp
        bcr = PrmFctJSChp.AppelFrm("Modif", False, numcond, LaCond, tbl_condChp(ind_tbl_condChp).CondChpCndChpNum, numfor)
        Set Frm = Nothing
    End If
    If v_Trait = "Suppr" Then
        ' Flaguer dans le tableau
        tbl_condChp(g_i_CondTbChamp).CondChpCndChpNum = -1
        tbl_condChp(g_i_CondTbChamp).CondChpCndenFrancais = "supprimé"
        ' Supprimer dans le grid
        grdCondChamp(g_i_IndexGrdChamp).row = g_i_LigneGrdChamp
        grdCondChamp(g_i_IndexGrdChamp).TextMatrix(g_i_LigneGrdChamp, GrdCondChpCndNum) = -1
        grdCondChamp(g_i_IndexGrdChamp).TextMatrix(g_i_LigneGrdChamp, GrdCondChpCndFrancais) = "supprimée"
        ' mettre l'image à Gomme
        grdCondChamp(g_i_IndexGrdChamp).col = GrdCondChpImgDetail
        grdCondChamp(g_i_IndexGrdChamp).RowHeight(lig) = 260
        Set grdCondChamp(g_i_IndexGrdChamp).CellPicture = imglst.ListImages(IMG_CHP_GOMME).Picture
        Call verifSiSauve
        GoTo Lab_Reconstruire
        Exit Function
    End If
Lab_BCR:
    If bcr <> "" Then
        'Modifier dans le tableau
        UneCond = STR_GetChamp(bcr, "§", 0)
        UneCond = Replace(UneCond, "|", "¤")
        LeChp = STR_GetChamp(UneCond, "¤", 0)
        LeOp = STR_GetChamp(UneCond, "¤", 1)
        lenomchp = STR_GetChamp(LeChp, ":", 2)
        i_chp = STR_GetChamp(LeChp, ":", 1)
        LaValChp = STR_GetChamp(UneCond, "¤", 2)
        LaValChp = Replace(LaValChp, "VAL:", "")
        BoolLeDetail = False
        LaValChp = P_RecupereNomChamp(i_chp, "valchp")
        laFctValid = P_RecupereNomChamp(i_chp, "fctvalid")
        If LaValChp <> "" Or laFctValid <> "" Then
            Call FaitConditionChamp(UneCond, LaCondSQL, LaCondFrancais)
        End If
        
        If v_Trait = "Ajout" Or v_Trait = "AjoutSpecialPrem" Or v_Trait = "Copie" Then
            On Error GoTo Err_Tab_RDOL
            ind_tbl_condChp = UBound(tbl_condChp()) + 1
            GoTo Suite_Tab_RDO
Err_Tab_RDOL:
            ind_tbl_condChp = 0
            Resume Suite_Tab_RDO
Suite_Tab_RDO:
            On Error GoTo 0
            ReDim Preserve tbl_condChp(ind_tbl_condChp)
            p_bool_tbl_condCHP = True
            tbl_condChp(ind_tbl_condChp).CondChpIndiceGrid = tbl_fichExcel(p_i_tabExcel).CmdChpGridIndice
            tbl_condChp(ind_tbl_condChp).CondChpITabFichExcel = p_i_tabExcel
        End If
        
        I_ForNum = numfor
        I_ChpNum = ChercheNumChamp("Num", lenomchp, 0, I_ForNum)
        tbl_condChp(ind_tbl_condChp).CondChpCndChpNum = I_ChpNum
        tbl_condChp(ind_tbl_condChp).CondChpCndFormNum = I_ForNum
        tbl_condChp(ind_tbl_condChp).CondChpCndOper = LeOp
        tbl_condChp(ind_tbl_condChp).CondChpCndVal = LaValChp
        tbl_condChp(ind_tbl_condChp).CondChpCndPasFrancais = UneCond
        tbl_condChp(ind_tbl_condChp).CondChpCndenSQL = LaCondSQL
        tbl_condChp(ind_tbl_condChp).CondChpCndenFrancais = LaCondFrancais
        tbl_condChp(ind_tbl_condChp).CondChpCndBoolDetail = BoolLeDetail
        tbl_condChp(ind_tbl_condChp).CondChpCndOrigine = UneCond
        
        'Modifier dans le Grid n° i
        If v_Trait = "Ajout" Or v_Trait = "AjoutSpecialPrem" Or v_Trait = "Copie" Then
            
            If tbl_fichExcel(p_i_tabExcel).CmdChpGridIndice = 0 Then
                GoTo Pas_Loadé
            Else
                GoTo Déjà_Loadé
            End If
Pas_Loadé:
            Faire_Load_GrdCondChp numchp, tbl_fichExcel(p_i_tabExcel).CmdChpIndice, p_i_tabExcel
Déjà_Loadé:
            NumIndice = tbl_fichExcel(p_i_tabExcel).CmdChpGridIndice
            grdCondChamp(NumIndice).AddItem ""
            lig = grdCondChamp(NumIndice).Rows - 1
        
            cmd(CMD_AJOUT_COND_CHAMP).Visible = True
        Else
            ' cas modif => trouver la bonne ligne du grid
            NumIndice = tbl_fichExcel(p_i_tabExcel).CmdChpGridIndice
            For i = 0 To grdCondChamp(NumIndice).Rows - 1
                If grdCondChamp(NumIndice).TextMatrix(i, GrdCondChpIndTbl) = ind_tbl_condChp Then
                    lig = i
                End If
            Next i
        End If
        
        ' reconstruire
Lab_Reconstruire:
        Dim Str_FauxSQL As String, Str_VraiSQL As String, Str_Francais As String
        Dim op_FauxSQL As String, op_VraiSQL As String, op_Francais As String
        Dim II As Integer
        
        Str_FauxSQL = ""
        Str_VraiSQL = ""
        Str_Francais = ""
        op_FauxSQL = ""
        op_VraiSQL = ""
        op_Francais = ""
        
        For II = 0 To UBound(tbl_condChp())
            If tbl_condChp(II).CondChpITabFichExcel = p_i_tabExcel Then
                If tbl_condChp(II).CondChpCndChpNum <> -1 Then  ' supprimé
                    If tbl_condChp(II).CondChpCndPasFrancais <> "" Then
                        Str_FauxSQL = Str_FauxSQL & op_FauxSQL & tbl_condChp(II).CondChpCndPasFrancais
                        Str_VraiSQL = Str_VraiSQL & op_VraiSQL & tbl_condChp(II).CondChpCndenSQL
                        Str_Francais = Str_Francais & op_Francais & tbl_condChp(II).CondChpCndenFrancais
                        op_FauxSQL = "§"
                        op_VraiSQL = " And "
                        op_Francais = " et "
                    End If
                End If
            End If
        Next II
        tbl_fichExcel(p_i_tabExcel).CmdCondition = Str_FauxSQL
        tbl_fichExcel(p_i_tabExcel).CmdConditionSQL = Str_VraiSQL
        tbl_fichExcel(p_i_tabExcel).CmdTitreDoc = Str_Francais
        
        ' mettre le Plus
        strX = tbl_fichExcel(p_i_tabExcel).CmdX
        leX = FctIntColdest(strX)
        leY = tbl_fichExcel(p_i_tabExcel).CmdY
        p_bfaire_RowColChange = False
        FenNum = tbl_fichExcel(p_i_tabExcel).CmdFenNum
        grdCell(FenNum).row = leY
        grdCell(FenNum).col = leX
        If tbl_fichExcel(p_i_tabExcel).CmdCondition <> "" Then
            Set grdCell(FenNum).CellPicture = imglst.ListImages(IMG_BOULEBF_PLUS).Picture
        Else
            Set grdCell(FenNum).CellPicture = imglst.ListImages(IMG_BOULEBF).Picture
        End If
        p_bfaire_RowColChange = True
                
        If v_Trait = "Suppr" Then Exit Function
        
        grdCondChamp(NumIndice).row = lig
        grdCondChamp(NumIndice).TextMatrix(grdCondChamp(NumIndice).row, GrdCondChpCndNum) = tbl_condChp(ind_tbl_condChp).CondChpCndChpNum
        grdCondChamp(NumIndice).TextMatrix(grdCondChamp(NumIndice).row, GrdCondChpCndOper) = tbl_condChp(ind_tbl_condChp).CondChpCndOper
        grdCondChamp(NumIndice).TextMatrix(grdCondChamp(NumIndice).row, GrdCondChpCndFrancais) = tbl_condChp(ind_tbl_condChp).CondChpCndenFrancais
        grdCondChamp(NumIndice).TextMatrix(grdCondChamp(NumIndice).row, GrdCondChpCndVal) = tbl_condChp(ind_tbl_condChp).CondChpCndVal
        grdCondChamp(NumIndice).TextMatrix(grdCondChamp(NumIndice).row, GrdCondChpCndSQL) = tbl_condChp(ind_tbl_condChp).CondChpCndPasFrancais
        grdCondChamp(NumIndice).TextMatrix(grdCondChamp(NumIndice).row, GrdCondChpBoolDetail) = tbl_condChp(ind_tbl_condChp).CondChpCndBoolDetail
        grdCondChamp(NumIndice).ColSel = GrdCondChpImgDetail
        If tbl_condChp(ind_tbl_condChp).CondChpCndBoolDetail Then
            grdCondChamp(NumIndice).RowHeight(lig) = 260
            Set grdCondChamp(NumIndice).CellPicture = imglst.ListImages(IMG_CHP_DET).Picture
        Else
            grdCondChamp(NumIndice).RowHeight(lig) = 240
            Set grdCondChamp(NumIndice).CellPicture = Nothing
        End If
            
        If v_Trait = "Ajout" Or v_Trait = "AjoutSpecialPrem" Or v_Trait = "Copie" Then
            grdCondChamp(NumIndice).TextMatrix(grdCondChamp(NumIndice).row, GrdCondChpIndTbl) = ind_tbl_condChp
        End If
        
        Call verifSiSauve
        If v_Trait <> "AjoutSpecialPrem" Then Call verifSiSauve
        
    End If
    
End Function

Private Function ajouter_form_grd(ByVal v_NumFiltre As Long, _
                                  ByVal v_numindice As Integer, _
                                  ByVal v_nomi As Boolean, _
                                  ByVal v_mess_y_est As Boolean, _
                                  ByVal v_titre As String) As Integer

    Dim for_lib As String
    Dim ff_titre As String
    Dim lig As Integer, j As Integer
    
    If v_NumFiltre = 0 Then
        for_lib = "Aucun Filtre"
    Else
        If Odbc_RecupVal("select For_Lib, FF_Titre from Formulaire, FiltreForm where FF_Num=" & v_NumFiltre & " and formulaire.for_num = filtreform.ff_fornum ", _
                         for_lib, ff_titre) = P_ERREUR Then
            ajouter_form_grd = P_ERREUR
            Exit Function
        End If
    End If
    lig = -1
    For j = 0 To grdForm.Rows - 1
        If grdForm.TextMatrix(j, GrdForm_FF_Num) = v_NumFiltre And grdForm.TextMatrix(j, GrdForm_FF_NumIndice) = v_numindice Then
            If v_mess_y_est Then
                Call MsgBox("'" & for_lib & "' est déjà dans la liste.", vbInformation + vbOKOnly, "")
            End If
            ajouter_form_grd = P_NON
            Exit Function
        End If
    Next j
    If lig >= 0 Then
        grdForm.AddItem "", lig
     Else
        grdForm.AddItem ""
        lig = grdForm.Rows - 1
    End If
    grdForm.TextMatrix(lig, GrdForm_FF_Num) = v_NumFiltre
    grdForm.TextMatrix(lig, GrdForm_FF_NumIndice) = v_numindice
    grdForm.TextMatrix(lig, GrdForm_FF_Lib) = for_lib
    If v_titre <> "" Then
        grdForm.TextMatrix(lig, GrdForm_FF_Titre) = v_titre
    Else
        If v_NumFiltre = 0 Then
            grdForm.TextMatrix(lig, GrdForm_FF_Titre) = "Aucun Filtre"
        Else
            grdForm.TextMatrix(lig, GrdForm_FF_Titre) = ff_titre & " (" & v_NumFiltre & "." & v_numindice & ")"
        End If
    End If
    
    grdForm.col = grdForm.Cols - 1
    grdForm.ColSel = grdForm.col
    grdForm.RowSel = grdForm.Rows - 1
    grdForm.Visible = True
    p_numfiltre_encours = v_NumFiltre
    p_numindice_encours = v_numindice
    If v_NumFiltre > 0 Then
        If Odbc_RecupVal("select ff_fornum from filtreform where ff_num=" & p_numfiltre_encours, p_numfor_encours) = P_ERREUR Then
        End If
    End If
    
    ajouter_form_grd = P_OUI
    
End Function

Private Function ajouter_feuille_grd(ByVal v_i As Integer)
    Dim lig As Integer
    
    lig = v_i - 1
    If lig >= 0 Then
        grdFeuille.AddItem "", lig
    Else
        grdFeuille.AddItem ""
        lig = grdFeuille.Rows - 1
    End If
    grdFeuille.TextMatrix(lig, GrdFeuil_FenNum) = tbl_fenExcel(v_i).FenNum
    grdFeuille.TextMatrix(lig, GrdFeuil_FenNom) = tbl_fenExcel(v_i).FenNom
    grdFeuille.TextMatrix(lig, GrdFeuil_LoadFait) = ""
    grdFeuille.TextMatrix(lig, GrdFeuil_Chargement) = "0"
    grdFeuille.col = grdFeuille.Cols - 1
    grdFeuille.ColSel = grdFeuille.col
    grdFeuille.RowSel = grdFeuille.Rows - 1
    
    ajouter_feuille_grd = P_OUI
    
End Function

Private Sub ajouter_champ(ByVal v_idgrid As Integer, ByVal v_NumFiltre As Long, ByVal v_rowsel As Long, ByVal v_colsel As Long, ByVal bool_ajouter As Boolean, ByVal bool_Direct As Boolean)

    Dim sql As String, sret As String, sfct As String
    Dim n As Integer, i As Integer, j As Integer
    Dim rs As rdoResultset
    Dim laDim As Integer
    Dim numfor As Integer
    Dim numchp As Integer
    Dim NumFiltre As Integer
    Dim bajout As Boolean
    Dim Prochain As Boolean
    Dim trouve As Boolean
    Dim chpnum As Integer
    Dim boolTexte As Boolean, BoolDate As Boolean, BoolEntier As Boolean
    Dim boolListe As Boolean, boolLstSpécial As Boolean, strLstSpécial As String
    Dim CmdChpSQL As String
    Dim lib As String
    Dim ff_num As Integer, rsChp As rdoResultset
    Dim Forme As String, MenForme As String
    Dim leX As Integer, leY As Integer
    Dim sX As Integer, ligne1 As Integer
    Dim strX As String, forec_type As String
    Dim i_tbl_fichExcel As Integer, Liste_Num As String
    Dim IndiceNum As Integer
    Dim strType As String
    Dim ind_fich As Integer, lig_select As Integer
    Dim Anc_Forme As String
    Dim ij As Integer, XPère As Integer, YPère As Integer
    Dim ji As Integer
    Dim Frm As Form
    Dim StrCR As String
    Dim nbchp As Integer
    Dim newDim As Integer
    Dim sFFNum As String
    Dim sOp As String
    Dim s As String
    Dim sFormule As String
    Dim DejaSimul As Boolean
    Dim fornums As String
    Dim sCol As String
    
    chpnum = 0
    IndiceNum = 0
    If bool_Direct Then
        ' MsgBox "ici " & tbl_fichExcel(p_i_tabExcel).CmdChpNum
        chpnum = tbl_fichExcel(p_i_tabExcel).CmdChpNum
        IndiceNum = tbl_fichExcel(p_i_tabExcel).CmdFormIndice
        MenForme = tbl_fichExcel(p_i_tabExcel).CmdMenFormeChp
        NumChpDernierChoisi = chpnum
        i_tbl_fichExcel = p_i_tabExcel
        If chpnum < -10 Then
            If MenForme = "#NOMBRE#NONVALEUR_R###" Then
                MenForme = "Ligne_Val#NOMBRE#NOMBRE_TOTAL#*#TOUTES#"
            End If
        End If
        GoTo Mettre_le_Champ
    End If
    
    lig_select = -1
    Call CL_Init
    n = 0
    On Error GoTo Err_Suite2
    i = UBound(tbl_fichExcel())
    GoTo Suite_2
Err_Suite2:
    Resume Continu_2
Suite_2:
    MenForme = ""
    On Error GoTo 0
    sCol = FctStrColDest(v_colsel)
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdChpNum > 0 Or tbl_fichExcel(i).CmdChpNum < 0 Then
            If tbl_fichExcel(i).CmdType = "CHP" Then
                If tbl_fichExcel(i).CmdFenNum = v_idgrid Then
                    'Debug.Print Mid(Alpha, grdCell(index).ColSel, 1)
                    If tbl_fichExcel(i).CmdX = sCol And tbl_fichExcel(i).CmdY = v_rowsel Then
                        chpnum = tbl_fichExcel(i).CmdChpNum
                        MenForme = tbl_fichExcel(i).CmdMenFormeChp
                        IndiceNum = tbl_fichExcel(i).CmdFormIndice
                        i_tbl_fichExcel = i
                        Exit For
                    End If
                End If
            End If
        End If
    Next i
                
    If i_tbl_fichExcel = 0 Then
        i_tbl_fichExcel = p_i_tabExcel
    End If
    If p_i_tabExcel <> i_tbl_fichExcel Then MsgBox p_i_tabExcel & " " & i_tbl_fichExcel

Continu_2:
    On Error GoTo 0
    ' afficher tous les champs de ce filtre
    sql = "select * from filtreform where ff_num =" & v_NumFiltre
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Sub
    End If
    '
    Call CL_AddLigne("<Nombre de Fiches>", ((v_NumFiltre + 10) * -1), "", False)
    
    numfor = rs("ff_fornum")
    s = STR_GetChamp(rs("FF_Fornums"), "*", 0)
    sOp = ""
    If s = "FF" Or s = "FP" Then
        sFFNum = "forec_fornum = " & STR_GetChamp(rs("FF_Fornums"), "*", 1) & " Or " & "forec_fornum = " & STR_GetChamp(rs("FF_Fornums"), "*", 2)
        sOp = "2"
    ElseIf s = "N" Then
        sFFNum = "forec_fornum = " & STR_GetChamp(rs("FF_Fornums"), "*", 1)
    End If
    
    lig_select = -1
    ligne1 = 0
    ' il y a déjà un champs : ajouter un bouton supprimer
    If chpnum > 0 Then
        sql = "select * from formetapechp where forec_num = " & chpnum
        If Odbc_SelectV(sql, rs) = P_ERREUR Then
            Exit Sub
        End If
        lib = rs("Forec_Nom").Value & vbTab & rs("Forec_Label").Value & vbTab & "(" & rs("Forec_Type").Value & " " & rs("forec_fctvalid").Value & ")"
        Call CL_AddLigne(lib, rs("Forec_Num").Value, "", False)
        lig_select = 1
    ElseIf chpnum <= -10 Then
        lig_select = 0
    End If
    
    sql = "select * from formetapechp where " & sFFNum _
            & " order by forec_fornum, forec_numetape, forec_ordre"
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Sub
    End If
    ' les autres
    nbchp = 0
    While Not rs.EOF
        If rs("Forec_num") = NumChpDernierChoisi Then
            Prochain = True
        End If
        sFormule = IIf(IsNull(rs("forec_formule").Value), "", rs("forec_formule").Value)
        'Debug.Print rs("Forec_fornum") & " " & rs("Forec_nom") & " " & rs("Forec_type") & " " & rs("Forec_fctvalid") & " " & rs("Forec_num") & " " & rs("Forec_formule")
        If rs("Forec_nom").Value <> "" Then
            If sOp = "" Then
                s = ""
            Else
                s = LibEtapeChp(rs("Forec_Num"), numfor)
            End If
            If rs("Forec_Type").Value = "CHECK" Or rs("Forec_Type").Value = "RADIO" Or rs("Forec_Type").Value = "SELECT" Then
                If rs("Forec_Type").Value = "CHECK" Then
                    strType = "Cases"
                ElseIf rs("Forec_Type").Value = "RADIO" Then
                    strType = "Options"
                ElseIf rs("Forec_Type").Value = "SELECT" Then
                    strType = "Liste"
                End If
                
                lib = rs("Forec_Nom").Value & "  (" & strType & " " & FctRecupNomListe(rs("forec_valeurs_possibles")) & ")"
                If Prochain Then lib = "-> " & lib
                If chpnum <> rs("Forec_Num") Then
                    Call CL_AddLigne(s & IIf(s <> "", vbTab, "") & rs("Forec_Nom").Value & vbTab & rs("Forec_Label").Value & vbTab & "(" & strType & " " & rs("forec_fctvalid").Value & ")", rs("Forec_Num").Value, "", False)
                    If rs("Forec_Num") = NumChpDernierChoisi Then
                        If lig_select = -1 Then lig_select = nbchp + 1
                    End If
                    nbchp = nbchp + 1
                End If
            ElseIf rs("Forec_Type").Value = "HIERARCHIE" Then
                strType = "Hierarchie"
                lib = rs("Forec_Nom").Value & "  (" & strType & " " ' A FAIRE & FctRecupNomListe(rs("forec_valeurs_possibles")) & ")"
                If Prochain Then lib = "-> " & lib
                If chpnum <> rs("Forec_Num") Then
                    Call CL_AddLigne(s & IIf(s <> "", vbTab, "") & rs("Forec_Nom").Value & vbTab & rs("Forec_Label").Value & vbTab & "(" & strType & " " & rs("forec_fctvalid").Value & ")", rs("Forec_Num").Value, "", False)
                    If rs("Forec_Num") = NumChpDernierChoisi Then
                        If lig_select = -1 Then lig_select = nbchp + 1
                    End If
                    nbchp = nbchp + 1
                End If
            ElseIf rs("forec_fctvalid").Value = "%NUMFCT" Or rs("forec_fctvalid").Value = "%NUMSERVICE" Then
                If rs("forec_fctvalid").Value = "%NUMFCT" Then
                    strType = "Fonction"
                ElseIf rs("forec_fctvalid").Value = "%NUMSERVICE" Then
                    strType = "Service"
                End If
                lib = rs("Forec_Nom").Value & "  (" & strType & ")"
                If Prochain Then lib = "-> " & lib
                If chpnum <> rs("Forec_Num") Then
                    Call CL_AddLigne(s & IIf(s <> "", vbTab, "") & rs("Forec_Nom").Value & vbTab & rs("Forec_Label").Value & vbTab & strType, rs("Forec_Num").Value, "", False)
                    If rs("Forec_Num") = NumChpDernierChoisi Then
                        If lig_select = -1 Then lig_select = nbchp + 1
                    End If
                    nbchp = nbchp + 1
                End If
            ElseIf rs("forec_fctvalid").Value = "%ENTIER" Or rs("forec_fctvalid").Value = "%NUM" Or rs("forec_fctvalid").Value = "%MTT" Then
                If rs("forec_fctvalid").Value = "%ENTIER" Then
                    strType = "Entier"
                ElseIf rs("forec_fctvalid").Value = "%NUM" Then
                    strType = "Numéro"
                ElseIf rs("forec_fctvalid").Value = "%MTT" Then
                    strType = "Montant"
                End If
                If rs("forec_valeur_defaut").Value <> "%NUM" Then
                    lib = rs("Forec_Nom").Value & "  (" & strType & ")"
                    If Prochain Then lib = "-> " & lib
                    If chpnum <> rs("Forec_Num") Then
                        Call CL_AddLigne(s & IIf(s <> "", vbTab, "") & rs("Forec_Nom").Value & vbTab & rs("Forec_Label").Value & vbTab & strType, rs("Forec_Num").Value, "", False)
                        If rs("Forec_Num") = NumChpDernierChoisi Then
                            If lig_select = -1 Then lig_select = nbchp + 1
                        End If
                        nbchp = nbchp + 1
                    End If
                End If
            ElseIf InStr(rs("forec_fctvalid").Value, "%DATE") > 0 Then
                strType = "Date"
                lib = rs("Forec_Nom").Value & "  (" & strType & ")"
                If Prochain Then lib = "-> " & lib
                If chpnum <> rs("Forec_Num") Then
                    Call CL_AddLigne(s & IIf(s <> "", vbTab, "") & rs("Forec_Nom").Value & vbTab & rs("Forec_Label").Value & vbTab & strType, rs("Forec_Num").Value, "", False)
                    If rs("Forec_Num") = NumChpDernierChoisi Then
                        If lig_select = -1 Then lig_select = nbchp + 1
                    End If
                    nbchp = nbchp + 1
                End If
            ElseIf Mid$(sFormule, 1, 9) = "=calculer" Then
                strType = "Champ Calculé"
                Call CL_AddLigne(s & IIf(s <> "", vbTab, "") & rs("Forec_Nom").Value & vbTab & rs("Forec_Label").Value & vbTab & strType, rs("Forec_Num").Value, "", False)
            End If
        End If
        Prochain = False
        rs.MoveNext
    Wend
    rs.Close
    If nbchp = 0 Then
        MsgBox "Aucun champ utilisable dans ce filtre" & Chr(13) & Chr(10) & "Champs utilisables : Radio, cases à cocher, Listes, Entiers, Montants, Services, Fonctions"
        Exit Sub
    End If
    Call CL_InitTitreHelp("Champs disponibles", "")
    Call CL_AddBouton("", p_chemin_appli + "\btnok.gif", vbKeyO, vbKeyF1, 0)
    If chpnum > 0 Or chpnum < 0 Then
        Call CL_AddBouton("Supprimer", p_chemin_appli + "\btnsupprimer.gif", 0, vbKeyDelete, 0)
    Else
        Call CL_AddBouton("Intitulé du champ", "", 0, 0, 1000)
    End If
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
    Call CL_InitTaille(0, -15)
    Call CL_InitPointeur(lig_select)

    ChoixListe.Show 1
    If CL_liste.retour = 0 Then
        If (CL_liste.lignes(CL_liste.pointeur).num > 0 Or CL_liste.lignes(CL_liste.pointeur).num <= -10) And (chpnum > 0 Or chpnum <= -10) Then
            If CL_liste.lignes(CL_liste.pointeur).num <> chpnum Then
                ' MsgBox "on change de champ"
                ' enlever l'ancien
                'For i = 0 To UBound(tbl_fichExcel())
                    'PgBarChp.Value = i
                    'If tbl_fichExcel(i).CmdType = "CHP" Then
                    '    If tbl_fichExcel(i).CmdFenNum = v_idgrid Then
                    '        If tbl_fichExcel(i).CmdChpNum = chpnum Then
                    '            If tbl_fichExcel(i).CmdFormIndice = IndiceNum Then
                                    i = i_tbl_fichExcel
                                    strX = tbl_fichExcel(i).CmdX
                                    leX = FctIntColdest(strX)
                                    leY = tbl_fichExcel(i).CmdY
                                    MenForme = tbl_fichExcel(i).CmdMenFormeChp
                                    P_MettreChamp "Vider", i, leX, leY, MenForme, val(tbl_fichExcel(i).CmdChpNum), val(tbl_fichExcel(i).CmdFormIndice), v_idgrid, True
                                    tbl_fichExcel(i).CmdChpNum = CL_liste.lignes(CL_liste.pointeur).num
                                    If CL_liste.lignes(CL_liste.pointeur).num <= -10 Then
                                        Anc_Forme = tbl_fichExcel(i).CmdMenFormeChp
                                        tbl_fichExcel(i).CmdMenFormeChp = "Ligne_Val#NOMBRE#NOMBRE_TOTAL#*#TOUTES#"
                                    End If
                                    p_bfaire_RowColChange = True
                                    p_changement_de_champ = True
                                    GoTo Mettre_le_Champ
                                    'Exit Sub
                    '            End If
                    '        End If
                    '    End If
                    'End If
                'Next i
            End If
        End If
    End If
    
    'MODIF LN 26/06/11
    If CL_liste.lignes(CL_liste.pointeur).num > 0 And (CL_liste.retour = 0 Or (CL_liste.retour = 1 And chpnum = 0)) Then
        NumChpDernierChoisi = CL_liste.lignes(CL_liste.pointeur).num
    End If
direct:
    If CL_liste.retour = 2 Then
        Exit Sub
    End If
    Call verifSiSauve

    If (chpnum > 0 Or chpnum <= -10) And CL_liste.retour = 1 Then
        ' supprimer le champ
        'For i = 0 To UBound(tbl_fichExcel())
            'PgBarChp.Value = i
            'If tbl_fichExcel(i).CmdType = "CHP" Then
            '    If tbl_fichExcel(i).CmdFenNum = v_idgrid Then
            '        If tbl_fichExcel(i).CmdChpNum = chpnum Then
            '            If tbl_fichExcel(i).CmdFormIndice = IndiceNum Then
                            i = i_tbl_fichExcel
                            strX = tbl_fichExcel(i).CmdX
                            leX = FctIntColdest(strX)
                            leY = tbl_fichExcel(i).CmdY
                            MenForme = tbl_fichExcel(i).CmdMenFormeChp
                            ' MODIF LN 26/06/11
                            p_dansGrid = True
                            P_MettreChamp "Vider", i, leX, leY, MenForme, val(tbl_fichExcel(i).CmdChpNum), val(tbl_fichExcel(i).CmdFormIndice), v_idgrid, True
                            'tbl_fichExcel(i).CmdChpNum = "SUPPRIME"
                            tbl_fichExcel(i).CmdChpNum = -1
                            tbl_fichExcel(i).CmdType = ""
                            cmd(CMD_MODE_CHAMP).Visible = False
                            cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
                            cmd(CMD_MODE_SIMUL).Visible = False
                            cmd(CMD_MODE_LIEN).Visible = False
                            p_bfaire_RowColChange = True
                            Exit Sub
        
'                            i = i_tbl_fichExcel
'                            strX = tbl_fichExcel(i).CmdX
'                            leX = InStr(Public_Alpha, strX)
'                            leY = tbl_fichExcel(i).CmdY
'                            MenForme = tbl_fichExcel(i).CmdMenFormeChp
'                            P_MettreChamp "Vider", i, leX, leY, MenForme, val(tbl_fichExcel(i).CmdChpNum), val(tbl_fichExcel(i).CmdFormIndice), v_idgrid, True
'                            'tbl_fichExcel(i).CmdChpNum = "SUPPRIME"
'                            tbl_fichExcel(i).CmdChpNum = -1
'                            tbl_fichExcel(i).CmdType = ""
'                            p_bfaire_RowColChange = True
'                            Exit Sub
        
        
        '                End If
        '            End If
        '        End If
        '    End If
        'Next i
    End If
    If chpnum = 0 And CL_liste.retour = 1 Then
        ' Intitulé du champ
        chpnum = CL_liste.lignes(CL_liste.pointeur).num
        sql = "select * from formetapechp where forec_num = " & chpnum
        If Odbc_SelectV(sql, rs) = P_ERREUR Then
            Exit Sub
        End If
        If rs.EOF Then
            rs.Close
            Exit Sub
        End If
        Me.txtPolice.Text = rs("forec_label").Value
        rs.Close
        grdCell(g_numfeuille).TextMatrix(grdCell(g_numfeuille).RowSel, grdCell(g_numfeuille).ColSel) = Me.txtPolice.Text
        
        'g_ColSelDest = Mid(Public_Alpha, XLib, 1) & YLib
        Dim XLib As Integer, YLib As Integer
        XLib = grdCell(g_numfeuille).ColSel
        YLib = grdCell(g_numfeuille).RowSel
        sCol = FctStrColDest(XLib)
        Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(sCol & YLib).Value = Me.txtPolice.Text
        
        'Call txtPolice_KeyDown(13, 0)
        Exit Sub
    End If
    
Mettre_le_Champ:
    ' Mettre le champ
    If Not bool_Direct Then
        chpnum = CL_liste.lignes(CL_liste.pointeur).num
    End If
    
    If chpnum <= -10 Then
        'MsgBox p_Derniere_MenFormeListe
        Forme = "Ligne_Val#NOMBRE#NOMBRE_TOTAL#*#TOUTES#"
        MenForme = Forme
        newDim = i_tbl_fichExcel
        strLstSpécial = tbl_fichExcel(i_tbl_fichExcel).CmdChpSQL
        If bool_ajouter Then
            i_tbl_fichExcel = 0
            strLstSpécial = ""
            GoTo LabAjoutChp
        Else
            GoTo LabModifChp
        End If
        'GoTo Lab_bool_ajouter
    End If
    
    sql = "select * from formetapechp where forec_num = " & chpnum
    If chpnum = 0 Then
        Exit Sub
    End If
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Sub
    End If
    If Not rs.EOF Then
        If chpnum > 0 Then
            LibChpDernierChoisi = rs("forec_nom")
        End If
    End If
    
    '
    ' selon type de champs
    ' mettre dans tbl_fichExcel
    sFormule = IIf(IsNull(rs("forec_formule").Value), "", rs("forec_formule").Value)
    Select Case rs("forec_type")
    Case "TEXT"
        boolTexte = True
        If InStr(rs("forec_fctvalid"), "DATE") > 0 Then
            BoolDate = True
            boolLstSpécial = True
        ElseIf InStr(rs("forec_fctvalid"), "ENTIER") > 0 Then
            BoolEntier = True
            boolLstSpécial = True
            strLstSpécial = rs("forec_fctvalid").Value
        ElseIf InStr(rs("forec_fctvalid"), "MTT") > 0 Then
            BoolEntier = True
            boolLstSpécial = True
            strLstSpécial = rs("forec_fctvalid").Value
        ElseIf rs("forec_fctvalid").Value = "%NUMFCT" Or rs("forec_fctvalid").Value = "%NUMSERVICE" Then
            boolLstSpécial = True
            strLstSpécial = rs("forec_fctvalid").Value
        ElseIf rs("forec_fctvalid").Value = "%NUMUTIL" Then
            boolLstSpécial = True
            strLstSpécial = rs("forec_fctvalid").Value
        ElseIf Mid$(sFormule, 1, 9) = "=calculer" Then
            BoolEntier = True
            boolLstSpécial = True
            strLstSpécial = "calculer"
        End If
    Case "CHECK"
        boolListe = True
    Case "RADIO"
        boolListe = True
    Case "SELECT"
        boolListe = True
    Case "HIERARCHIE"
        boolLstSpécial = True
        strLstSpécial = "HIERARCHIE"
    End Select
    If boolLstSpécial Or boolListe Then
LabChpNombreTotal:
        If Not bool_ajouter Then
            newDim = i_tbl_fichExcel
            tbl_fichExcel(newDim).CmdChpNum = chpnum    ' CL_liste.lignes(CL_liste.pointeur).num
            ' choisir la forme à donner au résultat
            Anc_Forme = tbl_fichExcel(newDim).CmdMenFormeChp
        Else
            Anc_Forme = ""
        End If
        
        Set Frm = PrmFormatChp
        If bool_ajouter Then
            If rs("forec_type") = "CHECK" Or rs("forec_type") = "RADIO" Or rs("forec_type") = "SELECT" Or rs("forec_type") = "HIERARCHIE" Or (rs("forec_type") = "TEXT" And (rs("forec_fctvalid") = "%NUMFCT" Or rs("forec_fctvalid") = "%NUMSERVICE")) Then
                MenForme = p_Derniere_MenFormeListe
            Else
                MenForme = p_Derniere_MenFormeNonListe
            End If
LabAjoutChp:
            'Forme = PrmFormatChp.AppelFrm("Ajout", CL_liste.lignes(CL_liste.pointeur).num, numfor, v_numFiltre, MenForme, boolLstSpécial, strLstSpécial)
            Forme = PrmFormatChp.AppelFrm("Ajout", chpnum, 0, numfor, v_NumFiltre, MenForme, boolLstSpécial, strLstSpécial)
        Else
            'Forme = PrmFormatChp.AppelFrm("Modif", CL_liste.lignes(CL_liste.pointeur).num, numfor, v_numFiltre, MenForme, boolLstSpécial, strLstSpécial)
LabModifChp:
            
            Forme = PrmFormatChp.AppelFrm("Modif", chpnum, newDim, numfor, v_NumFiltre, MenForme, boolLstSpécial, strLstSpécial)
        End If
        Set Frm = Nothing
        p_changement_de_champ = False
        CmdChpSQL = ""
        If Mid(Forme, 1, 4) = "SQL=" Then
            CmdChpSQL = Forme
            Forme = "Ligne_Val#NOMBRE#NOMBRE_TOTAL#*#TOUTES#"
            GoTo Lab_bool_ajouter
        ElseIf Forme = "QUITTER" Then
            Exit Sub
        End If
        If chpnum <= -10 Then
        ElseIf Forme = "" Then
            Forme = Anc_Forme
        Else
            If rs("forec_type") = "CHECK" Or rs("forec_type") = "RADIO" Or rs("forec_type") = "SELECT" Or rs("forec_type") = "HIERARCHIE" Or (rs("forec_type") = "TEXT" And (rs("forec_fctvalid") = "%NUMFCT" Or rs("forec_fctvalid") = "%NUMSERVICE")) Then
                p_Derniere_MenFormeListe = STR_GetChamp(Forme, "#", 0)
                p_Derniere_MenFormeListe = p_Derniere_MenFormeListe & "#" & STR_GetChamp(Forme, "#", 1)
                p_Derniere_MenFormeListe = p_Derniere_MenFormeListe & "#" & STR_GetChamp(Forme, "#", 2)
                p_Derniere_MenFormeListe = p_Derniere_MenFormeListe & "#*#TOUTES"
                p_Derniere_MenFormeListe = p_Derniere_MenFormeListe & "#" & STR_GetChamp(Forme, "#", 5)
            Else
                p_Derniere_MenFormeNonListe = Forme
            End If
        End If
Lab_bool_ajouter:
        If bool_ajouter Then
            'grdCell(v_idgrid).TextMatrix(v_rowsel, v_colsel) = rs("forec_nom") '    & " " & rs("forec_type")
            On Error GoTo Err_Suite_3
            newDim = UBound(tbl_fichExcel()) + 1
            GoTo Suite_3
Err_Suite_3:
            newDim = 1
            Resume Suite_3
Suite_3:
            On Error GoTo 0
            ReDim Preserve tbl_fichExcel(newDim) As SFICH_PARAM_EXCEL
            p_bool_tbl_fichExcel = True
            tbl_fichExcel(newDim).CmdType = "CHP"
            tbl_fichExcel(newDim).CmdFormNum = v_NumFiltre
            tbl_fichExcel(newDim).CmdFormIndice = p_numindice_encours
            tbl_fichExcel(newDim).CmdChpNum = chpnum
            tbl_fichExcel(newDim).CmdFenNum = g_numfeuille
            tbl_fichExcel(newDim).CmdX = FctStrColDest(v_colsel)
            tbl_fichExcel(newDim).CmdY = v_rowsel
            If CmdChpSQL <> "" Then
                tbl_fichExcel(newDim).CmdChpSQL = CmdChpSQL
            End If
        End If
        tbl_fichExcel(newDim).CmdMenFormeChp = Forme
        '' Déplacer le graphique
        'MsgBox "deplacer ?"
        ''Call FctCreerGraphique("M_" & tbl_fichExcel(newDim).CmdX & "_" & tbl_fichExcel(newDim).CmdY, "", g_numfeuille, newDim)
        'Call FctCreerGraphique("C", "", g_numfeuille, newDim)
    
        Public_VerifOuvrir g_CheminModele, False, True, p_tbl_FichExcelOuverts
        ' voir s'il faut modifier l'affichage
        If Not bool_ajouter Then
            If Anc_Forme <> Forme Then
                Call verifSiSauve
                ' supprimer l'ancien
                strX = tbl_fichExcel(newDim).CmdX
                leX = FctIntColdest(strX)
                leY = tbl_fichExcel(newDim).CmdY
                If tbl_fichExcel(newDim).CmdChpSQL <> "" Then
                    Anc_Forme = "Ligne_Val#NOMBRE#NOMBRE_TOTAL#*#TOUTES#"
                Else
                    Anc_Forme = tbl_fichExcel(newDim).CmdMenFormeChp
                End If
                P_MettreChamp "Vider", newDim, leX, leY, Anc_Forme, val(tbl_fichExcel(newDim).CmdChpNum), val(tbl_fichExcel(newDim).CmdFormIndice), v_idgrid, True
                ' vider aussi tbl_cell
                If p_bool_tbl_cell Then
                    For ij = 0 To UBound(tbl_cell())
                        If tbl_cell(ij).CellFeuille = g_numfeuille Then
                            If tbl_cell(ij).CellX = grdCell(g_numfeuille).ColSel And tbl_cell(ij).CellY = grdCell(g_numfeuille).RowSel Then
                                XPère = tbl_cell(ij).cellXPère
                                YPère = tbl_cell(ij).cellYPère
                                tbl_cell(ij).CellLink = ""
                                tbl_cell(ij).cellSQL = ""
                                ' supprimer aussi les autres
                                For ji = 0 To UBound(tbl_cell())
                                    If tbl_cell(ji).CellFeuille = g_numfeuille Then
                                        If tbl_cell(ji).cellXPère = XPère Then
                                            If tbl_cell(ji).cellYPère = YPère Then
                                                tbl_cell(ij).CellLink = ""
                                                tbl_cell(ji).cellSQL = ""
                                            End If
                                        End If
                                    End If
                                Next ji
                                Exit For
                            End If
                        End If
                    Next ij
                End If
            End If
        Else
            Call verifSiSauve
        End If
        ' finaliser l'affichage
        'MsgBox Forme
        strX = tbl_fichExcel(newDim).CmdX
        leX = FctIntColdest(strX)
        leY = tbl_fichExcel(newDim).CmdY
        If CmdChpSQL <> "" Then
            tbl_fichExcel(newDim).CmdChpSQL = CmdChpSQL
        End If
        ' Mettre le champ
        If chpnum > 0 Then
            sql = "select * from formetapechp where forec_num = " & tbl_fichExcel(newDim).CmdChpNum
            If Odbc_SelectV(sql, rs) = P_ERREUR Then
                Exit Sub
            End If
        End If
        'grdCell(v_idgrid).TextMatrix(leY, leX) = "    " & rs("forec_nom")
        p_bfaire_RowColChange = False
        grdCell(v_idgrid).row = leY
        grdCell(v_idgrid).col = leX
        Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_CHAMP).Picture
        ' Mise en forme
        IndiceNum = p_numindice_encours
    
        Public_VerifOuvrir g_CheminModele, False, True, p_tbl_FichExcelOuverts
    
        Call P_MettreChamp("Mettre", newDim, leX, leY, Forme, chpnum, IndiceNum, v_idgrid, False)
        p_bfaire_RowColChange = True
    
        If p_ListeRafraichirFenetre <> "" Then
            MsgBox "Votre feuille a besoin d'être ajustée."
            p_ListeRafraichirFenetre = ""
            p_ListeRafraichirTropX = 0
            p_ListeRafraichirTropY = 0
            Call Rafraichir
        End If
        If Not bool_ajouter Then
            If cmd(CMD_MODE_SIMUL).Visible Then
                DejaSimul = False
                If p_bool_tbl_cell Then
                    For ij = 0 To UBound(tbl_cell())
                        If tbl_cell(ij).CellFeuille = g_numfeuille Then
                            If tbl_cell(ij).cellXPère = leX And tbl_cell(ij).cellYPère = leY Then
                                If tbl_cell(ij).CellLink <> "" Then
                                    DejaSimul = True
                                    Exit For
                                End If
                            End If
                        End If
                    Next ij
                End If
                If DejaSimul Then Call cmd_Click(CMD_MODE_SIMUL)
            End If
        End If
    End If
End Sub

Private Function LibEtapeChp(ByVal v_forecnum As Long, ByVal v_NumFor_encours As Long)
    Dim sql As String, rs As rdoResultset
    
    LibEtapeChp = ""
    sql = "select * from formetapechp, formetape, formulaire where Forec_fornum=For_Num And Fore_Fornum=For_Num And Forec_Numetape=Fore_Numetape And Forec_num = " & v_forecnum
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Function
    End If
    If Not rs.EOF Then
        If v_NumFor_encours = rs("For_Num") Then
            LibEtapeChp = "(" & rs("For_Code") & " " & rs("Fore_LibCourt") & ")"
        Else
            LibEtapeChp = "(" & rs("For_Code") & " " & rs("Fore_LibCourt") & ")"
        End If
    End If
End Function

Private Sub ajouter_Plusieurs_champ(ByVal v_idgrid As Integer, ByVal v_NumFiltre As Long, ByVal v_rowsel As Long, ByVal v_colsel As Long, ByVal bool_ajouter As Boolean, ByVal bool_Direct As Boolean)

    Dim sql As String, sret As String, sfct As String
    Dim n As Integer, i As Integer, j As Integer
    Dim rs As rdoResultset
    Dim laDim As Integer
    Dim numfor As Integer
    Dim numchp As Integer
    Dim NumFiltre As Integer
    Dim bajout As Boolean
    Dim Prochain As Boolean
    Dim trouve As Boolean
    Dim chpnum As Integer
    Dim boolTexte As Boolean, BoolDate As Boolean, BoolEntier As Boolean
    Dim boolListe As Boolean, boolLstSpécial As Boolean, strLstSpécial As String
    Dim lib As String
    Dim ff_num As Integer, rsChp As rdoResultset
    Dim Forme As String, MenForme As String
    Dim leX As Integer, leY As Integer
    Dim sX As Integer, ligne1 As Integer
    Dim strX As String, forec_type As String
    Dim i_tbl_fichExcel As Integer, Liste_Num As String
    Dim IndiceNum As Integer
    Dim strType As String
    Dim ind_fich As Integer, lig_select As Integer
    Dim Anc_Forme As String
    Dim Frm As Form
    Dim StrCR As String
    Dim nbchp As Integer
    Dim colsel_local As String, rowsel_local As String
    Dim MenFType As String
    Dim BoolFait As Boolean
    Dim bMettreLib As Boolean, Pas As String
    Dim iMettreLib As Integer
    Dim typePas As String
    Dim BoolCondChpFait As Boolean
    Dim strCondCh As String
    Dim LstChpChoisis As String
    Dim messTrop As String
    Dim PasDefaut As String
    Dim nomDerChp As String
    Dim prem As Boolean
    
    BoolFait = False
    Pas = 0
    chpnum = 0
    IndiceNum = 0
    
    lig_select = -1
    Call CL_Init
    Call CL_InitGererTousRien(True)
    Call CL_InitMultiSelect(True, True)
    n = 0
    On Error GoTo Err_Suite2
    i = UBound(tbl_fichExcel())
    GoTo Suite_2
Err_Suite2:
    Resume Continu_2
Suite_2:
    MenForme = ""
                
Continu_2:
    On Error GoTo 0
    ' afficher tous les champs de ce filtre
    sql = "select * from filtreform where ff_num =" & v_NumFiltre
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Sub
    End If
    '
    numfor = rs("ff_fornum")
    ligne1 = 0
    ' il y a déjà un champs : ajouter un bouton supprimer
    
    sql = "select * from formetapechp where forec_fornum = " & numfor _
            & " order by forec_numetape, forec_ordre"
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Sub
    End If
    ' les autres
    nbchp = 0
    While Not rs.EOF
        If rs("Forec_num") = NumChpDernierChoisi Then
            Prochain = True
        End If
        If rs("Forec_nom").Value <> "" Then
            If rs("Forec_Type").Value = "CHECK" Or rs("Forec_Type").Value = "RADIO" Or rs("Forec_Type").Value = "SELECT" Then
                If rs("Forec_Type").Value = "CHECK" Then
                    strType = "Cases"
                ElseIf rs("Forec_Type").Value = "RADIO" Then
                    strType = "Options"
                ElseIf rs("Forec_Type").Value = "SELECT" Then
                    strType = "Liste"
                End If
                
                lib = rs("Forec_Nom").Value & "  (" & strType & " " & FctRecupNomListe(rs("forec_valeurs_possibles")) & ")"
                If Prochain Then lib = "-> " & lib
                If chpnum <> rs("Forec_Num") Then
                    Call CL_AddLigne(rs("Forec_Nom").Value & vbTab & rs("Forec_Label").Value & vbTab & strType, rs("Forec_Num").Value, "", False)
                    If rs("Forec_Num") = NumChpDernierChoisi Then
                        lig_select = nbchp + ligne1
                    End If
                    nbchp = nbchp + 1
                End If
            End If
            'Debug.Print rs("forec_fctvalid").Value
            If rs("forec_fctvalid").Value = "%NUMFCT" Or rs("forec_fctvalid").Value = "%NUMSERVICE" Then
                If rs("forec_fctvalid").Value = "%NUMFCT" Then
                    strType = "Fonction"
                ElseIf rs("forec_fctvalid").Value = "%NUMSERVICE" Then
                    strType = "Service"
                End If
                lib = rs("Forec_Nom").Value & "  (" & strType & ")"
                If Prochain Then lib = "-> " & lib
                If chpnum <> rs("Forec_Num") Then
                    Call CL_AddLigne(rs("Forec_Nom").Value & vbTab & rs("Forec_Label").Value & vbTab & strType, rs("Forec_Num").Value, "", False)
                    If rs("Forec_Num") = NumChpDernierChoisi Then
                        lig_select = nbchp + ligne1
                    End If
                    nbchp = nbchp + 1
                End If
            End If
            If rs("forec_fctvalid").Value = "%ENTIER" Or rs("forec_fctvalid").Value = "%NUM" Or rs("forec_fctvalid").Value = "%MTT" Then
                If rs("forec_fctvalid").Value = "%ENTIER" Then
                    strType = "Entier"
                ElseIf rs("forec_fctvalid").Value = "%NUM" Then
                    strType = "Numéro automatique"
                ElseIf rs("forec_fctvalid").Value = "%MTT" Then
                    strType = "Montant"
                End If
                lib = rs("Forec_Nom").Value & "  (" & strType & ")"
                If Prochain Then lib = "-> " & lib
                If chpnum <> rs("Forec_Num") Then
                    Call CL_AddLigne(rs("Forec_Nom").Value & vbTab & rs("Forec_Label").Value & vbTab & strType, rs("Forec_Num").Value, "", False)
                    If rs("Forec_Num") = NumChpDernierChoisi Then
                        lig_select = nbchp + ligne1
                    End If
                    nbchp = nbchp + 1
                End If
            End If
        End If
        Prochain = False
        rs.MoveNext
    Wend
    rs.Close
    If nbchp = 0 Then
        MsgBox "Aucun champ utilisable dans ce filtre" & Chr(13) & Chr(10) & "Champs utilisables : Radio, cases à cocher, Listes, Entiers, Montants, Services, Fonctions"
        Exit Sub
    End If
    Call CL_InitTitreHelp("Champs disponibles", "")
    Call CL_AddBouton("", p_chemin_appli + "\btnok.gif", vbKeyO, vbKeyF1, 0)
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
    Call CL_InitTaille(0, -15)
    Call CL_InitPointeur(lig_select)

    If p_ModeAssistant Then
        Me.FrmHTTPD.Caption = "Choix des champs"
        Me.PgbarHTTPDTaille.Value = 8
        MsgBox "Choisissez les champ que vous voulez intégrer à votre rapport"
    End If
    
    ChoixListe.Show 1
    If CL_liste.retour = 1 Then
        Exit Sub
    End If
    ' voir tous ceux qui ont été sélectionnés
    colsel_local = v_colsel
    rowsel_local = v_rowsel
    
    For i = 0 To UBound(CL_liste.lignes)
        If CL_liste.lignes(i).selected Then
            LstChpChoisis = LstChpChoisis & ";" & CL_liste.lignes(i).num
        End If
    Next i
    
    If p_ModeAssistant Then
        BoolFait = False
        prem = True
        colsel_local = 2
        rowsel_local = 2
        Me.FrmHTTPD.Caption = "Création des champs"
        Me.PgbarHTTPDTaille.Value = 6
    End If
    PgbarHTTPDTaille.Value = 1
    PgbarHTTPDTaille.max = STR_GetNbchamp(LstChpChoisis, ";")
    For i = 0 To STR_GetNbchamp(LstChpChoisis, ";")
        If STR_GetChamp(LstChpChoisis, ";", i) <> "" Then
            chpnum = STR_GetChamp(LstChpChoisis, ";", i)
            If p_ModeAssistant Then
                bMettreLib = True
                If Me.PgbarHTTPDTaille.Value = PgbarHTTPDTaille.max Then Me.PgbarHTTPDTaille.Value = 1
                Me.PgbarHTTPDTaille.Value = Me.PgbarHTTPDTaille.Value + 1
                'BoolFait = False
            Else
                If Not BoolFait Then iMettreLib = MsgBox("Voulez-vous afficher la désignation ?", vbDefaultButton1 + vbYesNo + vbQuestion)
                If iMettreLib = vbYes Then
                    bMettreLib = True
                Else
                    bMettreLib = False
                End If
            End If
    
            ' Mettre le champ
            'chpnum = CL_liste.lignes(i).num
            sql = "select * from formetapechp where forec_num = " & chpnum
            
            If Odbc_SelectV(sql, rs) = P_ERREUR Then
                Exit Sub
            End If
            If rs.EOF Then
                GoTo Lab_Next_i
            End If
            
            '
            ' selon type de champs
            ' mettre dans tbl_fichExcel
            Select Case rs("forec_type")
            Case "TEXT"
                boolTexte = True
                If InStr(rs("forec_fctvalid"), "DATE") > 0 Then
                    BoolDate = True
                ElseIf InStr(rs("forec_fctvalid"), "ENTIER") > 0 Then
                    BoolEntier = True
                    boolLstSpécial = True
                    strLstSpécial = rs("forec_fctvalid").Value
                ElseIf InStr(rs("forec_fctvalid"), "MTT") > 0 Then
                    BoolEntier = True
                    boolLstSpécial = True
                    strLstSpécial = rs("forec_fctvalid").Value
                ElseIf rs("forec_fctvalid").Value = "%NUMFCT" Or rs("forec_fctvalid").Value = "%NUMSERVICE" Then
                    boolLstSpécial = True
                    strLstSpécial = rs("forec_fctvalid").Value
                ElseIf rs("forec_fctvalid").Value = "%NUMUTIL" Then
                    boolLstSpécial = True
                    strLstSpécial = rs("forec_fctvalid").Value
                End If
            Case "CHECK"
                boolListe = True
            Case "RADIO"
                boolListe = True
            Case "SELECT"
                boolListe = True
            End Select
            If boolLstSpécial Or boolListe Then
                If bool_ajouter Then
                    'grdCell(v_idgrid).TextMatrix(v_rowsel, v_colsel) = rs("forec_nom") '    & " " & rs("forec_type")
                    Dim newDim As Integer
                    On Error GoTo Err_Suite_3
                    newDim = UBound(tbl_fichExcel()) + 1
                    GoTo Suite_3
Err_Suite_3:
                    newDim = 1
                    Resume Suite_3
Suite_3:
                    On Error GoTo 0
                    ReDim Preserve tbl_fichExcel(newDim) As SFICH_PARAM_EXCEL
                    p_bool_tbl_fichExcel = True
                    tbl_fichExcel(newDim).CmdType = "CHP"
                    tbl_fichExcel(newDim).CmdFormNum = v_NumFiltre
                    tbl_fichExcel(newDim).CmdFormIndice = p_numindice_encours
                    tbl_fichExcel(newDim).CmdChpNum = rs("forec_num")
                    tbl_fichExcel(newDim).CmdFenNum = g_numfeuille
                    tbl_fichExcel(newDim).CmdX = FctStrColDest(colsel_local)
                    tbl_fichExcel(newDim).CmdY = rowsel_local
                End If
                ' choisir la forme à donner au résultat
                Anc_Forme = tbl_fichExcel(newDim).CmdMenFormeChp
                
                Set Frm = PrmFormatChp
                If bool_ajouter Then
                    'If MenForme = "" Then
                    '    MenForme = p_Derniere_MenForme
                    'End If
                    'Forme = PrmFormatChp.AppelFrm("Ajout", CL_liste.lignes(CL_liste.pointeur).num, numfor, v_numFiltre, MenForme, boolLstSpécial, strLstSpécial)
                    If Not BoolFait Then
                        Forme = PrmFormatChp.AppelFrm("AjoutPlusieurs", chpnum, 0, numfor, v_NumFiltre, MenForme, boolLstSpécial, strLstSpécial)
                        MenFType = STR_GetChamp(Forme, "#", 0)
                        If MenFType = "Colonne_Lib" Or MenFType = "Colonne_Val" Then
                            Pas = 2
                            typePas = "horizontal"
                        ElseIf MenFType = "Colonne_Lib_Val" Then
                            Pas = 3
                            typePas = "horizontal"
                        ElseIf MenFType = "Ligne_Lib" Or MenFType = "Ligne_Val" Then   'en Ligne
                            Pas = 2
                            typePas = "vertical"
                        ElseIf MenFType = "Ligne_Lib_Val" Then   'en Ligne
                            typePas = "vertical"
                            Pas = 3
                        End If
                        If Not p_ModeAssistant Then
                            PasDefaut = Pas
                            Pas = InputBox("Indiquez l'espacement " & typePas & " entre ces champs", "Espacement", Pas)
                            If Pas = "" Then Pas = PasDefaut
                        End If
                        BoolFait = True
                    End If
                    'MsgBox "retour"
                End If
                Set Frm = Nothing
                If Forme = "QUITTER" Then
                    Exit Sub
                End If
                If Forme = "" Then
                    Forme = Anc_Forme
                ElseIf STR_GetNbchamp(Forme, "#") = 2 Then
                    Forme = "Ligne_Lib_Val#Toutes#VALEUR#"
                End If
                tbl_fichExcel(newDim).CmdMenFormeChp = Forme
                        
                ' finaliser l'affichage
TestXY:
                If p_ModeAssistant Then
                    If prem Then
                        If Mid(Forme, 1, 5) = "Ligne" Then
                            typePas = "vertical"
                        Else
                            typePas = "horizontal"
                        End If
                        leX = 2
                        leY = 2
                        tbl_fichExcel(newDim).CmdX = "B"
                        tbl_fichExcel(newDim).CmdY = 2
                        prem = False
                    Else
                        If Mid(Forme, 1, 5) = "Ligne" Then
                            leY = leY + Pas
                        Else
                            leX = leX + Pas
                        End If
                    End If
                Else
                    strX = tbl_fichExcel(newDim).CmdX
                    leX = FctIntColdest(strX)
                    leY = tbl_fichExcel(newDim).CmdY
                
                    If typePas = "vertical" And leX = 1 And bMettreLib Then
                        ' on ajoute 1 au X
                        strX = "B"
                        tbl_fichExcel(newDim).CmdX = "B"
                        leX = FctIntColdest(strX)
                        GoTo TestXY
                    ElseIf typePas = "horizontal" And leY = 1 And bMettreLib Then
                        ' on ajoute 1 au Y
                        tbl_fichExcel(newDim).CmdY = 2
                        GoTo TestXY
                    End If
                End If
                
                ' Mettre le champ
                sql = "select * from formetapechp where forec_num = " & tbl_fichExcel(newDim).CmdChpNum
                If Odbc_SelectV(sql, rs) = P_ERREUR Then
                    Exit Sub
                End If
                'grdCell(v_idgrid).TextMatrix(leY, leX) = "    " & rs("forec_nom")
                p_bfaire_RowColChange = False
                If leY >= grdCell(v_idgrid).Rows Then
                    p_ListeRafraichirFenetre = v_idgrid
                    messTrop = "Trop de lignes"
                End If
                If leX >= grdCell(v_idgrid).Cols Then
                    p_ListeRafraichirFenetre = v_idgrid
                    messTrop = "Trop de colonnes"
                End If
                If p_ModeAssistant Then
                    cmd(CMD_ENREGISTRER).tag = cmd(CMD_ENREGISTRER).tag + 1
                ElseIf p_ListeRafraichirFenetre = "" Then
                    grdCell(v_idgrid).row = leY
                    grdCell(v_idgrid).col = leX
                    Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_CHAMP).Picture
                Else
                    ' il y en a trop => agrandir la fenetre
                    GoTo Fin
                End If
                nomDerChp = rs("Forec_Label") & " (" & rs("Forec_Nom") & ")"
                ' Mise en forme
                IndiceNum = p_numindice_encours
                If p_ModeAssistant Or p_ListeRafraichirFenetre = "" Then
                    Call P_MettreChamp("Mettre", newDim, leX, leY, Forme, rs("forec_num"), IndiceNum, v_idgrid, False)
                End If
                p_bfaire_RowColChange = True
            
                MenFType = STR_GetChamp(Forme, "#", 0)

                ' Indiquer une condition
                If BoolCondChpFait And strCondCh = "" Then
                Else
                    If Not p_ModeAssistant Then
                        p_i_tabExcel = newDim
                        Call ajouter_condChamp("AjoutSpecialPrem", newDim, 0, strCondCh)
                    End If
                    BoolCondChpFait = True
                End If
                                
                If bMettreLib Then
                    ' Intitulé du champ
                    sql = "select * from formetapechp where forec_num = " & chpnum
                    If Odbc_SelectV(sql, rs) = P_ERREUR Then
                        Exit Sub
                    End If
                    If rs.EOF Then
                        rs.Close
                        Exit Sub
                    End If
                    Dim XLib As Integer, YLib As Integer
                    If MenFType = "Colonne_Lib" Or MenFType = "Colonne_Val" Or MenFType = "Colonne_Lib_Val" Then
                        XLib = colsel_local
                        YLib = (rowsel_local - 1)
                        If YLib = 0 Then YLib = 1
                    ElseIf MenFType = "Ligne_Lib" Or MenFType = "Ligne_Val" Or MenFType = "Ligne_Lib_Val" Then
                        XLib = (colsel_local - 1)
                        YLib = rowsel_local
                        If XLib = 0 Then XLib = 1
                    End If
                    g_ColSelDest = FctStrColDest(XLib) & YLib
                    If XLib > Len(Public_Alpha) Then
                        GoTo Lab_Next_i
                    End If
                    Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).Value = rs("forec_label").Value
         
                    If p_ListeRafraichirFenetre = "" Then
                        grdCell(g_numfeuille).TextMatrix(YLib, XLib) = rs("forec_label").Value
                    End If
                    rs.Close
                End If
                If MenFType = "Colonne_Lib" Or MenFType = "Colonne_Val" Then
                    colsel_local = val(colsel_local) + Pas
                ElseIf MenFType = "Colonne_Lib_Val" Then
                    colsel_local = val(colsel_local) + Pas
                ElseIf MenFType = "Ligne_Lib" Or MenFType = "Ligne_Val" Then   'en Ligne
                    rowsel_local = val(rowsel_local) + Pas
                ElseIf MenFType = "Ligne_Lib_Val" Then   'en Ligne
                    rowsel_local = val(rowsel_local) + Pas
                End If
            End If
        End If
Lab_Next_i:
    Next i
Fin:
    If Not p_ModeAssistant Then
        Call verifSiSauve
    Else
        cmd(CMD_ENREGISTRER).Visible = True
    End If
    If p_ListeRafraichirFenetre <> "" Then
        If Not p_ModeAssistant Then
            If messTrop = "" Then
                If p_ListeRafraichirTropX > 0 Then
                    messTrop = "Trop de colonnes (" & p_ListeRafraichirTropX & ")"
                End If
            End If
            MsgBox "Votre feuille comporte " & messTrop & " et a besoin d'être agrandie." & Chr(13) & Chr(10) & "Dernier champ intégré " & nomDerChp
            p_ListeRafraichirFenetre = ""
            p_ListeRafraichirTropX = 0
            p_ListeRafraichirTropY = 0
            Call Rafraichir
        End If
    End If
End Sub

Private Sub ajouter_resultatrapport()
    Dim n As Integer, i As Integer
    Dim sql As String
    Dim bchoisi As Boolean
    Dim rs As rdoResultset
    Dim rp_num As Integer, rp_titre As String, rp_chemin As String
    Dim newDim As Integer
    Dim Frm As Form
    Dim rp As String
    Dim iret As Integer
    Dim FichServeur As String, FichLocal As String
    Dim liberr As String
    Dim docnum As Integer, fichnum As Integer
    Dim Feuille As Integer, cellule As String
    
    ' lire les rapports
    p_ModeAssistant = False
    Set Frm = VoirFichiers
    Call VoirFichiers.AppelFrm(0, "SEL", rp)
    Set Frm = Nothing
    If rp <> "" Then
        ' RP_22_1_25
        ' 22 rp_document rpd_rpnum
        ' 1 rp_fichier rpf_rpdnum
        ' 25 rp_fichier rpf_num
        rp_num = val(STR_GetChamp(rp, "_", 1))
        docnum = val(STR_GetChamp(rp, "_", 2))
        fichnum = val(STR_GetChamp(rp, "_", 3))
        FichServeur = p_Chemin_Résultats & "/RP_" & rp_num & "/Doc_" & docnum & "/" & fichnum & p_PointExtensionXls
        FichLocal = p_chemin_appli & "\tmp\RP" & Format(Time, "hhmmss") & p_PointExtensionXls
        Call FICH_EffacerFichier(FichLocal, False)
        If KF_GetFichier(FichServeur, FichLocal) = P_OK Then
            Call Excel_AfficherDoc(FichLocal, "", True, True)
            Call CL_Init
            Call CL_InitTitreHelp("Liste des Feuilles", "")
            Call CL_AddBouton("", p_chemin_appli + "\btnok.gif", vbKeyO, vbKeyF1, 0)
            Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
            Call CL_InitTaille(0, -15)
            For i = 1 To UBound(p_TbFenetres)
                Call CL_AddLigne(p_TbFenetres(i), i, rp, False, False)
            Next i
            ChoixListe.Show 1
            If CL_liste.retour = 2 Then
                Exit Sub
            ElseIf CL_liste.retour = 0 Then
                Feuille = CL_liste.lignes(CL_liste.pointeur).num
            End If
            ' Coordonnées
LabSaisie:
            cellule = InputBox("Cellule", "Résultat d'un Rapport", "A1")
            If cellule = "" Then
                Exit Sub
            Else
                If FctIntColdest(Mid(cellule, 1, 1)) > 0 Then
                    If IsNumeric(Mid(cellule, 2)) Then
                    Else
                        MsgBox "Format invalide"
                        GoTo LabSaisie
                    End If
                Else
                    MsgBox "Format invalide"
                    GoTo LabSaisie
                End If
            End If
        Else
            Exit Sub
        End If
        On Error GoTo Err_Suite_3
        newDim = UBound(tbl_fichExcel()) + 1
        GoTo Suite_3
Err_Suite_3:
        newDim = 1
        Resume Suite_3
Suite_3:
        On Error GoTo 0
        ReDim Preserve tbl_fichExcel(newDim) As SFICH_PARAM_EXCEL
        p_bool_tbl_fichExcel = True
        tbl_fichExcel(newDim).CmdType = "RES"
        tbl_fichExcel(newDim).CmdFormNum = 0
        tbl_fichExcel(newDim).CmdFormIndice = 0
        tbl_fichExcel(newDim).CmdChpNum = 0
        tbl_fichExcel(newDim).CmdFenNum = g_numfeuille
        tbl_fichExcel(newDim).CmdX = FctStrColDest(g_Ajouter_Champ_grdCell_ColSel)
        tbl_fichExcel(newDim).CmdY = g_Ajouter_Champ_grdCell_RowSel
        tbl_fichExcel(newDim).CmdChpRelierà = rp & ";" & tbl_fenExcel(1).FenNom & ";" & cellule
        p_bfaire_RowColChange = False
        grdCell(g_numfeuille).row = g_Ajouter_Champ_grdCell_RowSel
        grdCell(g_numfeuille).col = g_Ajouter_Champ_grdCell_ColSel
        Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_RESULTAT_RAPPORT).Picture
        p_bfaire_RowColChange = True
    End If
End Sub

Private Sub ajouter_champ_filtre(ByVal v_idgrid As Integer, ByVal v_NumFiltre As Long, ByVal v_rowsel As Long, ByVal v_colsel As Long, ByVal bool_ajouter As Boolean, ByVal bool_Direct As Boolean)

    Dim sql As String, sret As String, sfct As String
    Dim nb As Integer
    Dim encore As Boolean
    Dim n As Integer, i As Integer, j As Integer
    Dim ichp As Integer, int_ForNum As Integer, int_ChpNum As Integer
    Dim rs As rdoResultset
    Dim rsFiltre As rdoResultset
    Dim laDim As Integer
    Dim numfor As Integer
    Dim numchp As Integer
    Dim NumFiltre As Integer
    Dim bajout As Boolean
    Dim selected As Boolean
    Dim Prochain As Boolean
    Dim trouve As Boolean
    Dim chpnum As Integer
    Dim boolTexte As Boolean, BoolDate As Boolean, BoolEntier As Boolean
    Dim boolListe As Boolean, boolLstSpécial As Boolean, strLstSpécial As String
    Dim lib As String
    Dim ff_num As Integer, rsChp As rdoResultset
    Dim nbChamp As Integer
    Dim Forme As String, MenForme As String
    Dim leX As Integer, leY As Integer
    Dim sX As Integer
    Dim strX As String, forec_type As String
    Dim i_tbl_fichExcel As Integer, Liste_Num As String
    Dim IndiceNum As Integer
    Dim strType As String
    Dim iMin As Integer
    Dim ind_fich As Integer
    Dim Anc_Forme As String
    Dim Frm As Form
    Dim StrCR As String
    Dim nbchp As Integer
    Dim s As String
    Dim sOut As String
    Dim sOut1 As String
    Dim AncListeChamp As String, NewListeChamp As String
    Dim NewLibListeChamp As String
    Dim sep As String
    Dim bSelected As Boolean
    Dim sOrdre As String
    Dim AncForme As String
    Dim Indice As Integer
    Dim sOp As String
    Dim sNumChp As String, sOrdreChp As String
    Dim sFFNum As String
    
    chpnum = 0
    IndiceNum = 0
    
    'i_tbl_fichExcel = 0
    Call CL_Init
    n = 0
    On Error GoTo Err_Suite2
    i = UBound(tbl_fichExcel())
    GoTo Suite_2
Err_Suite2:
    Resume Continu_2
Suite_2:
    MenForme = ""
    On Error GoTo 0
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdChpNum > 0 Then
            If tbl_fichExcel(i).CmdType = "CHP" Then
                If tbl_fichExcel(i).CmdFenNum = v_idgrid Then
                    'Debug.Print Mid(Alpha, grdCell(index).ColSel, 1)
                    If tbl_fichExcel(i).CmdX = FctStrColDest(v_colsel) And tbl_fichExcel(i).CmdY = v_rowsel Then
                        chpnum = tbl_fichExcel(i).CmdChpNum
                        MenForme = tbl_fichExcel(i).cmdTypeChp
                        MenForme = Replace(MenForme, "Liste=", "")
                        IndiceNum = tbl_fichExcel(i).CmdFormIndice
                        i_tbl_fichExcel = i
                        Exit For
                    End If
                End If
            End If
        End If
    Next i
                
    If i_tbl_fichExcel = 0 Then
        i_tbl_fichExcel = 0 ' p_i_tabExcel
    End If
    'If p_i_tabExcel <> i_tbl_fichExcel Then MsgBox p_i_tabExcel & " " & i_tbl_fichExcel

Continu_2:
    On Error GoTo 0
    ' afficher tous les champs de ce filtre
    sql = "select * from filtreform where ff_num =" & v_NumFiltre
    If Odbc_SelectV(sql, rsFiltre) = P_ERREUR Then
        Exit Sub
    End If
    '
    numfor = rsFiltre("ff_fornum")
    
    s = STR_GetChamp(rsFiltre("FF_Fornums"), "*", 0)
    sOp = ""
    If s = "FF" Or s = "FP" Then
        sFFNum = "forec_fornum = " & STR_GetChamp(rsFiltre("FF_Fornums"), "*", 1) & " Or " & "forec_fornum = " & STR_GetChamp(rsFiltre("FF_Fornums"), "*", 2)
        sOp = "2"
    ElseIf s = "N" Then
        sFFNum = "forec_fornum = " & STR_GetChamp(rsFiltre("FF_Fornums"), "*", 1)
    End If
    
    ' il y a déjà un champs : ajouter un bouton supprimer
    
    Call CL_InitGererTousRien(True)
    Call CL_InitMultiSelect(True, True)
    
    nbchp = 0
    If i_tbl_fichExcel > 0 Then
        AncListeChamp = tbl_fichExcel(i_tbl_fichExcel).cmdTypeChp
        AncListeChamp = Replace(AncListeChamp, "Liste=", "")
    Else
        AncListeChamp = ""
    End If
    nbChamp = STR_GetNbchamp(rsFiltre("ff_champ"), ";")
    For ichp = 0 To nbChamp - 1
        s = STR_GetChamp(STR_GetChamp(rsFiltre("ff_champ"), ";", ichp), ".", 0)
        If s <> "" Then int_ForNum = val(s)
        s = STR_GetChamp(STR_GetChamp(rsFiltre("ff_champ"), ";", ichp), ".", 1)
        If s <> "" Then int_ChpNum = val(s)
        If int_ChpNum <> 0 And int_ForNum <> 0 Then
            sql = "select * from formetapechp where forec_fornum = " & int_ForNum _
                    & " and forec_num=" & int_ChpNum
            If Odbc_SelectV(sql, rsChp) = P_ERREUR Then
                Exit Sub
            End If
            If Not rsChp.EOF Then
                If rsChp("Forec_Type").Value = "CHECK" Or rsChp("Forec_Type").Value = "RADIO" Or rsChp("Forec_Type").Value = "SELECT" Then
                    If rsChp("Forec_Type").Value = "CHECK" Then
                        strType = "Cases"
                    ElseIf rsChp("Forec_Type").Value = "RADIO" Then
                        strType = "Options"
                    ElseIf rsChp("Forec_Type").Value = "SELECT" Then
                        strType = "Liste"
                    End If
                ElseIf rsChp("Forec_Type").Value = "TEXT" Then
                    strType = "Text"
                    If rsChp("Forec_fctvalid").Value = "" Then
                    ElseIf rsChp("Forec_fctvalid").Value = "%NUMFCT" Then
                        strType = "Fonction"
                    ElseIf rsChp("Forec_fctvalid").Value = "%NUM" Then
                        strType = "Numéro automatique"
                    ElseIf InStr(rsChp("Forec_fctvalid").Value, "%DATE") > 0 Then
                        strType = "Date"
                    ElseIf rsChp("forec_fctvalid").Value = "%ENTIER" Then
                        strType = "Entier"
                    ElseIf rsChp("forec_fctvalid").Value = "%MTT" Then
                        strType = "Montant"
                    Else
                        strType = rsChp("Forec_fctvalid").Value
                    End If
                ElseIf rsChp("Forec_Type").Value = "TEXTAREA" Then
                    strType = "Commentaire"
                Else
                    strType = rsChp("Forec_Type").Value
                End If
                If rsChp("forec_type") = "SELECT" Or rsChp("forec_type") = "RADIO" Or rsChp("forec_type") = "CHECK" Then
                    lib = rsChp("Forec_Nom").Value & vbTab & "  (" & strType & " " & FctRecupNomListe(rsChp("forec_valeurs_possibles")) & ")"
                Else
                    lib = rsChp("Forec_Nom").Value & vbTab & "  (" & strType & ")"
                End If
                ' voir si selected
                bSelected = False
                AncListeChamp = Replace(AncListeChamp, "New", "")
                AncListeChamp = Replace(AncListeChamp, "Ici", "")
                For i = 0 To STR_GetNbchamp(AncListeChamp, ";")
                    s = STR_GetChamp(AncListeChamp, ";", i)
                    sNumChp = STR_GetChamp(s, ":", 0)
                    sOrdreChp = STR_GetChamp(s, ":", 1)
                    If sNumChp <> "" Then
                        If sNumChp = int_ChpNum Then
                            bSelected = True
                            Exit For
                        End If
                    End If
                Next i
                
                If sOp = "" Then
                    s = ""
                Else
                    s = LibEtapeChp(rsChp("Forec_Num"), numfor)
                End If
                Call CL_AddLigne(IIf(sOrdreChp <> "", "(ordre:" & sOrdreChp & ")", "") & vbTab & s & IIf(s <> "", vbTab, "") & lib, rsChp("Forec_Num").Value, sOrdreChp, bSelected)
                nbchp = nbchp + 1
            End If
        End If
    Next ichp
    
    rsFiltre.Close
    
    If nbchp = 0 Then
        MsgBox "Aucun champ utilisable dans ce filtre" & Chr(13) & Chr(10) & "Champs utilisables : Radio, cases à cocher, Listes, Entiers, Montants, Services, Fonctions"
        Exit Sub
    End If
    
    s = ""
    If InStr(tbl_fichExcel(i_tbl_fichExcel).cmdTypeChp, "New") > 0 Then
        s = "placées dans une autre Feuille"
        AncForme = "New"
    ElseIf InStr(tbl_fichExcel(i_tbl_fichExcel).cmdTypeChp, "Ici") > 0 Then
        s = "placées dans cette Feuille"
        AncForme = "Ici"
    End If
    Call CL_InitTitreHelp("Champs disponibles dans ce filtre (" & s & ")", "")
    'Call CL_AddBouton("", p_chemin_appli + "\btnok.gif", vbKeyO, vbKeyF1, 0)
    Call CL_AddBouton("OK : Cette Feuille", "", vbKeyO, vbKeyF1, 2500)
    Call CL_AddBouton("OK : Nouvelle Feuille", "", vbKeyO, vbKeyF1, 2500)
    Call CL_AddBouton("Ordre", "", 0, 0, 2000)
    Call CL_AddBouton("", p_chemin_appli + "\btnsupprimer.gif", 0, 0, 800)
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
    Call CL_InitTaille(0, -15)
LabAffiche:
    ChoixListe.Show 1
    
    If CL_liste.retour = 4 Then
        Exit Sub
    End If
    
    If CL_liste.retour = 2 Then ' Ordre
        sOrdre = CL_liste.lignes(CL_liste.pointeur).texte
        sOrdre = STR_GetChamp(sOrdre, vbTab, 0)
        sOrdre = Replace(sOrdre, "(ordre:", "")
        sOrdre = Replace(sOrdre, ")", "")
        sOrdre = Trim(sOrdre)
        sOrdre = InputBox("Ordre", "Ordre", sOrdre)
        s = "(ordre:" & sOrdre & ")"
        For i = 1 To STR_GetNbchamp(CL_liste.lignes(CL_liste.pointeur).texte, vbTab) - 1
            s = s & vbTab & STR_GetChamp(CL_liste.lignes(CL_liste.pointeur).texte, vbTab, i)
        Next i
        CL_liste.lignes(CL_liste.pointeur).texte = s
        CL_liste.lignes(CL_liste.pointeur).tag = sOrdre
        GoTo LabAffiche:
    End If
    
    If CL_liste.retour = 3 Then ' Supprimer
LabSupprimer:
        i = i_tbl_fichExcel
        strX = tbl_fichExcel(i).CmdX
        leX = FctIntColdest(strX)
        leY = tbl_fichExcel(i).CmdY
        grdCell(v_idgrid).col = leX
        grdCell(v_idgrid).row = leY
        Set grdCell(v_idgrid).CellPicture = CM_LoadPicture("")
        tbl_fichExcel(i).CmdChpNum = -1
        tbl_fichExcel(i).CmdType = ""
        p_bfaire_RowColChange = True
        Call verifSiSauve
        grdCondChamp(tbl_fichExcel(i).CmdChpGridIndice).Rows = 0
        cmd(CMD_MODE_CHAMP).Visible = False
        cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
        cmd(CMD_MODE_SIMUL).Visible = False
        cmd(CMD_MODE_LIEN).Visible = False
        Exit Sub
    End If
    
    NewListeChamp = ""
    NewLibListeChamp = ""
    sep = ""
    iMin = 0
    For i = 0 To UBound(CL_liste.lignes)
        If CL_liste.lignes(i).selected Then
            NewListeChamp = NewListeChamp & sep & CL_liste.lignes(i).num & ":" & CL_liste.lignes(i).tag
            sql = "select * from formetapechp where forec_num = " & CL_liste.lignes(i).num
            If Odbc_SelectV(sql, rs) = P_ERREUR Then
                Exit Sub
            End If
            If Not rs.EOF Then
                If CL_liste.lignes(CL_liste.pointeur).num > 0 Then
                    If sep = "" Then
                        NewLibListeChamp = NewLibListeChamp & rs("forec_nom")
                    Else
                        NewLibListeChamp = NewLibListeChamp & " , " & rs("forec_nom")
                    End If
                End If
            End If
            sep = ";"
        End If
    Next i
    ' les reclasser
    iMin = 0
    sOut = ""
    sOut1 = ""
    nb = STR_GetNbchamp(NewListeChamp, ";")
    encore = True
    While encore
        For i = 0 To STR_GetNbchamp(NewListeChamp, ";")
            s = STR_GetChamp(NewListeChamp, ";", i)
            sOrdre = STR_GetChamp(s, ":", 1)
            If s <> "" Then
                If iMin = 0 Then
                    If sOrdre = "" Or val(sOrdre) = 0 Then
                        If sOrdre = "" Then
                            s = s & "0"
                        End If
                        sOut = sOut & IIf(sOut = "", "", ";") & s
                        sOut1 = sOut1 & IIf(sOut1 = "", "", ",") & STR_GetChamp(NewLibListeChamp, ",", i)
                    End If
                ElseIf sOrdre <> "" And val(sOrdre) = iMin Then
                    sOut = sOut & IIf(sOut = "", "", ";") & s
                    sOut1 = sOut1 & IIf(sOut1 = "", "", ",") & STR_GetChamp(NewLibListeChamp, ",", i)
                End If
            End If
        Next i
        If STR_GetNbchamp(sOut, ";") = nb Then
            ' on a fini
            encore = False
        End If
        iMin = iMin + 1
    Wend
    NewListeChamp = sOut
    NewLibListeChamp = sOut1
    
Mettre_le_Champ:
    ' Mettre le champ
    If NewLibListeChamp = "" Then
        If Not bool_ajouter Then
            If MsgBox("Aucun champ n'a été sélectionné => Supprimer le champ ?", vbDefaultButton1 + vbYesNo + vbQuestion, "Champ Détaillé") = vbYes Then
                GoTo LabSupprimer
            End If
        End If
        GoTo LabPasMis
    End If
    If bool_ajouter Then
        Dim newDim As Integer
        On Error GoTo Err_Suite_3
        newDim = UBound(tbl_fichExcel()) + 1
        GoTo Suite_3
Err_Suite_3:
        newDim = 1
        Resume Suite_3
Suite_3:
        On Error GoTo 0
        ReDim Preserve tbl_fichExcel(newDim) As SFICH_PARAM_EXCEL
        p_bool_tbl_fichExcel = True
        tbl_fichExcel(newDim).CmdType = "CHP"
        tbl_fichExcel(newDim).CmdFormNum = v_NumFiltre
        tbl_fichExcel(newDim).CmdFormIndice = p_numindice_encours
        tbl_fichExcel(newDim).CmdChpNum = rs("forec_num")
        tbl_fichExcel(newDim).CmdFenNum = g_numfeuille
        tbl_fichExcel(newDim).CmdX = FctStrColDest(v_colsel)
        tbl_fichExcel(newDim).CmdY = v_rowsel
        If CL_liste.retour = 0 Then
            tbl_fichExcel(newDim).cmdTypeChp = "Liste=Ici" & NewListeChamp
        Else
            tbl_fichExcel(newDim).cmdTypeChp = "Liste=New" & NewListeChamp
        End If
    Else
        newDim = i_tbl_fichExcel
        If CL_liste.retour = 0 Then
            tbl_fichExcel(newDim).cmdTypeChp = "Liste=Ici" & NewListeChamp
        Else
            tbl_fichExcel(newDim).cmdTypeChp = "Liste=New" & NewListeChamp
        End If
    End If
    tbl_fichExcel(newDim).CmdMenFormeChp = ""
            
    ' Loader le Grid
    If bool_ajouter Then
        Indice = p_Indice_Grid_ChpCond + 1
        Load grdCondChamp(Indice)
        grdCondChamp(Indice).Cols = 10
        grdCondChamp(Indice).Rows = 0
        grdCondChamp(Indice).ColWidth(GrdCondChpChpNum) = 0
        grdCondChamp(Indice).ColWidth(GrdCondChpCndNum) = 0
        grdCondChamp(Indice).ColWidth(GrdCondChpCndOper) = 0
        grdCondChamp(Indice).ColWidth(GrdCondChpImgDetail) = 240
        grdCondChamp(Indice).ColWidth(GrdCondChpCndFrancais) = grdCondChamp(Indice).Width - 1000
        grdCondChamp(Indice).ColWidth(GrdCondChpCndVal) = 0
        grdCondChamp(Indice).ColWidth(GrdCondChpCndSQL) = 0
        grdCondChamp(Indice).ColWidth(GrdCondChpBoolDetail) = 0
        grdCondChamp(Indice).ColWidth(GrdCondChpIndTbl) = -1
        
        ' mettre cet indice dans tbl_fichExcel
        p_Indice_Grid_ChpCond = p_Indice_Grid_ChpCond + 1
        tbl_fichExcel(newDim).CmdChpGridIndice = Indice
        tbl_fichExcel(newDim).CmdChpGridChargé = "Oui"
    End If
    
    strX = tbl_fichExcel(newDim).CmdX
    leX = FctIntColdest(strX)
    leY = tbl_fichExcel(newDim).CmdY
    ' Mettre le champ
    p_bfaire_RowColChange = False
    grdCell(v_idgrid).row = leY
    grdCell(v_idgrid).col = leX
    If InStr(tbl_fichExcel(newDim).cmdTypeChp, "Ici") > 0 Then
        Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_CHP_LOUPEB).Picture
    Else
        Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_CHP_LOUPER).Picture
    End If
    ' Mise en forme
    IndiceNum = p_numindice_encours
    Call P_MettreChamp("Mettre", newDim, leX, leY, Forme, 0, IndiceNum, v_idgrid, False)
    p_bfaire_RowColChange = True
        
    Call verifSiSauve

    '     RAFFRAICHIR
    'MsgBox grdCell(v_idgrid).row
    'MsgBox grdCell(v_idgrid).col
    Call MajConditionChamp(newDim)
    'grdCell_Click (v_idgrid)
    
    If p_ListeRafraichirFenetre <> "" Then
        MsgBox "Votre feuille a besoin d'être ajustée."
        p_ListeRafraichirFenetre = ""
        p_ListeRafraichirTropX = 0
        p_ListeRafraichirTropY = 0
        Call Rafraichir
    End If
LabPasMis:
End Sub

Function FctRecupNomListe(v_numliste)
    Dim sql As String, rs As rdoResultset
    
    sql = "select * from lstvalchp where lvc_num=" & v_numliste
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Function
    End If
    If Not rs.EOF Then
        FctRecupNomListe = rs("lvc_nom")
    End If

End Function

Private Function ChoisirForme(v_Forme As String, v_forecnum As Integer, v_CmdMenFormeChp As String)
    Dim sql As String
    Dim i As Integer
    Dim rs As rdoResultset
    Dim selected As Boolean
    Dim stitre As String
    Dim sTypeValeurs As String
    Dim sForme As String
    Dim MenFType As String
    Dim sTypeChp As String
    Dim MenFVal As String
    
    ' choisir la forme (horizontal ou vertical)
    Call CL_Init
    sql = "select * from formetapechp where forec_num = " & v_forecnum
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Function
    End If
    
    stitre = "Champ " & rs("forec_nom")
    sTypeChp = rs("forec_type")
    Call CL_InitTitreHelp(stitre, "")
    rs.Close
            
    MenFType = STR_GetChamp(v_CmdMenFormeChp, "#", 0)
    If MenFType = "Ligne_Lib" Then selected = True Else selected = False
    Call CL_AddLigne("En Ligne : Libellé", Ligne_Lib, "", selected)
    If MenFType = "Ligne_Val" Then selected = True Else selected = False
    Call CL_AddLigne("En Ligne : Valeur", Ligne_Val, "", selected)
    If MenFType = "Ligne_Lib_Val" Then selected = True Else selected = False
    Call CL_AddLigne("En Ligne : Libellé + Valeur", Ligne_Lib_Val, "", selected)
    If MenFType = "Colonne_Lib" Then selected = True Else selected = False
    Call CL_AddLigne("En Colonne : Libellé", Colonne_Lib, "", selected)
    If MenFType = "Colonne_Val" Then selected = True Else selected = False
    Call CL_AddLigne("En Colonne : Valeur", Colonne_Val, "", selected)
    If MenFType = "Colonne_Lib_Val" Then selected = True Else selected = False
    Call CL_AddLigne("En Colonne : Libellé + Valeur", Colonne_Lib_Val, "", selected)
    'If sTypeChp = "RADIO" Or sTypeChp = "CHECK" Or sTypeChp = "SELECT" Then
    '    If MenFType = "Total_Val" Then selected = True Else selected = False
    '    Call CL_AddLigne("Le Total", Total_Val, "", selected)
    '    If MenFType = "Pourcent_Val" Then selected = True Else selected = False
    '    Call CL_AddLigne("Le Pourcentage", Pourcent_Val, "", selected)
    'End If
    Call CL_AddBouton("", p_chemin_appli + "\btnok.gif", vbKeyO, vbKeyF1, 0)
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
    Call CL_InitMultiSelect(True, True)
    Call CL_InitTaille(0, -15)
    ChoixListe.Show 1
    If CL_liste.retour = 1 Then
        Exit Function
    End If
    For i = 0 To UBound(CL_liste.lignes)
        If CL_liste.lignes(i).selected Then
            Select Case CL_liste.lignes(i).num
            Case 1
                sForme = "Ligne_Lib_Val"
            Case 2
                sForme = "Ligne_Lib"
            Case 3
                sForme = "Ligne_Val"
            Case 4
                sForme = "Colonne_Lib_Val"
            Case 5
                sForme = "Colonne_Lib"
            Case 6
                sForme = "Colonne_Val"
            Case 7
                sForme = "Total_Val"
            Case 8
                sForme = "Pourcent_Val"
            End Select
            Exit For
        End If
    Next i
    ChoisirForme = sForme
    
    If sForme = "Total_Val" Or sForme = "Total_Val" Then
        sTypeValeurs = ""
        GoTo Fin
    End If
    
    ' choisir si on veut les valeurs signiicatives ou non
    sTypeValeurs = "Toutes"
    Call CL_Init
    Call CL_InitTitreHelp(stitre, "")
            
    MenFVal = STR_GetChamp(v_CmdMenFormeChp, "#", 1)
    If MenFVal = "Significatives" Then selected = True Else selected = False
    Call CL_AddLigne("Valeurs significatives seulement", 0, "", selected)
    If MenFVal = "Toutes" Then selected = True Else selected = False
    Call CL_AddLigne("Toutes les valeurs", 1, "", selected)
    If MenFVal = "NR" Then selected = True Else selected = False
    Call CL_AddLigne("Valeurs non renseignées", 2, "", selected)
    If MenFVal = "POURCENT" Then selected = True Else selected = False
    Call CL_AddLigne("Pourcentage", 3, "", selected)
    
    Call CL_AddBouton("", p_chemin_appli + "\btnok.gif", vbKeyO, vbKeyF1, 0)
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
    Call CL_InitMultiSelect(True, True)
    Call CL_InitTaille(0, -15)
    ChoixListe.Show 1
    If CL_liste.retour = 1 Then
        ChoisirForme = sForme & "#" & sTypeValeurs
        Exit Function
    End If
    For i = 0 To UBound(CL_liste.lignes)
        If CL_liste.lignes(i).selected Then
            Select Case CL_liste.lignes(i).num
            Case 0
                sTypeValeurs = "Significatives" 'ChoisirForme = "Ligne_Lib_Val"
            Case 1
                sTypeValeurs = "Toutes" 'ChoisirForme = "Ligne_Lib"
            Case 2
                sTypeValeurs = "NR" 'ChoisirForme = "Ligne_Lib_Val"
            Case 3
                sTypeValeurs = "POURCENT" 'ChoisirForme = "Ligne_Lib_Val"
            End Select
            Exit For
        End If
    Next i
Fin:
    ChoisirForme = sForme & "#" & sTypeValeurs
End Function

Private Sub ajouter_modifier_regle(ByVal v_fajout As Boolean)

    Dim oper As String, valeur As String, cond As String, libetape As String
    Dim sql As String
    Dim cr As Integer, numetape As Integer, lig As Integer
    Dim numchp As Long
    Dim Frm As Form
    
    If v_fajout Then
        numchp = 0
        oper = ""
        valeur = ""
        numetape = -1
    Else
        If grdCond(lig).row < 0 Then
            Exit Sub
        End If
        MsgBox "kesako ?"
        numchp = grdCond(lig).TextMatrix(grdCond(lig).row, 1)
        oper = grdCond(lig).TextMatrix(grdCond(lig).row, 1)
        valeur = grdCond(lig).TextMatrix(grdCond(lig).row, 1)
        numetape = grdCond(lig).TextMatrix(grdCond(lig).row, 1)
    End If
    
    'Set Frm = ChoixFormEtapeSuiv
    'cr = ChoixFormEtapeSuiv.AppelFrm(g_numfor, g_numetape, numchp, oper, valeur, numetape)
    'Set Frm = Nothing
    If cr = 0 Then
        Exit Sub
    End If
    
    If v_fajout Then
        grdCond(lig).AddItem ""
        lig = grdCond(lig).Rows - 1
    Else
        lig = grdCond(lig).row
    End If
    If numchp = 0 Or oper = "" Then
        numchp = 0
        oper = ""
        valeur = ""
        cond = ""
    Else
        cond = build_cond(numchp, oper, valeur)
    End If
    If numetape = 0 Then
        libetape = "FIN DU PROCESSUS"
    Else
        sql = "select FORE_Libcourt from FormEtape where FORE_FORNum=" & 1 _
            & " and FORE_Numetape=" & numetape
        If Odbc_RecupVal(sql, libetape) = P_ERREUR Then
            Exit Sub
        End If
        libetape = "E" & numetape & " - " & libetape
    End If
    'grdCond(lig).TextMatrix(lig, GRDE_CHAMP) = numchp
    'grdCond(lig).TextMatrix(lig, GRDE_OPER) = oper
    'grdCond(lig).TextMatrix(lig, GRDE_VALEUR) = valeur
    'grdCond(lig).TextMatrix(lig, GRDE_ETAPE) = numetape
    'grdCond(lig).TextMatrix(lig, GRDE_COND) = Cond
    'grdCond(lig).TextMatrix(lig, GRDE_LIBETAPE) = libetape
    
    'cmd(CMD_OK).Enabled = True
    
End Sub

Private Function build_cond(ByVal v_numchp As Long, _
                            ByVal v_oper As String, _
                            ByVal v_valeur As String) As String
    
    Dim sCond As String, sql As String, stype As String, s As String
    
    sCond = ""
    
    sql = "select FOREC_Label, FOREC_Type from FormEtapeChp" _
        & " where FOREC_Num=" & v_numchp
    If Odbc_RecupVal(sql, sCond, stype) = P_ERREUR Then
        Exit Function
    End If

    If v_oper = "=" Then
        sCond = sCond + " = "
    Else
        sCond = sCond + " <> "
    End If
    
    If stype = "RADIO" Or stype = "SELECT" Or stype = "CHECK" Then
        If v_valeur = "" Then
            s = "<Non renseigné>"
        Else
            sql = "select VC_Lib from ValChp" _
                & " where VC_Num=" & v_valeur
            If Odbc_RecupVal(sql, s) = P_ERREUR Then
                Exit Function
            End If
        End If
        sCond = sCond + s
    Else
        sCond = sCond + v_valeur
    End If

    build_cond = sCond
    
End Function

Private Sub initialiser()
    Dim ret As Boolean
    Dim bool As Boolean
    Dim NumFiltre As Integer, Indfiltre As Integer
    Dim i As Integer, j As Integer
    Dim iPremFiltre As Integer
    Dim leIndex As Integer
    Dim chpnum As Integer
    
    If p_mode_acces = "SIMUL" Then
        cmd(CMD_NOUVEAU_MODELE).Visible = False
        Me.Frame1.left = 0
        Me.Frame1.Top = 0
        Me.MnuSelection.Visible = False
        Me.LblHelp.Top = 0
        Me.LblHelp.left = 0
        Me.PgBar.Top = 300
        Me.PgBar.left = 0
        Me.LblSimulFeuille.left = 0
        Me.PgBarFeuille.Visible = False
        Me.PgBarChp.Visible = False
        Call FRM_ResizeForm(Me, 10000, 1000)
    End If
    
    If p_Mode_FctTrace Then
        Me.cmdTrace.Visible = True
    Else
        Me.cmdTrace.Visible = False
    End If
            
    If p_TraitPublier = "G" Then
        MenuG.lblWait.Visible = True
        MenuG.lblWait.Caption = "Initialisation des Feuilles"
    End If
    
    If UCase(SYS_GetIni("TRACES", "MODE_EXPERT", p_nomini)) = "OUI" Then
        Me.ChkExpert.Value = 1
    Else
        Me.ChkExpert.Value = 0
    End If
    Me.ChkExpert.Value = 1
        
    If Excel_Init() = P_ERREUR Then
        Call MsgBox("Impossible de démarrer Excel", vbOKOnly + vbCritical, "")
        End
    End If
    
    cmd(CMD_CPY_CONDCHAMP).BackColor = P_GRIS_CLAIR
    MenuG.MnuVersionExcelShapes.Caption = "supérieure à 2003"
    MenuG.MnuVersionExcelCharts.Caption = "jusqu'à 2003"

    Exc_obj_Version = Exc_obj.Version
    If val(Exc_obj.Version) < 12 Then
        p_VersionExcel = "2003"
        MenuG.MnuVersionExcelCharts.Caption = ">> " & MenuG.MnuVersionExcelCharts.Caption & " (" & Exc_obj.Version & ")"
    Else
        p_VersionExcel = "2007"
        MenuG.MnuVersionExcelShapes.Caption = ">> " & MenuG.MnuVersionExcelShapes.Caption & " (" & Exc_obj.Version & ")"
    End If

    FctTrace ("Début initialiser")
    cmd(CMD_ENREGISTRER).tag = 0
    cmd(CMD_ENREGISTRER).Visible = False
    
    Me.Attente_PgBar.max = 1000
    If val(p_Imax) = 0 Then
        p_Imax = 25
    End If
    
    g_mode_saisie = False
    
    grdCell(0).Visible = False

    grdForm.Visible = True
    grdForm.Cols = 9
    grdForm.ColWidth(GrdForm_FF_Num) = 30
    grdForm.ColWidth(GrdForm_FF_Image) = 1000
    grdForm.ColWidth(GrdForm_FF_Lib) = (grdForm.Width / 2) - 1000
    grdForm.ColAlignment(GrdForm_FF_Lib) = flexAlignLeftCenter
    grdForm.ColWidth(GrdForm_FF_Titre) = (grdForm.Width / 2) + 1000
    grdForm.ColAlignment(GrdForm_FF_Titre) = flexAlignLeftCenter
    grdForm.ColWidth(GrdForm_FF_NumIndice) = 1000
    grdForm.Rows = 0
    
    Me.Attente_Frame.Visible = True
    If Me.Attente_PgBar.Value >= Me.Attente_PgBar.max Then Me.Attente_PgBar.Value = 1
    Me.Attente_PgBar.Value = Me.Attente_PgBar.Value + 1
    
    If grdForm.Rows = 0 Then
        cmd(CMD_SUPPR_FORM).Visible = False
        cmd(CMD_PARAM_FILTRE).Visible = False
        cmd(CMD_ACCES_KALIDOC).Visible = False
    Else
        cmd(CMD_ACCES_KALIDOC).Visible = True
        cmd(CMD_PARAM_FILTRE).Visible = True
        grdForm.row = 0
        grdForm.RowSel = 0
        grdForm.col = grdForm.Cols - 1
        grdForm.ColSel = grdForm.col
    End If
    cmd(CMD_NOUVEAU_FILTRE).Visible = True
        
    FctTrace (".. 1 Initialise le tableau des champs et condition")
    ' Initialise le tableau des champs et condition
    grdFeuille.Visible = True
    grdFeuille.Cols = 6
    grdFeuille.ColWidth(GrdFeuil_FenNum) = 0
    grdFeuille.ColWidth(GrdFeuil_FenNom) = 3350
    grdFeuille.ColWidth(GrdFeuil_LoadFait) = 200
    grdFeuille.ColWidth(GrdFeuil_Chargement) = 200
    grdFeuille.Rows = 0
    
    If Me.Attente_PgBar.Value >= Me.Attente_PgBar.max Then Me.Attente_PgBar.Value = 1
    Me.Attente_PgBar.Value = Me.Attente_PgBar.Value + 1
    DoEvents
    ret = InitTabChp()
    
    p_ANC_numindice_encours = 0
    p_ANC_numfiltre_encours = 0
    
    ' pouvoir le convertir en XLSX
    If p_VersionExcel = "2007" And p_PointExtensionXls = ".xls" Then
        cmd(CMD_VERS_XLSX).Visible = True
    End If
    
    Erase tb_Selection
    
    If ret = P_ERREUR Then
        End
    End If
    
    If Me.Attente_PgBar.Value >= Me.Attente_PgBar.max Then Me.Attente_PgBar.Value = 1
    Me.Attente_PgBar.Value = Me.Attente_PgBar.Value + 1
    DoEvents
    FctTrace (".. 2 Initialise le grid des formulaires")
    ' Initialise le grid des formulaires
    iPremFiltre = -1
    On Error GoTo Err_Suite2
    i = UBound(tbl_fichExcel())
    GoTo Suite2
Err_Suite2:
    Resume Continue2
Suite2:
    On Error GoTo 0
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdType = "CONDF" Then
            NumFiltre = tbl_fichExcel(i).CmdFormNum
            Indfiltre = tbl_fichExcel(i).CmdFormIndice
            If ajouter_form_grd(NumFiltre, Indfiltre, True, False, tbl_fichExcel(i).CmdTitreDoc) = P_OUI Then
                If iPremFiltre = -1 Then
                    iPremFiltre = i
                End If
                ' charger le grid des regles locales pour ce formulaire
                Call ChargerGridRegle(NumFiltre, Indfiltre)
                For j = 0 To UBound(tbl_fichExcel())
                    If tbl_fichExcel(j).CmdType = "CONDL" Then
                        If tbl_fichExcel(j).CmdFormNum = NumFiltre And tbl_fichExcel(j).CmdFormIndice = Indfiltre Then
                            Call ajouter_cond("Init", j)
                        End If
                    End If
                Next j
                ' mettre les bonnes couleurs
                'leIndex = (numfiltre * 100) + Indfiltre
                leIndex = FctAttribIndex(NumFiltre, Indfiltre)
                Call FctMetCouleur("COND", grdCond(leIndex))
                ' à l'initialisation, on les met en invisible
                cmd(CMD_PRM_COND).Visible = False
                cmd(CMD_SUPPR_COND).Visible = False
                'leIndex = (numfiltre * 100) + Indfiltre
                leIndex = FctAttribIndex(NumFiltre, Indfiltre)
                grdCond(leIndex).Visible = False
            End If
        End If
    Next i

    If Me.Attente_PgBar.Value >= Me.Attente_PgBar.max Then Me.Attente_PgBar.Value = 1
    Me.Attente_PgBar.Value = Me.Attente_PgBar.Value + 1
    DoEvents
    
Continue2:
    ' se mettre sur le premier filtre
    FctTrace (".. 3 se mettre sur le premier filtre")
    If iPremFiltre >= 0 Then
        'grdForm.row = iPremFiltre
        'grdForm_Click
    End If
    g_mode_saisie = True

    FctTrace ("Fin initialiser")
    
    If p_ModeAssistant Then
        'MsgBox "ici"
        grdFeuille.RowSel = 0                                           ' RV14042011
        Call grdFeuille_dblClick
        cmd(CMD_MODE_CHAMP).Visible = False
        cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
        cmd(CMD_MODE_SIMUL).Visible = False
        cmd(CMD_MODE_LIEN).Visible = False
        cmd(CMD_MODE_FORMULE).Visible = False
        cmd(CMD_MODE_POLICE).Visible = False
        'Me.MnuChpAjout.tag = 0
        g_Ajouter_Champ_Index = 1
        g_Ajouter_Champ_numfiltre_encours = p_numfiltre_encours
        ' on se met en haut à gauche
        g_Ajouter_Champ_grdCell_RowSel = 1  ' grdCell(Me.MnuChpAjout.tag).RowSel
        g_Ajouter_Champ_grdCell_ColSel = 1  ' grdCell(Me.MnuChpAjout.tag).ColSel
        g_Ajouter_Champ_bdeja = True
        g_Ajouter_Champ_bdeja = False
        bool = p_dansExcel
        p_dansExcel = True
        Call ajouter_Plusieurs_champ(g_Ajouter_Champ_Index, g_Ajouter_Champ_numfiltre_encours, g_Ajouter_Champ_grdCell_RowSel, g_Ajouter_Champ_grdCell_ColSel, (Not g_Ajouter_Champ_bdeja), False)
        p_dansExcel = bool
        If p_ListeRafraichirFenetre <> "" Then
            If p_ListeRafraichirTropX > 0 Then
                MsgBox "Votre feuille comporte " & p_ListeRafraichirTropX & " colonnes de trop et va être agrandie."
            Else
                MsgBox "Votre feuille comporte " & p_ListeRafraichirTropY & " lignes de trop et va être agrandie."
            End If
            p_ListeRafraichirFenetre = ""
            p_ListeRafraichirTropX = 0
            p_ListeRafraichirTropY = 0
            Call Rafraichir
        End If
        If MsgBox("Voulez vous que KaliRP génère tout de suite les graphiques pour ces champs", vbYesNo + vbDefaultButton1 + vbQuestion, "Assistant") = vbYes Then
            Call FctGraphGerenerAuto
        End If
    End If
    
    Me.SetFocus
    If p_mode_acces = "SIMUL" Then
        cmd_Click (CMD_TOUT_CHARGER)
        cmd_Click (CMD_SIMULATION)
        'End
    End If
    cmd(CMD_OUVRIR_PARAM).Visible = True
End Sub

Private Function InitTabChp()
    Dim fd As Integer
    Dim fd2 As Integer
    Dim Ligne As String
    Dim ligne2 As String
    Dim ok As Boolean
    Dim i As Integer
    Dim j As Integer
    Dim s As String
    Dim II As Integer
    Dim nbform As Integer
    
    Dim iDem As Integer, RDO_ffNum As Integer
    Dim bDéjà As Boolean, iD As Integer
    Dim s1 As String, s2 As String, s3 As String, s4 As String, sn As String
    Dim s5 As String, s6 As String
    Dim s7 As String
    Dim s8 As String
    Dim stype As String
    Dim nb As Integer
    Dim s_tmp As String
    Dim x As Integer
    Dim sX As String, sY As String
    Dim FenNum As Integer
    Dim sql As String
    Dim chpnum As String
    Dim fctvalid As String
    Dim ConditionChamp As String, SepConditionChamp As String
    Dim BajoutCondChamp As Boolean
    Dim grdCondChpNum As Integer, grdCondFormNum As Integer, grdCondChpIndice As Integer, grdCondFormIndice As Integer
    
    ' Ouvrir le fichier texte
    ' lire les lignes et charger le tableau
    
    FctTrace ("Début IniTabChp")
    
    If g_CheminModele = "" Then
        FctTrace ("g_CheminModele est vide")
        MsgBox "CheminModele est vide."
        InitTabChp = P_ERREUR
        Exit Function
    End If
    
    NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, ".")
    If InStr(NomFichierParam, ".") = 0 Then
        NomFichierParam = NomFichierParam & "."
    End If
    ' ouvrir le fichier Excel
    FctTrace (".. 1 ouvrir le fichier Excel")
    Call Public_VerifOuvrir(NomFichierParam & p_ExtensionXls, False, True, p_tbl_FichExcelOuverts())
    If Me.Attente_PgBar.Value >= Me.Attente_PgBar.max Then Me.Attente_PgBar.Value = 1
    Me.Attente_PgBar.Value = Me.Attente_PgBar.Value + 1
    FctTrace (".. 2 avant appel RemplirTabFenetre")
    RemplirTabFenetre
    For i = 1 To Exc_obj.Workbooks.Count
        If Exc_obj.Workbooks(i).Name = "RP_" & p_nummodele & p_PointExtensionXls Then
            Exc_obj.DisplayAlerts = False
            Exc_obj.Workbooks(i).Close
        End If
    Next i
    FctTrace (".. 3 après appel RemplirTabFenetre")
    ' s'il n'existe pas, on le crée
    
    If Not FICH_FichierExiste(NomFichierParam & "txt") Then
        If FICH_OuvrirFichier(NomFichierParam & "txt", FICH_ECRITURE, fd) = P_ERREUR Then
        End If
        Close #fd
    End If
    
    If FICH_OuvrirFichier(NomFichierParam & "txt", FICH_LECTURE, fd) = P_ERREUR Then
        InitTabChp = P_ERREUR
        Exit Function
    End If
    ' #Type | Fornum |ChpNum |Num     | X | Y |Mise en        | ? | indice du |indice du |
    '       |        |       |Fenetre |   |   |forme          | ? | formulaire|  champ   |
    '-------------------------------------------------------------------------------------
    '# 0    |    1   |   2   |   3    | 4 | 5 |   6           | 7 |    8      |
    'CONDF  |102     |       |   1    |   | 0 |               |   |    1      |
    'CHP    |102     |1562   |   1    |C  |3  |Colonne_Lib_Val|   |    1      |
    'CONDF  |102     |       |   1    |   | 0 |               |   |    2      |
    'CHP    |102     |1525   |   1    |A  | 1 |Colonne_Lib_Val|   |    2      |    1
    'FEN    |        |       |   1    |MAX|MAX|               |   |    2      |
    'CONDCHP|102     |12     |   1    |   |   |               |   |    2      |    1
    
    i = 0
    nbform = 0
    FctTrace (".. 4 Début Chargement")
    While Not EOF(fd)
        If Me.Attente_PgBar.Value >= Me.Attente_PgBar.max Then Me.Attente_PgBar.Value = 1
        Me.Attente_PgBar.Value = Me.Attente_PgBar.Value + 1
        DoEvents
        
        Line Input #fd, Ligne
        Debug.Print i & " " & Ligne
        FctTrace (".. 4 A Ligne=" & Ligne)

        If Ligne = "" Then
            GoTo Ligne_Suivante
        End If
        If left(Ligne, 1) <> "#" Then
            stype = Trim(STR_GetChamp(Ligne, "|", 0))
            If stype = "CONDF" Then
                nbform = nbform + 1
            End If
            If stype = "CHP" Or stype = "RES" Then        ' voir si supprimé
                FctTrace (".. 4 B Type=" & stype)
                s = Trim(STR_GetChamp(Ligne, "|", 2))
                If val(s) < 0 And val(s) > -10 Then
                    GoTo Ligne_Suivante
                End If
                ' voir si pas doublon (cas Quéré)
                sX = Trim(STR_GetChamp(Ligne, "|", 4))
                sY = Trim(STR_GetChamp(Ligne, "|", 5))
                FenNum = Trim(STR_GetChamp(Ligne, "|", 3))
                For II = 0 To UBound(tbl_fichExcel())
                    If tbl_fichExcel(II).CmdType = "CHP" Then
                        If tbl_fichExcel(II).CmdFenNum = FenNum And tbl_fichExcel(II).CmdX = sX And tbl_fichExcel(II).CmdY = sY Then
                            MsgBox "Champ en doublon en position " & sX & sY & " Feuille " & Trim(STR_GetChamp(Ligne, "|", 3)) & Chr(13) & Chr(10) & "ce champ ne sera pas chargé"
                            GoTo Ligne_Suivante
                        End If
                    End If
                Next II
            End If
            ReDim Preserve tbl_fichExcel(i) As SFICH_PARAM_EXCEL
            p_bool_tbl_fichExcel = True
            If stype = "FEN" Then
                FctTrace (".. 4 B Type=" & stype)
                tbl_fichExcel(i).CmdType = stype
                s = Trim(STR_GetChamp(Ligne, "|", 3))
                tbl_fichExcel(i).CmdFenNum = s
                s = Trim(STR_GetChamp(Ligne, "|", 4))
                tbl_fichExcel(i).CmdX = s
                s = Trim(STR_GetChamp(Ligne, "|", 5))
                tbl_fichExcel(i).CmdY = s
                
                For j = 1 To UBound(tbl_fenExcel)
                    If tbl_fenExcel(j).FenNom = Trim(STR_GetChamp(Ligne, "|", 2)) Then
                        tbl_fenExcel(j).FenColMax = Trim(STR_GetChamp(Ligne, "|", 4))
                        tbl_fenExcel(j).FenRowMax = Trim(STR_GetChamp(Ligne, "|", 5))
                        tbl_fenExcel(j).FenItbl_fichExcel = i
                        Exit For
                    End If
                Next j
                
            End If
            If stype = "CONDF" Or stype = "CONDL" Or stype = "CHP" Or stype = "RES" Then
                FctTrace (".. 4 B Type=" & stype)
                tbl_fichExcel(i).CmdType = stype
                s = Trim(STR_GetChamp(Ligne, "|", 1))
                tbl_fichExcel(i).CmdFormNum = s
                s = Trim(STR_GetChamp(Ligne, "|", 2))
                tbl_fichExcel(i).CmdChpNum = val(s)
                s = Trim(STR_GetChamp(Ligne, "|", 3))
                tbl_fichExcel(i).CmdFenNum = s
                s = Trim(STR_GetChamp(Ligne, "|", 4))
                tbl_fichExcel(i).CmdX = s
                s = Trim(STR_GetChamp(Ligne, "|", 5))
                tbl_fichExcel(i).CmdY = val(s)
                
                s = Trim(STR_GetChamp(Ligne, "|", 6))
                ' CmdMenFormeChp peut contenir des § => les transformer en |
                s = Replace(s, "§", "|")
                If Mid(s, 1, 6) = "Liste=" Then
                    tbl_fichExcel(i).cmdTypeChp = s
                End If
                tbl_fichExcel(i).CmdMenFormeChp = s
                
                s = Trim(STR_GetChamp(Ligne, "|", 7))
                tbl_fichExcel(i).CmdCondition = s

                s = Trim(STR_GetChamp(Ligne, "|", 8))
                tbl_fichExcel(i).CmdFormIndice = s
                If stype = "CHP" Or stype = "RES" Then
                    ConditionChamp = Trim(STR_GetChamp(Ligne, "|", 7))
                    tbl_fichExcel(i).CmdCondition = ConditionChamp
                    s = Trim(STR_GetChamp(Ligne, "|", 10))
                    tbl_fichExcel(i).CmdConditionSQL = s
                    s = Trim(STR_GetChamp(Ligne, "|", 11))
                    If s <> "" Then
                        If Mid(s, 1, 4) = "SQL=" Then
                            tbl_fichExcel(i).CmdChpSQL = s
                        Else
                            MsgBox "Requête SQL incorrecte : " & s
                        End If
                    End If
                    s = Trim(STR_GetChamp(Ligne, "|", 12))
                    If stype = "RES" Then
                        tbl_fichExcel(i).CmdChpRelierà = s
                    Else
                        If InStr(s, "Relié à") > 0 Then
                            s = Replace(s, "Relié à", "")
                            tbl_fichExcel(i).CmdChpRelierà = s
                            s = Trim(STR_GetChamp(Ligne, "|", 13))
                            tbl_fichExcel(i).CmdNiveauRelier = s
                        End If
                    End If
                End If
                If stype = "CONDL" Then
                    s = Trim(STR_GetChamp(Ligne, "|", 7))
                    tbl_fichExcel(i).CmdCondition = s
                    s = Trim(STR_GetChamp(Ligne, "|", 10))
                    tbl_fichExcel(i).CmdConditionSQL = s
                End If
                If stype = "CONDF" Then
                    s = Trim(STR_GetChamp(Ligne, "|", 9))
                    tbl_fichExcel(i).CmdTitreDoc = s
                End If
            End If
            If stype = "DOC" Then
                FctTrace (".. 4 B Type=" & stype)
                tbl_fichExcel(i).CmdType = stype
                s = Trim(STR_GetChamp(Ligne, "|", 1))
                tbl_fichExcel(i).CmdTitreDoc = s
                s = Trim(STR_GetChamp(Ligne, "|", 2))
                tbl_fichExcel(i).CmdLstFen = s
                s = Trim(STR_GetChamp(Ligne, "|", 3))
                tbl_fichExcel(i).CmdLstDest = s
                s = Trim(STR_GetChamp(Ligne, "|", 4))
                tbl_fichExcel(i).CmdMenFormeDoc = s
            End If
            If stype = "CHPDEM" Then
                FctTrace (".. 4 B Type=" & stype)
                ' on ajoute seulement si pas déjà
                tbl_fichExcel(i).CmdType = stype
                s1 = Trim(STR_GetChamp(Ligne, "|", 1))
                ' chercher le fornum
                If Odbc_RecupVal("select ff_fornum from filtreform where ff_num=" & s1, _
                    RDO_ffNum) = P_ERREUR Then
                    sn = 0
                    GoTo Ligne_Suivante
                Else
                    sn = RDO_ffNum
                End If
    
                s2 = Trim(STR_GetChamp(Ligne, "|", 2))
                s3 = Trim(STR_GetChamp(Ligne, "|", 3))
                If InStr(s3, ".") > 0 Then
                    s3 = STR_GetChamp(s3, ".", 1)
                End If
                s4 = Trim(STR_GetChamp(Ligne, "|", 4))
                s5 = Trim(STR_GetChamp(Ligne, "|", 5))
                s6 = Trim(STR_GetChamp(Ligne, "|", 6))
                s8 = Trim(STR_GetChamp(Ligne, "|", 8))
                s8 = Replace(s8, "$", "¤")
                s = STR_GetChamp(s8, "¤", 0)
                Dim n As Integer
                If s <> "" Then
                If STR_GetNbchamp(s, ":") < 3 Then  ' ajouter le numéro de champ
                    s_tmp = STR_GetChamp(s8, "¤", 0)
                    s = "CHP:" & s3 & ":" & STR_GetChamp(s_tmp, ":", 1)
                    n = InStr(s8, "¤")
                    If n > 0 Then
                        s = s & Mid(s8, n)
                    End If
                    s8 = s
                End If
                End If
                bDéjà = False
                On Error GoTo err_TabDem
                iD = UBound(tbl_Demande)
                For iD = 0 To UBound(tbl_Demande)
                    If tbl_Demande(iD).DemandFFNum = s1 Then
                        If tbl_Demande(iD).DemandFormInd = s2 Then
                            If tbl_Demande(iD).DemandChpNum = val(s3) Then
                                If tbl_Demande(iD).DemandChpStrPlus = s4 Then
                                    bDéjà = True
                                    Exit For
                                End If
                            End If
                        End If
                    End If
                Next iD
                ' verifier que bon ffNum et ffIndice
                If Not bDéjà Then
                    On Error GoTo err_TabDem
                    iDem = UBound(tbl_Demande) + 1
                    GoTo SuiteDem
err_TabDem:
                    iDem = 0
                    Resume SuiteDem
SuiteDem:
                    On Error GoTo 0
                    tbl_fichExcel(i).CmdType = stype
                    ReDim Preserve tbl_Demande(iDem)
                    p_bool_tbl_Demande = True
                    tbl_Demande(iDem).DemandFFNum = s1
                    tbl_Demande(iDem).DemandFormInd = s2
                    tbl_Demande(iDem).DemandChpNum = s3
                    Call Odbc_RecupVal("Select forec_valeurs_possibles from formetapechp where forec_num=" & s3, s7)
                    tbl_Demande(iDem).DemandValeursPossibles = val(s7)
                    tbl_Demande(iDem).DemandForNum = RDO_ffNum
                    tbl_Demande(iDem).DemandChpStrPlus = s4
                    tbl_Demande(iDem).DemandChpStr = FctNomChp(val(s3))
                    tbl_Demande(iDem).DemandFouA = s6
                    If s5 = "0" Then
                        tbl_Demande(iDem).DemandGlobale = "LO"
                    ElseIf s5 = "1" Then
                        tbl_Demande(iDem).DemandGlobale = "FI"
                    Else
                        tbl_Demande(iDem).DemandGlobale = s5
                    End If
                    If Trim(STR_GetChamp(Ligne, "|", 7)) <> "" Then
                        tbl_Demande(iDem).DemandAussiStr = Trim(STR_GetChamp(Ligne, "|", 7))
                        tbl_Demande(iDem).DemandAussiBool = True
                    End If
                    ' ajouter un ¤ si manque
                    nb = STR_GetNbchamp(s8, "¤")
                    If nb = 3 Then
                        s8 = s8 & "¤"
                    End If
                    s = STR_GetChamp(s8, "¤", 0)
                    s = STR_GetChamp(s, ":", 1)
                    If IsNumeric(s) Then
                        sql = "select forec_fctvalid from formetapechp where forec_num=" & s
                        Call Odbc_RecupVal(sql, fctvalid)
                        tbl_Demande(iDem).DemandFctValid = fctvalid
                    End If
                    tbl_Demande(iDem).DemandPasFrancais = s8
                End If
            End If
            i = i + 1
            FctTrace (".. 4 B i=" & i)
        End If
Ligne_Suivante:
    Wend
    FctTrace (".. 5 Fin Chargement")
    
    ' on doit récupérer la condition du filtre
    FctTrace (".. 6.1 on doit récupérer la condition du filtre")
    On Error GoTo Tab_Vide
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdType = "CONDF" Then
            If Me.Attente_PgBar.Value >= Me.Attente_PgBar.max Then Me.Attente_PgBar.Value = 1
            Me.Attente_PgBar.Value = Me.Attente_PgBar.Value + 1
            DoEvents
            RecupereConditionF 0, tbl_fichExcel(i).CmdFormNum, tbl_fichExcel(i).CmdFormIndice
        End If
    Next i
    FctTrace (".. 6.2 condition récupérée")

    For i = 0 To UBound(tbl_fichExcel())
        s = i & " Fennum=" & tbl_fichExcel(i).CmdFenNum & " " & tbl_fichExcel(i).CmdType & " Chp=" & tbl_fichExcel(i).CmdChpNum & " " & tbl_fichExcel(i).CmdX & tbl_fichExcel(i).CmdY & " Form=" & tbl_fichExcel(i).CmdFormNum & " Indice=" & tbl_fichExcel(i).CmdFormIndice
        If tbl_fichExcel(i).CmdChpNum < 0 Then      ' il est supprimé
        Else
            ok = False
            For j = 0 To UBound(tbl_fenExcel())
                If tbl_fichExcel(i).CmdFenNum = tbl_fenExcel(j).FenNum Then
                    ok = True
                    Exit For
                End If
            Next j
            If Not ok Then
                s = s & " =>  Fennum=" & tbl_fichExcel(i).CmdFenNum & " n'existe pas"
                MsgBox "La feuille " & tbl_fichExcel(i).CmdFenNum & " n'existe pas"
                Call Ajout_Fenetre(tbl_fichExcel(i).CmdFenNum, "Feuille " & tbl_fichExcel(i).CmdFenNum)
                FctTrace (s)
            End If
        End If
    Next i
Tab_Vide:
    On Error GoTo 0
    
    If nbform = 0 Then
        grdForm.Visible = False
        If p_ModeAssistant Then
            Me.FrmHTTPD.Caption = "Choix du Formulaire"
            Me.PgbarHTTPDTaille.Value = 4
        End If
        MsgBox "Indiquez sur quel(s) formulaire(s) portera ce modèle de rapport."
        Call ajouter_filtre
    End If
    
    Close #fd
    FctTrace ("Fin InitTabChp")

End Function

Private Function CalculIndiceChp(v_CmdChpNum, v_indice)
    
    Dim i As Integer, ind As Integer
    
    CalculIndiceChp = 1
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdType = "CHP" And v_indice <> i Then
            If tbl_fichExcel(i).CmdChpNum = v_CmdChpNum Then ' même champ
                CalculIndiceChp = CalculIndiceChp + 1
            End If
        End If
    Next i
End Function


Private Function RecupereConditionF(ByVal v_numfor As Integer, ByVal v_fornum As Integer, ByVal v_ForIndice As Integer)
    Dim sql As String, strcond As String, UneCond As String
    Dim indTbCond As Integer
    Dim rs As rdoResultset
    Dim nbcond As Integer, i As Integer
    Dim i_form As Integer, i_chp As Integer
    Dim LaCondFrancais As String, lenomchp As String
    Dim laFctValid As String
    Dim LeChp As String, LaCond As String, LeOp As String, LaCondF As String
    Dim indRDO As Integer
    Dim RDOfornumS As String
    Dim RDOlaRequete As String, RDOleOP As String
    Dim RDOdemander As String
    Dim RDOetat As String, RDOfornum As Integer, RDOnum As Integer
    Dim RDOstrcond As String
    Dim LaValChp As String
    Dim nbdem As Integer, iDem As Integer, iD As Integer
    Dim schp As String, s As String
    Dim idx As Integer, s1 As String, s2 As String
    Dim s7 As String
    Dim str_Cnd_RP As String
    Dim ff_titre As String
    Dim bDéjà As Boolean
    Dim err_TabDem As Boolean
    Dim LaCondRetSQL As String
    Dim LaCondRetF As String
    Dim BoolLeDetail As Boolean
    
    '61 | 53.1562|(X like {%V171;%{)|=|171;º
    '    102 | 53.1498|(to_date(X, {dd/mm/YYYY{) < {2009-01-01{)|<|01/01/2009º53.1525
    '|(X like {%V146;%{ or X like {%V147;%{)|=|146;147;º53.1517|(upper(translate(X,{Ó
    'ÔÚÞÛ¯¶¨¹þ{,{AAEEEIOUUC{)) like {*E*{)|contient|eº
    'MsgBox "ici " & "select ff_cond,ff_etat,ff_fornum,ff_num, ff_demander from filtreform where ff_num=" & v_fornum
    If v_fornum = 0 Then ' Aucun Filtre
        RDOetat = 0
        RDOfornum = 0
        RDOfornumS = 0
        v_ForIndice = 0
        RDOnum = 0
    Else
        If Odbc_RecupVal("select ff_cond,ff_etat,ff_fornum,ff_fornums,ff_num, ff_demander, ff_titre from filtreform where ff_num=" & v_fornum, _
                         RDOstrcond, RDOetat, RDOfornum, RDOfornumS, RDOnum, RDOdemander, ff_titre) = P_ERREUR Then
            Exit Function
        End If
    End If
    'MsgBox RDOstrcond
    FctTrace (".. RecupereConditionF condition à récupérér : select ff_cond,ff_etat,ff_fornum,ff_num, ff_demander from filtreform where ff_num=" & v_fornum)
    On Error GoTo Err_Tab
    indTbCond = UBound(tbl_cond()) + 1
    GoTo Suite_Tab
Err_Tab:
    indTbCond = 0
    Resume Suite_Tab
Suite_Tab:
    ' tableau des recordset
    On Error GoTo Err_Tab_RDO
    indRDO = UBound(tbl_rdoF()) + 1
    GoTo Suite_Tab_RDO
Err_Tab_RDO:
    indRDO = 0
    Resume Suite_Tab_RDO
Suite_Tab_RDO:
    On Error GoTo 0
    ReDim Preserve tbl_rdoF(indRDO)
    p_bool_tbl_rdoF = True
    tbl_rdoF(indRDO).RDOF_etat = RDOetat
    tbl_rdoF(indRDO).RDOF_FormNum = RDOfornum
    tbl_rdoF(indRDO).RDOF_FormNumS = RDOfornumS
    tbl_rdoF(indRDO).RDOF_FormIndice = v_ForIndice
    tbl_rdoF(indRDO).RDOF_num = RDOnum
    
    If RDOdemander <> "" Then
        ' ajouter les condition à demander
        nbdem = STR_GetNbchamp(RDOdemander, ";")
        For iD = 0 To nbdem - 1
            schp = Trim(STR_GetChamp(RDOdemander, ";", iD))
            On Error GoTo err_TabDem
            iDem = UBound(tbl_Demande) + 1
            err_TabDem = False
            GoTo SuiteDem
err_TabDem:
            iDem = 0
            err_TabDem = True
            Resume SuiteDem
SuiteDem:
            On Error GoTo 0
            
            s1 = Trim(STR_GetChamp(schp, ".", 0))
            s2 = Trim(STR_GetChamp(schp, ".", 1))
            bDéjà = False
            If Not err_TabDem Then
                For idx = 0 To UBound(tbl_Demande)
                    If tbl_Demande(idx).DemandFouA = "F" Then
                        If tbl_Demande(idx).DemandForNum = s1 Then
                            If tbl_Demande(idx).DemandFormInd = v_ForIndice Then
                                If tbl_Demande(idx).DemandChpNum = s2 Then
                                    bDéjà = True
                                    Exit For
                                End If
                            End If
                        End If
                    End If
                Next idx
            End If
            
            If Not bDéjà Then
                ReDim Preserve tbl_Demande(iDem)
                p_bool_tbl_Demande = True
                's1 = Trim(STR_GetChamp(sChp, ".", 0))
                tbl_Demande(iDem).DemandForNum = s1
                tbl_Demande(iDem).DemandFFNum = v_fornum
                's2 = Trim(STR_GetChamp(sChp, ".", 1))
                tbl_Demande(iDem).DemandChpNum = s2
                Call Odbc_RecupVal("Select forec_valeurs_possibles from formetapechp where forec_num=" & s2, s7)
                tbl_Demande(iDem).DemandValeursPossibles = val(s7)
                tbl_Demande(iDem).DemandFouA = "F"
                
                sql = "select * from formetapechp where forec_num = " & s2
                If Not Odbc_SelectV(sql, rs) = P_ERREUR Then
                    If Not rs.EOF Then
                        tbl_Demande(iDem).DemandChpStr = rs("forec_label")
                    End If
                End If
                rs.Close
                tbl_Demande(iDem).DemandFormInd = v_ForIndice
                tbl_Demande(iDem).DemandGlobale = "FO"
            End If
        Next iD
    End If
    
    If Right(RDOstrcond, 1) = "§" Then
        RDOstrcond = Mid(RDOstrcond, 1, Len(RDOstrcond) - 1)
    End If
    nbcond = STR_GetNbchamp(RDOstrcond, "§")
    RDOlaRequete = ""
    RDOleOP = ""
    If nbcond = 1 Then  '999999 Then
        UneCond = STR_GetChamp(RDOstrcond, "§", i)
        str_Cnd_RP = Fait_Str_Cnd_RP(RDOfornum, UneCond)
        'MsgBox indRDO & " " & unecond
        LeChp = STR_GetChamp(UneCond, "|", 0)
        i_form = STR_GetChamp(LeChp, ".", 0)
        i_chp = STR_GetChamp(LeChp, ".", 1)
        LaCond = STR_GetChamp(UneCond, "|", 1)
        LeOp = STR_GetChamp(UneCond, "|", 2)
        LaCondF = STR_GetChamp(UneCond, "|", 3)
        LaCond = Replace(LaCond, "{", "'")
        LaCond = Replace(LaCond, "}", "'")
        lenomchp = P_RecupereNomChamp(i_chp, "nom")
        LaValChp = P_RecupereNomChamp(i_chp, "valchp")
        laFctValid = P_RecupereNomChamp(i_chp, "fctvalid")
        If LaValChp <> "" Or laFctValid <> "" Then
            LaCondRetSQL = ""
            LaCondRetF = ""
            BoolLeDetail = False
            LaCondF = P_Transforme(LaCondF, LaValChp, laFctValid, LaCond, LaCondRetSQL, LaCondRetF, BoolLeDetail)
            LaCondRetSQL = Replace(LaCondRetSQL, "X", "Donnees_" & i_form & "." & lenomchp)
            LaCondRetSQL = Replace(LaCondRetSQL, "@", "#")
            LaCond = LaCondRetSQL
            LaCondF = LaCondRetF
        End If
        LaCondFrancais = lenomchp & " " & LeOp & " " & LaCondF
        'MsgBox LaCondFrancais
        ' on ne l'ajoute que si ce n'est pas à demander
        If RDOdemander <> "" Then
            If InStr(i_form & "." & i_chp & ";", RDOdemander) > 0 Then
                GoTo Suivant
            End If
        End If
        
        ReDim Preserve tbl_cond(indTbCond) As SCOND_PARAM
        p_bool_tbl_cond = True
        tbl_cond(indTbCond).CondNumFiltre = v_fornum
        tbl_cond(indTbCond).CondFormIndice = v_ForIndice
        LaCond = Replace(LaCond, "X", lenomchp)
        LaCond = Replace(LaCond, "@", "#")
        tbl_cond(indTbCond).CondOper = LaCond
        tbl_cond(indTbCond).CondFctValid = laFctValid
        tbl_cond(indTbCond).CondenFrancais = LaCondFrancais
        tbl_cond(indTbCond).CondPasFrancais = str_Cnd_RP    'UneCond
        tbl_cond(indTbCond).CondenSQL = LaCondRetSQL
        tbl_cond(indTbCond).CondType = "CONDF"  ' condition du filtre
        tbl_cond(indTbCond).CondBoolDetail = BoolLeDetail
        ' MODIF LN 27/06/11
        tbl_cond(indTbCond).CondLigneDansGrid = 1
            
        RDOlaRequete = RDOlaRequete & RDOleOP & LaCond
        RDOleOP = " And "
        
        indTbCond = indTbCond + 1
        tbl_rdoF(indRDO).RDOF_sql = RDOlaRequete
Suivant:
    Else
        For i = 0 To nbcond - 1
            UneCond = STR_GetChamp(RDOstrcond, "§", i)
            'MsgBox indRDO & " " & unecond
            str_Cnd_RP = Fait_Str_Cnd_RP(RDOfornum, UneCond)
            LeChp = STR_GetChamp(UneCond, "|", 0)
            i_form = STR_GetChamp(LeChp, ".", 0)
            i_chp = STR_GetChamp(LeChp, ".", 1)
            LaCond = STR_GetChamp(UneCond, "|", 1)
            LeOp = STR_GetChamp(UneCond, "|", 2)
            LaCondF = STR_GetChamp(UneCond, "|", 3)
            LaCond = Replace(LaCond, "{", "'")
            LaCond = Replace(LaCond, "}", "'")
            lenomchp = P_RecupereNomChamp(i_chp, "nom")
            LaValChp = P_RecupereNomChamp(i_chp, "valchp")
            laFctValid = P_RecupereNomChamp(i_chp, "fctvalid")
            If LaValChp <> "" Or laFctValid <> "" Then
                LaCondRetSQL = ""
                LaCondRetF = ""
                BoolLeDetail = False
                LaCondF = P_Transforme(LaCondF, LaValChp, laFctValid, LaCond, LaCondRetSQL, LaCondRetF, BoolLeDetail)
                If LaCondRetSQL = "" Then
                    GoTo NextICond
                End If
                LaCondRetSQL = Replace(LaCondRetSQL, "X", "Donnees_" & i_form & "." & lenomchp)
                LaCondRetSQL = Replace(LaCondRetSQL, "@", "#")
                LaCond = LaCondRetSQL
                LaCondF = LaCondRetF
            End If
            If laFctValid = "%NUM" And InStr(LaCondF, "!") > 0 Then     ' opérateur Compris
                LaCondFrancais = lenomchp & " " & LeOp & " entre " & STR_GetChamp(LaCondF, "!", 0) & " et " & STR_GetChamp(LaCondF, "!", 1)
            Else
                LaCondFrancais = lenomchp & " " & LeOp & " " & LaCondF
            End If
            ' on ne l'ajoute que si ce n'est pas à demander
            If RDOdemander <> "" Then
                If InStr(RDOdemander & ";", i_form & "." & i_chp & ";") > 0 Then
                    GoTo NextICond
                End If
            End If
            
            ReDim Preserve tbl_cond(indTbCond) As SCOND_PARAM
            p_bool_tbl_cond = True
            tbl_cond(indTbCond).CondNumFiltre = v_fornum
            tbl_cond(indTbCond).CondFormIndice = v_ForIndice
            LaCond = Replace(LaCond, "X", lenomchp)
            LaCond = Replace(LaCond, "@", "#")
            tbl_cond(indTbCond).CondOper = LaCond
            tbl_cond(indTbCond).CondFctValid = laFctValid
            tbl_cond(indTbCond).CondenFrancais = LaCondFrancais
            tbl_cond(indTbCond).CondPasFrancais = str_Cnd_RP    ' UneCond
            tbl_cond(indTbCond).CondenSQL = LaCondRetSQL
            tbl_cond(indTbCond).CondType = "CONDF"  ' condition du filtre
            tbl_cond(indTbCond).CondBoolDetail = BoolLeDetail
            ' MODIF LN 27/06/11
            tbl_cond(indTbCond).CondLigneDansGrid = i + 1
            RDOlaRequete = RDOlaRequete & RDOleOP & LaCond
            RDOleOP = " And "
        
            indTbCond = indTbCond + 1
NextICond:
        Next i
        tbl_rdoF(indRDO).RDOF_sql = RDOlaRequete
    End If
    
    g_DernierNumFor = RDOfornum
    g_DernierNumFiltre = RDOnum
    
End Function

Private Function Fait_Str_Cnd_RP(ByVal v_ffnum, ByVal v_cnd)
    Dim s As String
    Dim sql As String, rs As rdoResultset
    Dim sOut As String
    Dim LeType As String
    
    ' objectif : obtenir    =>  CHP:595:e1_evt_date¤OP:SU¤VAL:01/01/2010¤*¤
    ' avec                  =>  33.595|(to_date(X, {dd/mm/YYYY{) >= {2001-10-13{)|>=|13/10/2001
    
    s = STR_GetChamp(v_cnd, "|", 0)
    s = STR_GetChamp(s, ".", 1)
    sOut = "CHP:" & s
    sql = "select forec_nom, forec_fctvalid from formetapechp where forec_num=" & s
    Call Odbc_RecupVal(sql, s, LeType)
    sOut = sOut & ":" & s & "¤"
    s = STR_GetChamp(v_cnd, "|", 2)
    sOut = sOut & "OP:" & s & "¤"
    s = STR_GetChamp(v_cnd, "|", 3)
    If InStr(LeType, "%DATE") > 0 Then
        sOut = sOut & "DATE:" & s & "¤"
    Else
        sOut = sOut & "VAL:" & s & "¤"
    End If
    sOut = sOut & "¤"
    Fait_Str_Cnd_RP = sOut
End Function

Private Function RecupereConditionChamp(ByVal v_indice_TabExcel As Integer)
    Dim sql As String, strcond As String, UneCond As String
    Dim i_form As Integer, i_chp As Integer
    Dim LaCondFrancais As String, lenomchp As String
    Dim laFctValid As String
    Dim LeChp As String, LaCond As String, LeOp As String, LaCondF As String
    Dim RDOlaRequete As String, RDOleOP As String
    Dim RDOstrcond As String
    Dim indTbCondChp As Integer, nbcondChp As Integer, i As Integer
    Dim LaValChp As String
    Dim Gauche As String, Droite As String
    Dim LaCondRetSQL As String
    Dim LaCondRetF As String
    Dim I_ChpNum As Integer, I_ForNum As Integer, j As Integer
    Dim ChpOrdre As String
    Dim BoolLeDetail As Boolean
    Dim Indice As Integer
    Dim s As String
    Dim lig As Integer
    Dim boolListe As Boolean
    Dim LaCondSQL As String
    Dim LaFormule As String
    Dim bok As Boolean
    
    If Mid(tbl_fichExcel(v_indice_TabExcel).cmdTypeChp, 1, 6) = "Liste=" Then
        RDOstrcond = Mid(tbl_fichExcel(v_indice_TabExcel).cmdTypeChp, 7)
        FctTrace (".. RecupereConditionChamp champs récupérés : " & RDOstrcond)
        On Error GoTo Err_Tab1
        indTbCondChp = UBound(tbl_condChp()) + 1
        GoTo Suite_Tab1
Err_Tab1:
        indTbCondChp = 0
        Resume Suite_Tab1
Suite_Tab1:
        nbcondChp = STR_GetNbchamp(RDOstrcond, ";")
        RDOlaRequete = ""
        RDOleOP = ""
        For i = 0 To nbcondChp - 1
            LeChp = STR_GetChamp(RDOstrcond, ";", i)
            LeChp = Replace(LeChp, "New", "")
            LeChp = Replace(LeChp, "Ici", "")
            If LeChp <> "" Then
                ReDim Preserve tbl_condChp(indTbCondChp) As SCOND_CHAMP
                p_bool_tbl_condCHP = True
                s = LeChp
                LeChp = STR_GetChamp(s, ":", 0)
                ChpOrdre = STR_GetChamp(s, ":", 1)
                I_ForNum = tbl_fichExcel(v_indice_TabExcel).CmdFormNum
                I_ChpNum = ChercheNumChamp("Num", "", LeChp, I_ForNum)
                lenomchp = ChercheNumChamp("Nom", "", LeChp, I_ForNum)
                tbl_condChp(indTbCondChp).CondChpCndChpNum = I_ChpNum
                tbl_condChp(indTbCondChp).CondChpCndChpOrdre = ChpOrdre
                tbl_condChp(indTbCondChp).CondChpCndPasFrancais = lenomchp
                tbl_condChp(indTbCondChp).CondChpCndenFrancais = lenomchp
                tbl_condChp(indTbCondChp).CondChpCndenSQL = lenomchp
                tbl_condChp(indTbCondChp).CondChpCndBoolDetail = ""
                tbl_condChp(indTbCondChp).CondChpCndOrigine = ""
                tbl_condChp(indTbCondChp).CondChpITabFichExcel = v_indice_TabExcel
            
                indTbCondChp = indTbCondChp + 1
            End If
        Next i
        
        ' Remplir le grid
        If p_bool_tbl_condCHP Then
            Indice = tbl_fichExcel(v_indice_TabExcel).CmdChpGridIndice
            For i = 0 To UBound(tbl_condChp())
                If tbl_condChp(i).CondChpITabFichExcel = v_indice_TabExcel Then
                    grdCondChamp(Indice).AddItem ""
                    lig = grdCondChamp(Indice).Rows - 1
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpChpNum) = tbl_fichExcel(v_indice_TabExcel).CmdChpNum
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpCndNum) = tbl_condChp(i).CondChpCndChpNum
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpCndOper) = tbl_condChp(i).CondChpCndOper
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpCndFrancais) = tbl_condChp(i).CondChpCndenFrancais
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpCndVal) = tbl_condChp(i).CondChpCndVal
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpCndSQL) = tbl_condChp(i).CondChpCndenSQL
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpBoolDetail) = tbl_condChp(i).CondChpCndBoolDetail
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpIndTbl) = i
                    grdCondChamp(Indice).row = lig
                    grdCondChamp(Indice).col = GrdCondChpImgDetail
                    grdCondChamp(Indice).RowHeight(lig) = 260
                    If InStr(tbl_fichExcel(v_indice_TabExcel).cmdTypeChp, "Ici") > 0 Then
                        Set grdCondChamp(Indice).CellPicture = imglst.ListImages(IMG_CHP_LOUPEB).Picture
                    Else
                        Set grdCondChamp(Indice).CellPicture = imglst.ListImages(IMG_CHP_LOUPER).Picture
                    End If
                End If
            Next i
        End If
    Else
        RDOstrcond = tbl_fichExcel(v_indice_TabExcel).CmdCondition
        FctTrace (".. RecupereConditionChamp condition récupérée : " & RDOstrcond)
        On Error GoTo Err_Tab2
        indTbCondChp = UBound(tbl_condChp()) + 1
        GoTo Suite_Tab2
Err_Tab2:
        indTbCondChp = 0
        Resume Suite_Tab2
Suite_Tab2:
        nbcondChp = STR_GetNbchamp(RDOstrcond, "§")
        RDOlaRequete = ""
        RDOleOP = ""
        If nbcondChp = 1 Then  '999999 Then
            UneCond = STR_GetChamp(RDOstrcond, "§", 0)
            Gauche = STR_GetChamp(UneCond, "µ", 0)
            Droite = STR_GetChamp(UneCond, "µ", 1)
            LeChp = STR_GetChamp(Gauche, "¤", 0)
            LeOp = STR_GetChamp(Gauche, "¤", 1)
            lenomchp = LeChp
            i_chp = STR_GetChamp(lenomchp, ":", 1)
            lenomchp = STR_GetChamp(lenomchp, ":", 2)
            LaValChp = STR_GetChamp(Gauche, "¤", 2)
            Droite = Replace(Droite, "CHP:", "")
            LaCondFrancais = Droite
            BoolLeDetail = False
            LaValChp = P_RecupereNomChamp(i_chp, "valchp")
            laFctValid = P_RecupereNomChamp(i_chp, "fctvalid")
            LaFormule = P_RecupereNomChamp(i_chp, "formule")
            If LaValChp <> "" Or laFctValid <> "" Or LaFormule <> "" Then
                LaCondSQL = ""
                Call FaitConditionChamp(Gauche, LaCondSQL, LaCondFrancais)
            End If
            
            ReDim Preserve tbl_condChp(indTbCondChp) As SCOND_CHAMP
            p_bool_tbl_condCHP = True
            tbl_condChp(indTbCondChp).CondChpITabFichExcel = v_indice_TabExcel ' celui du condCHP
            lenomchp = Replace(lenomchp, "CHP:", "")
            I_ForNum = tbl_fichExcel(v_indice_TabExcel).CmdFormNum
            I_ChpNum = ChercheNumChamp("Num", lenomchp, 0, I_ForNum)
            tbl_condChp(indTbCondChp).CondChpCndChpNum = I_ChpNum
            tbl_condChp(indTbCondChp).CondChpCndFormNum = I_ForNum
            tbl_condChp(indTbCondChp).CondChpChpFormIndice = tbl_fichExcel(v_indice_TabExcel).CmdFormIndice
            tbl_condChp(indTbCondChp).CondChpCndOper = LeOp
            tbl_condChp(indTbCondChp).CondChpCndVal = LaValChp
            tbl_condChp(indTbCondChp).CondChpCndPasFrancais = UneCond
            tbl_condChp(indTbCondChp).CondChpCndenSQL = LaCondSQL
            tbl_condChp(indTbCondChp).CondChpCndenFrancais = LaCondFrancais
            tbl_condChp(indTbCondChp).CondChpCndBoolDetail = BoolLeDetail
            tbl_condChp(indTbCondChp).CondChpCndOrigine = UneCond
            tbl_condChp(indTbCondChp).CondChpITabFichExcel = v_indice_TabExcel
            
            indTbCondChp = indTbCondChp + 1
Suivant:
        Else
            For i = 0 To nbcondChp - 1
                UneCond = STR_GetChamp(RDOstrcond, "§", i)
                'Debug.Print UneCond
                Gauche = STR_GetChamp(UneCond, "µ", 0)
                Droite = STR_GetChamp(UneCond, "µ", 1)
                LeChp = STR_GetChamp(Gauche, "¤", 0)
                LeOp = STR_GetChamp(Gauche, "¤", 1)
                lenomchp = LeChp
                i_chp = STR_GetChamp(lenomchp, ":", 1)
                lenomchp = STR_GetChamp(lenomchp, ":", 2)
                LaValChp = STR_GetChamp(Gauche, "¤", 2)
                Droite = Replace(Droite, "CHP:", "")
                LaCondFrancais = Droite
                BoolLeDetail = False
                LaValChp = P_RecupereNomChamp(i_chp, "valchp")
                laFctValid = P_RecupereNomChamp(i_chp, "fctvalid")
                LaFormule = P_RecupereNomChamp(i_chp, "formule")
                If LaValChp <> "" Or laFctValid <> "" Or LaFormule <> "" Then
                    Call FaitConditionChamp(Gauche, LaCondSQL, LaCondFrancais)
                End If
                bok = True
                If p_bool_tbl_condCHP Then
                    For j = 0 To indTbCondChp - 1
                        If tbl_condChp(j).CondChpCndenSQL = LaCondSQL Then
                            If tbl_condChp(j).CondChpCndChpNum = I_ChpNum And tbl_condChp(j).CondChpCndFormNum = I_ForNum And tbl_condChp(j).CondChpChpFormIndice = tbl_fichExcel(v_indice_TabExcel).CmdFormIndice Then
                                bok = False
                                indTbCondChp = indTbCondChp - 1
                                Exit For
                            End If
                        End If
                    Next j
                End If
                If Not bok Then GoTo NextICond
                ReDim Preserve tbl_condChp(indTbCondChp) As SCOND_CHAMP
                p_bool_tbl_condCHP = True
                lenomchp = Replace(lenomchp, "CHP:", "")
                I_ForNum = tbl_fichExcel(v_indice_TabExcel).CmdFormNum
                I_ChpNum = ChercheNumChamp("Num", lenomchp, 0, I_ForNum)
                tbl_condChp(indTbCondChp).CondChpCndChpNum = I_ChpNum
                tbl_condChp(indTbCondChp).CondChpCndFormNum = I_ForNum
                tbl_condChp(indTbCondChp).CondChpChpFormIndice = tbl_fichExcel(v_indice_TabExcel).CmdFormIndice
                tbl_condChp(indTbCondChp).CondChpCndOper = LeOp
                tbl_condChp(indTbCondChp).CondChpCndVal = LaValChp
                tbl_condChp(indTbCondChp).CondChpCndPasFrancais = UneCond
                tbl_condChp(indTbCondChp).CondChpCndenSQL = LaCondSQL
                tbl_condChp(indTbCondChp).CondChpCndenFrancais = LaCondFrancais
                tbl_condChp(indTbCondChp).CondChpCndBoolDetail = BoolLeDetail
                tbl_condChp(indTbCondChp).CondChpCndOrigine = UneCond
                tbl_condChp(indTbCondChp).CondChpITabFichExcel = v_indice_TabExcel
            
                indTbCondChp = indTbCondChp + 1
NextICond:
            Next i
        End If
        
        ' Remplir le grid
        If p_bool_tbl_condCHP Then
            Indice = tbl_fichExcel(v_indice_TabExcel).CmdChpGridIndice
            For i = 0 To UBound(tbl_condChp())
                If tbl_condChp(i).CondChpITabFichExcel = v_indice_TabExcel Then
                    grdCondChamp(Indice).AddItem ""
                    lig = grdCondChamp(Indice).Rows - 1
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpChpNum) = tbl_fichExcel(v_indice_TabExcel).CmdChpNum
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpCndNum) = tbl_condChp(i).CondChpCndChpNum
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpCndOper) = tbl_condChp(i).CondChpCndOper
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpCndFrancais) = tbl_condChp(i).CondChpCndenFrancais
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpCndVal) = tbl_condChp(i).CondChpCndVal
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpCndSQL) = tbl_condChp(i).CondChpCndenSQL
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpBoolDetail) = tbl_condChp(i).CondChpCndBoolDetail
                    grdCondChamp(Indice).TextMatrix(lig, GrdCondChpIndTbl) = i
                    grdCondChamp(Indice).col = GrdCondChpImgDetail
                    If tbl_condChp(i).CondChpCndBoolDetail Then
                        grdCondChamp(Indice).RowHeight(lig) = 260
                        Set grdCondChamp(Indice).CellPicture = imglst.ListImages(IMG_CHP_DET).Picture
                    Else
                        grdCondChamp(Indice).RowHeight(lig) = 240
                        Set grdCondChamp(Indice).CellPicture = Nothing
                    End If
                End If
            Next i
        End If
    End If
End Function

Private Function MajConditionChamp(ByVal v_indice_TabExcel As Integer)
    Dim LaCondFrancais As String, lenomchp As String, LeChp As String
    Dim RDOstrcond As String
    Dim nbcondChp As Integer, i As Integer
    Dim I_ChpNum As Integer, I_ForNum As Integer
    Dim Indice As Integer
    Dim lig As Integer
    
    If Mid(tbl_fichExcel(v_indice_TabExcel).cmdTypeChp, 1, 6) = "Liste=" Then
        RDOstrcond = Mid(tbl_fichExcel(v_indice_TabExcel).cmdTypeChp, 7)
        FctTrace (".. RecupereConditionChamp champs récupérés : " & RDOstrcond)
        nbcondChp = STR_GetNbchamp(RDOstrcond, ";")
        ' Remplir le grid
        Indice = tbl_fichExcel(v_indice_TabExcel).CmdChpGridIndice
        grdCondChamp(Indice).Rows = 0
        For i = 0 To nbcondChp - 1
            LeChp = STR_GetChamp(RDOstrcond, ";", i)
            LeChp = Replace(LeChp, "New", "")
            LeChp = Replace(LeChp, "Ici", "")
            LeChp = STR_GetChamp(LeChp, ":", 0)
            If LeChp <> "" Then
                I_ForNum = tbl_fichExcel(v_indice_TabExcel).CmdFormNum
                I_ChpNum = ChercheNumChamp("Num", "", LeChp, I_ForNum)
                lenomchp = ChercheNumChamp("Nom", "", LeChp, I_ForNum)
        
                grdCondChamp(Indice).AddItem ""
                lig = grdCondChamp(Indice).Rows - 1
                grdCondChamp(Indice).row = lig
                grdCondChamp(Indice).TextMatrix(lig, GrdCondChpChpNum) = tbl_fichExcel(v_indice_TabExcel).CmdChpNum
                grdCondChamp(Indice).TextMatrix(lig, GrdCondChpCndNum) = I_ChpNum
                grdCondChamp(Indice).TextMatrix(lig, GrdCondChpCndFrancais) = lenomchp
                grdCondChamp(Indice).col = GrdCondChpImgDetail
                grdCondChamp(Indice).RowHeight(lig) = 260
                If InStr(tbl_fichExcel(v_indice_TabExcel).cmdTypeChp, "Ici") > 0 Then
                    Set grdCondChamp(Indice).CellPicture = imglst.ListImages(IMG_CHP_LOUPEB).Picture
                Else
                    Set grdCondChamp(Indice).CellPicture = imglst.ListImages(IMG_CHP_LOUPER).Picture
                End If
            End If
        Next i
    End If
End Function

Private Function ChercheNumChamp(v_Trait, v_LeNomChp, v_LeNumChp, v_ffnum)
    Dim sql As String, rs As rdoResultset
    Dim ff_fornums As String, s As String, sin As String
    Dim n As Integer, iff As Integer
    
    If v_LeNumChp > 0 Then
        sql = "select * from formetapechp where forec_num = " & v_LeNumChp
        If Odbc_SelectV(sql, rs) = P_ERREUR Then
            ChercheNumChamp = -1
            Exit Function
        ElseIf rs.EOF Then
            ChercheNumChamp = -1
        Else
            If v_Trait = "Num" Then ChercheNumChamp = rs("forec_num")
            If v_Trait = "Type" Then ChercheNumChamp = rs("forec_Type")
            If v_Trait = "FctValid" Then ChercheNumChamp = rs("forec_FctValid")
            If v_Trait = "Nom" Then ChercheNumChamp = rs("forec_nom") & " : " & rs("forec_label")
        End If
        rs.Close
    ElseIf v_LeNomChp <> "" Then
        sql = "select * from formulaire, filtreform where for_num=ff_fornum and ff_num=" & v_ffnum
        If Odbc_SelectV(sql, rs) = P_ERREUR Then
            ChercheNumChamp = -1
            Exit Function
        ElseIf rs.EOF Then
            ChercheNumChamp = -1
        Else
            ff_fornums = rs("ff_fornums")
            n = STR_GetNbchamp(ff_fornums, "*")
            sin = "("
            For iff = 1 To n - 1
                s = STR_GetChamp(ff_fornums, "*", iff)
                If iff > 1 Then sin = sin + ","
                sin = sin + s
            Next iff
            sin = sin + ")"
            rs.Close
            sql = "select * from formetapechp where forec_fornum in " & sin & " and forec_nom ='" & v_LeNomChp & "'"
            If Odbc_SelectV(sql, rs) = P_ERREUR Then
                ChercheNumChamp = -1
                Exit Function
            ElseIf rs.EOF Then
                ChercheNumChamp = -1
            Else
                If v_Trait = "Num" Then ChercheNumChamp = rs("forec_num")
                If v_Trait = "Nom" Then ChercheNumChamp = rs("forec_nom") & " " & rs("forec_label")
            End If
        End If
        rs.Close
    End If
End Function

Private Function RecupereConditionL(ByVal v_i As Integer)
    Dim sql As String, strcond As String, UneCond As String
    Dim indTbCond As Integer
    Dim rs As rdoResultset
    Dim nbcond As Integer, i As Integer
    Dim i_form As Integer, i_chp As Integer
    Dim LaCondFrancais As String, lenomchp As String
    Dim s As String
    Dim LeChp As String, LaCond As String, LeOp As String, LaCondF As String
    Dim indRDO As Integer
    Dim RDOlaRequete As String, RDOleOP As String
    Dim RDOetat As String, RDOfornum As Integer, RDOnum As Integer
    Dim RDOstrcond As String
    Dim LaValChp As String, v_fornum As Integer
    Dim déjà As Boolean
    Dim laS As String, Gauche As String
    Dim pos As Integer, encore As Boolean
    Dim laSF As String
    Dim laSPF As String
    Dim gauchePF As String, posPF As Integer
    Dim itbl_rdoL As Integer
    
    itbl_rdoL = -1
    ' tableau des recordset
    ' découper la condition en plusieurs
    laS = STR_GetChamp(tbl_fichExcel(v_i).CmdCondition, "µ", 0)
    laSF = STR_GetChamp(tbl_fichExcel(v_i).CmdCondition, "µ", 1)
    laSPF = STR_GetChamp(tbl_fichExcel(v_i).CmdCondition, "µ", 1)
    encore = True
    While encore
        pos = InStr(laS, "OP:OU")
        If pos = 0 Then
            encore = False
            Gauche = laS
            posPF = InStr(laSPF, "[OU]")
            gauchePF = laSPF
        Else
            Gauche = Mid(laS, 1, pos - 1)
            laS = Mid(laS, pos + 6)
            posPF = InStr(laSPF, "[OU]")
            gauchePF = Mid(laSPF, 1, posPF - 1)
            laSPF = Mid(laSPF, pos + 6)
        End If
        On Error GoTo Err_Tab_RDOL
        indRDO = UBound(tbl_rdoL()) + 1
        GoTo Suite_Tab_RDO
Err_Tab_RDOL:
        indRDO = 0
        Resume Suite_Tab_RDO
Suite_Tab_RDO:
        On Error GoTo 0
        ReDim Preserve tbl_rdoL(indRDO)
        p_bool_tbl_rdoL = True
        tbl_rdoL(indRDO).RDOL_fornum = tbl_fichExcel(v_i).CmdFormNum
        tbl_rdoL(indRDO).RDOL_FormIndice = tbl_fichExcel(v_i).CmdFormIndice
        If itbl_rdoL = -1 Then
            itbl_rdoL = indRDO
        End If
        tbl_rdoL(indRDO).RDOL_num = itbl_rdoL
        tbl_rdoL(indRDO).RDOL_sqlenSQL = Replace(Gauche, "\", "|")
        tbl_rdoL(indRDO).RDOL_sqlenFrancais = laSF
        tbl_rdoL(indRDO).RDOL_sqlPasFrancais = gauchePF
    Wend
    On Error GoTo 0
    
End Function

Private Sub RemplirTabFenetre()
    Dim i As Integer
    Dim prem As Integer
    Dim LaRowMax As Integer, LaColMax As Integer
    
    prem = 0
    FctTrace ("Début RemplirTabFenetre")
    For i = 1 To Exc_obj.ActiveWorkbook.Sheets.Count
        ReDim Preserve tbl_fenExcel(i) As SFEN_EXCEL
        p_bool_tbl_fenExcel = True
        If prem = 0 Then
            g_numfeuille = i
            prem = 1
        End If
        tbl_fenExcel(i).FenNum = i
        tbl_fenExcel(i).FenNom = Exc_obj.ActiveWorkbook.Sheets(i).Name
        tbl_fenExcel(i).FenLoad = False
        Call FindLastCell(i, LaRowMax, LaColMax)
        'LaRowMax = Exc_obj.ActiveWorkbook.Sheets(i).UsedRange.Rows.Count
        tbl_fenExcel(i).FenRowMax = LaRowMax
        'LaColMax = Exc_obj.ActiveWorkbook.Sheets(i).UsedRange.Columns.Count
        tbl_fenExcel(i).FenColMax = LaColMax
        tbl_fenExcel(i).FenModif = False
        
        ' ajouter dans le grid
        ' ajouter dans le grid
        FctTrace (".. 1 Avant RemplirTabFenetre")
        ajouter_feuille_grd (i)
        FctTrace (".. 2 Après RemplirTabFenetre")
    Next i
    FctTrace ("Fin RemplirTabFenetre")
End Sub

Private Function FindLastCell(ByVal iSheet As Integer, ByRef r_LaRowMax, ByRef r_LaColMax)
    Dim ExcSel As Variant
    
    On Error GoTo Erreur
    ExcSel = Exc_obj.Sheets(iSheet).UsedRange.Select
    r_LaRowMax = Exc_obj.SELECTION.Rows(Exc_obj.SELECTION.Rows.Count).row
    r_LaColMax = Exc_obj.SELECTION.Columns(Exc_obj.SELECTION.Columns.Count).Column

Fin:
    On Error GoTo 0
    Exit Function
Erreur:
    If Err = 1004 Then
        ' au moins le nombre de lignes
        r_LaRowMax = Exc_obj.Sheets(iSheet).UsedRange.Rows.Count
        r_LaColMax = 10
        If r_LaRowMax < p_Imax Then r_LaRowMax = p_Imax
        On Error GoTo 0
        Exit Function
    End If
    r_LaRowMax = p_Imax
    r_LaColMax = 10
    Resume Fin
End Function

Private Sub InitGrdCell(ByVal v_idgrid As Integer)
    
    Dim ColWidth As Integer
    Dim RowHeight As Integer
    Dim i As Integer, j As Integer
    Dim iChargé As Integer, nblig_fich As Integer
    Dim iDeb As Integer
    Dim ij As Integer
    Dim sql As String
    Dim rs As rdoResultset
    Dim LaRowMax As Integer, LaColMax As Integer
    Dim iDébut As Integer, iFin As Integer
    Dim retMettreChamp As Boolean
    
    p_dansGrid = True
    ChargementEnCours = True
    
    Public_VerifOuvrir g_CheminModele, False, True, p_tbl_FichExcelOuverts
    ColWidth = 1000
    RowHeight = 300
    
    grdFeuille.col = 0
    grdFeuille.ColSel = grdFeuille.Cols - 1
    grdFeuille.row = v_idgrid - 1
    
    Call FindLastCell(v_idgrid, LaRowMax, LaColMax)
    
    'LaRowMax = Exc_obj.ActiveSheet.UsedRange.Rows.Count
    If tbl_fenExcel(v_idgrid).FenRowMax >= LaRowMax Then
        LaRowMax = tbl_fenExcel(v_idgrid).FenRowMax
    Else
        tbl_fenExcel(v_idgrid).FenRowMax = LaRowMax
        tbl_fenExcel(v_idgrid).FenModif = True
        BoolFaireSauveFenetre = True
    End If
    'LaColMax = Exc_obj.ActiveSheet.UsedRange.Columns.Count
    If tbl_fenExcel(v_idgrid).FenColMax >= LaColMax Then
        LaColMax = tbl_fenExcel(v_idgrid).FenColMax
    Else
        tbl_fenExcel(v_idgrid).FenColMax = LaColMax
        tbl_fenExcel(v_idgrid).FenModif = True
        BoolFaireSauveFenetre = True
    End If
    
Recommencer:
    
    If grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_LoadFait) <> "X" Then
        Load grdCell(v_idgrid)
    End If
    'grdCell(v_idgrid).Visible = True
    bfaire_Click = False
    
    g_numfeuille = v_idgrid
    tbl_fenExcel(v_idgrid).FenLoad = True
    If p_TraitPublier <> "G" Then
        For i = 0 To grdFeuille.Rows - 1
            grdFeuille.col = GrdFeuil_FenNom
            grdFeuille.row = i
            If grdFeuille.row = v_idgrid - 1 Then
                grdFeuille.CellFontBold = True
            Else
                grdFeuille.CellFontBold = False
            End If
        Next i
    End If
    grdCell(v_idgrid).Cols = LaColMax + 1
    grdCell(v_idgrid).Rows = LaRowMax + 1
    
    grdCell(v_idgrid).ColWidth(0) = ColWidth
    grdCell(v_idgrid).RowHeight(0) = RowHeight
    
    grdCell(v_idgrid).TextMatrix(0, 0) = tbl_fenExcel(v_idgrid).FenNom
    
    p_bfaire_RowColChange = False
    
    If p_TraitPublier <> "G" Then
        If grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_LoadFait) <> "X" Then
            For i = 1 To LaColMax
                grdCell(v_idgrid).ColWidth(i) = ColWidth
                grdCell(v_idgrid).col = i
                grdCell(v_idgrid).CellAlignment = flexAlignCenterCenter
                grdCell(v_idgrid).TextMatrix(0, i) = FctStrColDest(i)
            Next i
            For i = 1 To LaRowMax
                grdCell(v_idgrid).TextMatrix(i, 0) = i
            Next i
    '        For i = 1 To LaColMax
    '            grdCell(v_idgrid).ColWidth(i) = ColWidth
    '        Next i
        End If
    End If
    On Error GoTo Err_Tab
    ij = UBound(tbl_cell())
    GoTo Suite_Tab
Err_Tab:
    ij = 0
    Resume Suite_Tab
Suite_Tab:
    On Error GoTo 0
    
    'MsgBox grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_Chargement)
    If bRafraichir Then
        iDébut = 1
        iFin = val(grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_Chargement))
        If iFin > LaRowMax Then iFin = LaRowMax
    Else
        iDébut = val(grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_Chargement))
        If iDébut = 0 Then iDébut = 1
        iFin = val(grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_Chargement)) + p_Imax
        If iFin > LaRowMax Then iFin = LaRowMax
    End If
' FESTOC
GoTo suite
    If p_TraitPublier <> "G" Then
        For i = iDébut To iFin
            For j = 1 To LaColMax
                ReDim Preserve tbl_cell(ij)
                p_bool_tbl_cell = True
                tbl_cell(ij).CellFeuille = v_idgrid
                tbl_cell(ij).CellTag = ""
                tbl_cell(ij).CellLink = ""
                tbl_cell(ij).CellPortee = ""
                tbl_cell(ij).CellX = j
                tbl_cell(ij).CellY = i
                tbl_cell(ij).cellXPère = -1
                tbl_cell(ij).cellYPère = -1
                ij = ij + 1
            Next j
        Next i
    End If
suite:
    Dim leX As Integer, leY As Integer
    Dim MenForme As String
    Dim sX As String
    Dim cptRefresh     As Integer
    Dim sqlFait As Boolean
    
    On Error GoTo Err_Suite2
    i = UBound(tbl_fichExcel())
    GoTo Suite2
Err_Suite2:
    Resume Continu_2
Suite2:
    On Error GoTo 0
    Me.LblHelp.Visible = True
    
    If p_TraitPublier <> "G" Then
        nblig_fich = UBound(tbl_fichExcel())
        Me.LblHelp.Caption = "Champ 0 / " & nblig_fich
        Me.LblHelp.Refresh
        For i = 0 To nblig_fich
            If tbl_fichExcel(i).CmdType = "CHP" Or tbl_fichExcel(i).CmdType = "RES" Then
                If tbl_fichExcel(i).CmdFenNum = v_idgrid Then
                    sqlFait = False
                    cptRefresh = cptRefresh + 1
                    If cptRefresh = 10 Then
                        cptRefresh = 0
                        Me.LblHelp.Caption = "Champ " & i & " / " & nblig_fich
                        Me.LblHelp.Refresh
                    End If
                    sX = tbl_fichExcel(i).CmdX
                    leX = FctIntColdest(sX)
                    leY = tbl_fichExcel(i).CmdY
                    'MsgBox LeY
                    'If grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_LoadFait) = "X" Then
                    If bRafraichir Then
                        ' on charge tous les champs à charger sur la tranche de lignes déjà chargée
                        If leY <= val(grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_Chargement)) Then
                            GoTo OnPeutCharger
                        Else
                            GoTo Next_Chp
                        End If
                    Else
                        ' on ne charge que les champs à charger sur cette tranche de lignes
                        If leY < val(grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_Chargement)) Then
                            GoTo Next_Chp
                        ElseIf leY > val(grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_Chargement)) + p_Imax Then
                            GoTo Next_Chp
                        End If
                    End If
                    If iChargé < leY Then iChargé = leY
OnPeutCharger:
                    MenForme = tbl_fichExcel(i).CmdMenFormeChp
                    ' Mettre le champ
                    If tbl_fichExcel(i).CmdType = "RES" Then
                        GoTo LabDirect
                    End If
                    If tbl_fichExcel(i).CmdChpNum = -1 Then GoTo Next_Chp
                    If tbl_fichExcel(i).CmdChpNum <= -10 Then GoTo LabDirect
                    sql = "select * from formetapechp where forec_num = " & tbl_fichExcel(i).CmdChpNum
                    If Odbc_SelectV(sql, rs) = P_ERREUR Then
                        Exit Sub
                    End If
                    sqlFait = True
                    'grdCell(v_idgrid).TextMatrix(leX, leY) = "    " & rs("forec_nom")
                    If rs.EOF Then
                        MsgBox "Champ n° " & tbl_fichExcel(i).CmdChpNum & " introuvable"
                        rs.Close
                    Else
LabDirect:
                        If leX <= LaColMax And leY <= LaRowMax Then
                            grdCell(v_idgrid).row = leY
                            grdCell(v_idgrid).col = leX
                            Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_CHAMP).Picture
                            ' Mise en forme
                            retMettreChamp = P_MettreChamp("Mettre", i, leX, leY, MenForme, tbl_fichExcel(i).CmdChpNum, tbl_fichExcel(i).CmdFormIndice, v_idgrid, False)
                        Else
                            retMettreChamp = P_MettreChamp("Simul", i, leX, leY, MenForme, tbl_fichExcel(i).CmdChpNum, tbl_fichExcel(i).CmdFormIndice, v_idgrid, False)
                        End If
                        If tbl_fichExcel(i).CmdType = "RES" Then
                            grdCell(v_idgrid).col = leX
                            grdCell(v_idgrid).row = leY
                            Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_RESULTAT_RAPPORT).Picture
                            grdCell(v_idgrid).TextMatrix(leY, leX) = ""
                        ElseIf Not retMettreChamp Then
                            'IMG_BOULE_ERREUR
                            grdCell(v_idgrid).col = leX
                            grdCell(v_idgrid).row = leY
                            Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULE_ERREUR).Picture
                            grdCell(v_idgrid).TextMatrix(leY, leX) = ""
                        End If
                    End If
                    If sqlFait Then
                        rs.Close
                    End If
                End If
            End If
Next_Chp:
            DoEvents
        Next i
    End If
    Me.LblHelp.Visible = False

Continu_2:
    
    If p_ListeRafraichirFenetre <> "" Then
        Unload grdCell(v_idgrid)
        LaRowMax = tbl_fenExcel(v_idgrid).FenRowMax
        LaColMax = tbl_fenExcel(v_idgrid).FenColMax
        grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_LoadFait) = ""
        p_ListeRafraichirFenetre = ""
        p_ListeRafraichirTropX = 0
        GoTo Recommencer
    End If
    
    ' ajouter le contenu du tableau
    AjouterContenuTableau v_idgrid
    grdFeuille.TextMatrix((v_idgrid - 1), GrdFeuil_LoadFait) = "X"
    grdFeuille.ColWidth(1) = 2900
    grdCell(v_idgrid).Visible = True
    bfaire_Click = True
    p_bfaire_RowColChange = True

    cmd(CMD_SIMULATION).Visible = True
    cmd(CMD_SIMULATION_UNE).Visible = True
    cmd(CMD_SIMULATION_ECRAN).Visible = True

    ChargementEnCours = False

End Sub

Public Function P_MettreChamp(v_Trait As String, i_tbl_fichExcel As Integer, v_lex As Integer, v_leY As Integer, ByRef v_MenForme As String, v_forec_num As Integer, v_IndiceNum As Integer, v_idgrid As Integer, v_bvider_cell As Boolean)
    Dim sql As String, rs As rdoResultset
    Dim sqltmp As String
    Dim strListeChamp As String
    Dim forec_type As String
    Dim Liste_Num As Integer
    Dim col As Integer, row As Integer
    Dim bool_liste As Boolean
    Dim boolSQL As Boolean
    Dim boolLstSpécial As Boolean
    Dim BoolLstService As Boolean, BoolLstFonction As Boolean
    Dim BoolEntier As Boolean, BoolMontant As Boolean, BoolLstHierarchie As Boolean
    Dim BoolDate As Boolean
    Dim BoolCalcul As Boolean
    Dim strLstSpécial As String
    Dim Le_Lib As String, La_Val As String
    Dim Le_LibDétail As String, La_ValDétail As String
    Dim NomCellDest As String
    Dim exc_sheet As Excel.Worksheet
    Dim ChpNom As String
    Dim ChpLabel As String
    Dim ANC_bfaire_RowColChange As Boolean
    Dim XPère As Integer, YPère As Integer
    Dim LaRowMax As Integer, LaColMax As Integer
    Dim MenFToutes As String, MenFUneVal As String
    Dim leXCible As Integer, leYCible As Integer
    Dim NomDuChamp As String
    Dim ValDuChamp As String
    Dim op As String
    Dim i As Integer
    Dim Padd1 As String, Padd2 As String
    Dim Padd As String
    Dim New_MenForme As String
    
    Dim MenFLigCol As String
    Dim MenFPresentation As String
    Dim MenFToutesouNouNR As String
    Dim MenFLesVal As String
    Dim MenFparRapport As String
    Dim MenFRepartition As String
    Dim MenFNbOccur As String
    Dim bPlusieursValeurs As Boolean
    Dim nbvaleurs As String
    Dim rsListe As rdoResultset, rsVal As rdoResultset
    Dim bEstListe As Boolean
    Dim rsChp As rdoResultset
    Dim NomListe As String
    Dim LibPortee As String
    Dim tmp_Le_Lib As String, tmp_Le_LibDétail As String, tmp_La_ValDétail As String
    Dim tmp_La_Val As String
    Dim iNbOccur As Integer
    Dim sFormule As String
    Dim i1 As Integer, s2 As String
    Dim s1 As StandardStreamTypes
    Dim laS1 As String
    Dim s As String
    Dim nbOccur As Integer
    Dim rsChpFait As Boolean
    
    Padd1 = "    "
    Padd2 = "   "
    
    P_MettreChamp = True
    
    If p_dansExcel Then
        Set exc_sheet = Exc_obj.ActiveWorkbook.ActiveSheet
    End If
    If v_Trait = "Vider" Then
        p_bfaire_RowColChange = False
        If p_dansGrid Then
            If IsNumeric(tbl_fichExcel(i_tbl_fichExcel).CmdX_Debut) And IsNumeric(tbl_fichExcel(i_tbl_fichExcel).CmdX_Fin) Then
                For i = tbl_fichExcel(i_tbl_fichExcel).CmdX_Debut To tbl_fichExcel(i_tbl_fichExcel).CmdX_Fin
                    If i < grdCell(v_idgrid).Cols Then
                        grdCell(v_idgrid).col = i
                        For i1 = tbl_fichExcel(i_tbl_fichExcel).CmdY_Debut To tbl_fichExcel(i_tbl_fichExcel).CmdY_Fin
                            If i1 < grdCell(v_idgrid).Rows Then
                                grdCell(v_idgrid).row = i1
                                grdCell(v_idgrid).TextMatrix(i1, i) = ""
                                Set grdCell(v_idgrid).CellPicture = Nothing
                            End If
                        Next i1
                    End If
                Next i
            End If
        End If
        If p_dansExcel Then
            For i = tbl_fichExcel(i_tbl_fichExcel).CmdX_Debut To tbl_fichExcel(i_tbl_fichExcel).CmdX_Fin
                For i1 = tbl_fichExcel(i_tbl_fichExcel).CmdY_Debut To tbl_fichExcel(i_tbl_fichExcel).CmdY_Fin
                    NomCellDest = FctFaitNomCellDest(i, i1)
                    exc_sheet.Range(NomCellDest).Value = ""
                Next i1
            Next i
        End If
        p_bfaire_RowColChange = True
        Exit Function
    End If
    
    rsChpFait = False
    If v_forec_num <= -10 Then
        NomDuChamp = "Nombre de Fiches"
        forec_type = "NOMBRE_TOTAL"
        Liste_Num = 0
        ChpNom = "NOMBRE_TOTAL"
        ChpLabel = "NOMBRE_TOTAL"
        If tbl_fichExcel(i_tbl_fichExcel).CmdChpSQL <> "" Then
        End If
    ElseIf v_forec_num > 0 And Mid(tbl_fichExcel(i_tbl_fichExcel).cmdTypeChp, 1, 6) <> "Liste=" Then
        sql = "select * from formetapechp where forec_num = " & v_forec_num
        If Odbc_SelectV(sql, rsChp) = P_ERREUR Then
            Exit Function
        End If
        rsChpFait = True
        NomDuChamp = rsChp("forec_label")
        forec_type = rsChp("forec_type")
        Liste_Num = val(rsChp("forec_valeurs_possibles"))
        ChpNom = rsChp("forec_nom")
        ChpLabel = rsChp("forec_label")
        sFormule = IIf(IsNull(rsChp("forec_formule").Value), "", rsChp("forec_formule").Value)
        If forec_type = "HIERARCHIE" Then
            Call Repart_Charger_Entite("H", Liste_Num, i_tbl_fichExcel)
        ElseIf rsChp("forec_fctvalid") = "%NUMSERVICE" And forec_type = "TEXT" Then
            forec_type = "NUMSERVICE"
            Call Repart_Charger_Entite("S", 0, i_tbl_fichExcel)
        ElseIf rsChp("forec_fctvalid") = "%NUMFCT" And forec_type = "TEXT" Then
            forec_type = "NUMFCT"
            Call Repart_Charger_Entite("F", 0, i_tbl_fichExcel)
        ElseIf forec_type = "RADIO" Or forec_type = "CHECK" Or forec_type = "SELECT" Then
            Call Repart_Charger_Entite("L", Liste_Num, i_tbl_fichExcel)
        ElseIf forec_type = "TEXT" Then
        Else
            MsgBox "???"
        End If
    ElseIf tbl_fichExcel(i_tbl_fichExcel).CmdType = "RES" Then
        nbOccur = 1
        nbvaleurs = 1
        ANC_bfaire_RowColChange = p_bfaire_RowColChange
        p_bfaire_RowColChange = False
        GoTo LabMettre
    Else
        If Mid(tbl_fichExcel(i_tbl_fichExcel).cmdTypeChp, 1, 6) = "Liste=" Then
            strListeChamp = Mid(tbl_fichExcel(i_tbl_fichExcel).cmdTypeChp, 7)
            forec_type = "ListeChamps"
        Else
            MsgBox "Erreur sur fonction P_MettreChamp"
        End If
    End If
    
    ANC_bfaire_RowColChange = p_bfaire_RowColChange
    p_bfaire_RowColChange = False
    
    bool_liste = False
    bPlusieursValeurs = False
    Select Case forec_type
    Case "RADIO"
        bool_liste = True
        bPlusieursValeurs = True
        bEstListe = True
    Case "CHECK"
        bool_liste = True
        bPlusieursValeurs = True
        bEstListe = True
    Case "SELECT"
        bool_liste = True
        bPlusieursValeurs = True
        bEstListe = True
    Case "HIERARCHIE"
        BoolLstHierarchie = True
        strLstSpécial = "HIERARCHIE"
        boolLstSpécial = True
        bPlusieursValeurs = True
        bEstListe = True
    Case "NUMSERVICE"
        BoolLstService = True
        strLstSpécial = rsChp("forec_fctvalid")
        boolLstSpécial = True
        bPlusieursValeurs = True
        bEstListe = True
    Case "NUMFCT"
        BoolLstFonction = True
        strLstSpécial = rsChp("forec_fctvalid")
        boolLstSpécial = True
        bPlusieursValeurs = True
        bEstListe = True
    Case "TEXT"
        If InStr(rsChp("forec_fctvalid"), "%NUM") > 0 Then
            BoolEntier = True
            strLstSpécial = rsChp("forec_fctvalid")
            boolLstSpécial = True
        ElseIf rsChp("forec_fctvalid") = "%MTT" Then
            BoolMontant = True
            strLstSpécial = rsChp("forec_fctvalid")
            boolLstSpécial = True
        ElseIf rsChp("forec_fctvalid") = "%ENTIER" Then
            BoolEntier = True
            strLstSpécial = rsChp("forec_fctvalid")
            boolLstSpécial = True
        ElseIf InStr(rsChp("forec_fctvalid"), "%DATE") > 0 Then
            BoolDate = True
            bPlusieursValeurs = True
            strLstSpécial = rsChp("forec_fctvalid")
            boolLstSpécial = True
        ElseIf sFormule <> "" Then
            BoolCalcul = True
            strLstSpécial = "calculer"
            boolLstSpécial = True
        Else
            P_MettreChamp = False
            MsgBox "Mise en forme mal formatée"
        End If
    End Select
    If rsChpFait Then
        rsChp.Close
    End If
    ' Colonne_Val # POURCENT # NONVALEUR_R # * #             # AUX_R     ' pour Entier
    ' Colonne_Val # POURCENT # VALEUR_R    # 5 # 121;114;118 #           ' pour Liste
    
    ' Voir si c'est une ancienne structure de MenForme
    New_MenForme = FctVoirStructureMenForme(bEstListe, v_MenForme)
Lab_Test_MenForme:
    If New_MenForme <> v_MenForme Then
        tbl_fichExcel(i_tbl_fichExcel).CmdMenFormeChp = New_MenForme
        v_MenForme = New_MenForme
        Call verifSiSauve
    End If
    
    If forec_type = "ListeChamps" Then
        MenFLigCol = "ListeChamps"
    Else
        MenFLigCol = STR_GetChamp(v_MenForme, "#", 0)
        MenFPresentation = STR_GetChamp(v_MenForme, "#", 1)
        MenFToutesouNouNR = STR_GetChamp(v_MenForme, "#", 2)
        MenFNbOccur = STR_GetChamp(v_MenForme, "#", 3)
        MenFLesVal = STR_GetChamp(v_MenForme, "#", 4)
        MenFparRapport = STR_GetChamp(v_MenForme, "#", 5)
        MenFRepartition = STR_GetChamp(v_MenForme, "#", 6)
        
        If MenFLigCol = "" Then
            P_MettreChamp = False
            MsgBox "Mise en forme mal formatée"
        End If
    
        If MenFToutesouNouNR = "" Or MenFPresentation = "" Then
            If bEstListe Then
                MenFToutesouNouNR = "VALEUR"
            Else
                MenFToutesouNouNR = "NONVALEUR_R"
            End If
            If MenFPresentation = "" Then MenFPresentation = "NOMBRE"
            v_MenForme = MenFLigCol & "#" & MenFPresentation & "#"
            v_MenForme = v_MenForme & MenFToutesouNouNR & "#" & MenFNbOccur & "#"
            v_MenForme = v_MenForme & MenFLesVal & "#" & MenFparRapport
            tbl_fichExcel(i_tbl_fichExcel).CmdMenFormeChp = v_MenForme
        End If
    End If
    
    nbvaleurs = 0
    nbOccur = 0
    If forec_type <> "ListeChamps" Then
        If MenFNbOccur <> "*" Then
            If IsNumeric(nbOccur) Then
                nbOccur = MenFNbOccur
            End If
        End If
    End If
    If forec_type = "NOMBRE_TOTAL" Or bool_liste Or boolLstSpécial Or forec_type = "ListeChamps" Then
        If boolLstSpécial And BoolLstHierarchie Then
            If MenFLesVal = "*" Or MenFLesVal = "" Or UCase(MenFLesVal) = "TOUTES" Or MenFLesVal = "M0" Or MenFLesVal = "0" Then
                nbvaleurs = Repart_SelectionneTbEntite(nbOccur, "H", Liste_Num, "*", "*", i_tbl_fichExcel)
            Else
                nbvaleurs = Repart_SelectionneTbEntite(nbOccur, "H", Liste_Num, MenFLesVal, "*", i_tbl_fichExcel)
            End If
        ElseIf bool_liste Then
            If MenFLesVal <> "*" And MenFLesVal <> "" And MenFLesVal <> "TOUTES" Then
                nbvaleurs = Repart_SelectionneTbEntite(nbOccur, "L", Liste_Num, MenFLesVal, "*", i_tbl_fichExcel)
            Else
                nbvaleurs = Repart_SelectionneTbEntite(nbOccur, "L", Liste_Num, "*", "*", i_tbl_fichExcel)
            End If
        ElseIf boolLstSpécial And BoolLstService Then
            If MenFLesVal = "*" Or MenFLesVal = "" Or UCase(MenFLesVal) = "TOUTES" Or MenFLesVal = "0" Then
                nbvaleurs = Repart_SelectionneTbEntite(nbOccur, "S", 0, "*", "*", i_tbl_fichExcel)
            Else
                nbvaleurs = Repart_SelectionneTbEntite(nbOccur, "S", 0, MenFLesVal, "*", i_tbl_fichExcel)
            End If
        ElseIf boolLstSpécial And BoolLstFonction Then
            If MenFLesVal <> "" And MenFLesVal <> "*" And UCase(MenFLesVal) <> "TOUTES" Then
                nbvaleurs = Repart_SelectionneTbEntite(nbOccur, "F", 0, MenFLesVal, "*", i_tbl_fichExcel)
            Else
                nbvaleurs = Repart_SelectionneTbEntite(nbOccur, "F", 0, MenFLesVal, "*", i_tbl_fichExcel)
            End If
        ElseIf forec_type = "NOMBRE_TOTAL" Then
            nbvaleurs = 1
        ElseIf BoolEntier Or BoolMontant Then
            nbvaleurs = 1
        ElseIf BoolCalcul Then
            nbvaleurs = 1
        ElseIf BoolDate Then
            nbvaleurs = 5
        ElseIf forec_type = "ListeChamps" Then
            nbvaleurs = 1
        Else
            P_MettreChamp = False
            MsgBox "Mise en forme mal formatée"
        End If
        If nbvaleurs = 0 Then
            MsgBox "Pas de valeur pour MenFLesVal=" & MenFLesVal
            Exit Function
        End If
LabMettre:
        If p_dansExcel And Not (Exc_obj Is Nothing) Then
            Set exc_sheet = Exc_obj.Sheets(tbl_fenExcel(v_idgrid).FenNom)
            Call FindLastCell(v_idgrid, LaRowMax, LaColMax)
        End If
        If tbl_fenExcel(v_idgrid).FenRowMax > LaRowMax Then
            If tbl_fenExcel(v_idgrid).FenLoad Then
                LaRowMax = tbl_fenExcel(v_idgrid).FenRowMax
                grdCell(v_idgrid).Rows = LaRowMax + 1
            End If
        End If
        
        If tbl_fenExcel(v_idgrid).FenColMax > LaColMax Then
            If tbl_fenExcel(v_idgrid).FenLoad Then
                LaColMax = tbl_fenExcel(v_idgrid).FenColMax
                On Error Resume Next
                grdCell(v_idgrid).Cols = LaColMax + 1
            End If
        End If
        
        ' Colonne_Val # POURCENT # NONVALEUR_R # * #             #           ' pour Entier
        ' Colonne_Val # POURCENT # VALEUR_R    # 5 # 121;114;118 #           ' pour Liste
        ' *******************************************************
        ' chercher le nombre de valeurs à afficher (ou supprimer)
        '********************************************************
        If bPlusieursValeurs Then
            If MenFToutesouNouNR = "VALEUR" Or MenFToutesouNouNR = "VALEUR_SIGNIF" Then
                If MenFNbOccur <> "*" Then
                    If val(MenFNbOccur) < nbvaleurs Then
                        nbvaleurs = MenFNbOccur
                    End If
                End If
            ElseIf MenFToutesouNouNR = "NONVALEUR_R" Then
                nbvaleurs = 1
            ElseIf MenFToutesouNouNR = "NONVALEUR_NR" Then
                nbvaleurs = 1
            ElseIf MenFToutesouNouNR = "NOMBRE_TOTAL" Then
                nbvaleurs = 1
            Else
                MsgBox "Mise en forme mal formatée"
                P_MettreChamp = False
                MenFToutesouNouNR = "VALEUR_SIGNIF"
            End If
        Else
            nbvaleurs = 1
        End If
        
        If v_Trait = "Mettre" Then
            If forec_type = "ListeChamps" Then
                Le_Lib = "Liste de champs"
                If InStr(strListeChamp, "New") Then
                    Le_Lib = Le_Lib & " (Dans une autre fenêtre)"
                Else
                    Le_Lib = Le_Lib & " (Dans la même fenêtre)"
                End If
            Else
                If tbl_fichExcel(i_tbl_fichExcel).CmdChpNum <= -10 Then
                    If tbl_fichExcel(i_tbl_fichExcel).CmdChpSQL <> "" Then
                        If Mid(tbl_fichExcel(i_tbl_fichExcel).CmdChpSQL, 1, 4) = "SQL=" Then
                            boolSQL = True
                            Le_Lib = NomDuChamp
                            Le_LibDétail = NomDuChamp
                            La_Val = ""
                            La_ValDétail = NomDuChamp
                        Else
                            MsgBox "SQL incorrect : " & tbl_fichExcel(i_tbl_fichExcel).CmdChpSQL
                        End If
                    End If
                ElseIf bool_liste Then
                    Le_Lib = "[ENT_LIB]"
                    Le_LibDétail = NomDuChamp & " : Liste " & NomListe
                    La_Val = ""
                    La_ValDétail = "[ENT_LIB]"
                ElseIf boolLstSpécial And (BoolLstService Or BoolLstFonction Or BoolLstHierarchie) Then
                    Le_Lib = "[ENT_LIB]"
                    Le_LibDétail = "[ENT_LIB]"
                    La_Val = "[ENT_LIB]"
                    La_ValDétail = ""
                ElseIf tbl_fichExcel(i_tbl_fichExcel).CmdType = "RES" Then
                    NomDuChamp = "Champ du Rapport : " & STR_GetChamp(tbl_fichExcel(i_tbl_fichExcel).CmdChpRelierà, "=", 1)
                    Le_Lib = NomDuChamp
                    Le_LibDétail = NomDuChamp
                    La_Val = ""
                    La_ValDétail = NomDuChamp
                Else
                    Le_Lib = NomDuChamp
                    Le_LibDétail = NomDuChamp
                    La_Val = ""
                    La_ValDétail = NomDuChamp
                End If
                
                If MenFToutesouNouNR = "" Then MenFToutesouNouNR = "NONVALEUR_R"
                If tbl_fichExcel(i_tbl_fichExcel).CmdType = "RES" Then
                    LibPortee = ""
                ElseIf MenFToutesouNouNR = "VALEUR" Or MenFToutesouNouNR = "VALEUR_SIGNIF" Then
                    If MenFLesVal = "" Or MenFLesVal = "TOUTES" Or MenFLesVal = "0" Then
                        LibPortee = "Détail de toutes les valeurs"
                    Else
                        LibPortee = "Détail pour " & nbvaleurs & " valeurs"
                    End If
                ElseIf MenFToutesouNouNR = "NONVALEUR_R" Then
                    LibPortee = "les valeurs de " & NomDuChamp & " renseignées seulement"
                ElseIf MenFToutesouNouNR = "NONVALEUR_NR" Then
                    LibPortee = "les valeurs de " & NomDuChamp & " non renseignées seulement"
                ElseIf MenFToutesouNouNR = "NOMBRE_TOTAL" Then
                    LibPortee = "Nombre total de Fiches pour ce filtre"
                Else
                    P_MettreChamp = False
                    MsgBox "Mise en forme mal formatée"
                End If
                
                If MenFPresentation = "" Then MenFPresentation = "NOMBRE"
                If tbl_fichExcel(i_tbl_fichExcel).CmdType = "RES" Then
                ElseIf MenFPresentation = "TOTAL" Then
                    Le_LibDétail = Le_LibDétail & " (le Total)"
                ElseIf MenFPresentation = "ECART_TYPE" Then
                    Le_LibDétail = Le_LibDétail & " (écart type)"
                ElseIf MenFPresentation = "NOMBRE" Then
                    Le_LibDétail = Le_LibDétail & " (le nombre)"
                ElseIf MenFPresentation = "POURCENT" Then
                    Le_LibDétail = Le_LibDétail & " (en Pourcentage)"
                ElseIf MenFPresentation = "SOMME" Then
                    Le_LibDétail = Le_LibDétail & " (la Somme)"
                ElseIf MenFPresentation = "MOYENNE" Then
                    Le_LibDétail = Le_LibDétail & " (la Moyenne)"
                Else
                    P_MettreChamp = False
                    MsgBox "Mise en forme mal formatée"
                    Le_Lib = "?"
                End If
                
                If MenFLigCol = "" Then MenFLigCol = "Ligne_Lib_Val"
                If tbl_fichExcel(i_tbl_fichExcel).CmdType = "RES" Then
                ElseIf MenFLigCol = "Ligne_Lib" Then
                    Le_LibDétail = Le_LibDétail & " (en ligne : le Libellé)"
                ElseIf MenFLigCol = "Ligne_Val" Then
                    Le_LibDétail = Le_LibDétail & " (en ligne : la Valeur)"
                ElseIf MenFLigCol = "Ligne_Lib_Val" Then
                    Le_LibDétail = Le_LibDétail & " (en ligne : le Libellé et la Valeur)"
                ElseIf MenFLigCol = "Colonne_Lib" Then
                    Le_LibDétail = Le_LibDétail & " (en colonne : le Libellé et la Valeur)"
                ElseIf MenFLigCol = "Colonne_Val" Then
                    Le_LibDétail = Le_LibDétail & " (en colonne : le Libellé et la Valeur)"
                ElseIf MenFLigCol = "Colonne_Lib_Val" Then
                    Le_LibDétail = Le_LibDétail & " (en colonne : le Libellé et la Valeur)"
                Else
                    P_MettreChamp = False
                    MsgBox "Mise en forme mal formatée"
                End If
                
                If MenFparRapport = "" Then
                ElseIf MenFparRapport = "TOUTES" Then
                    LibPortee = LibPortee & " par rapport à Toutes les valeurs"
                ElseIf MenFparRapport = "AUX_R" Then
                    LibPortee = LibPortee & " par rapport aux valeurs renseignées seulement"
                Else
                    P_MettreChamp = False
                    MsgBox "Mise en forme mal formatée"
                End If
            End If
            If (MenFLigCol = "Colonne_Lib" Or MenFLigCol = "Colonne_Val" Or MenFLigCol = "Colonne_Lib_Val") Then
                If forec_type = "ListeChamps" Then
                    leYCible = v_leY
                ElseIf nbvaleurs = 1 Then
                    ' on en met qu'une seule
                    leYCible = v_leY
                Else
                    If BoolLstService Or BoolLstHierarchie Or bool_liste Or BoolLstFonction Then
                        ' on en met 10 maxi.
                        If nbvaleurs > 10 Then
                            nbvaleurs = 10
                        End If
                    End If
                    leYCible = v_leY + nbvaleurs - 1
                    If leYCible > grdCell(v_idgrid).Rows - 1 Then ' Len(Public_Alpha) Then
                        leYCible = grdCell(v_idgrid).Rows - 1
                    End If
                End If
                'en Colonne : IMG_FL_BAS
                iNbOccur = 0
                tbl_fichExcel(i_tbl_fichExcel).CmdX_Debut = v_lex
                tbl_fichExcel(i_tbl_fichExcel).CmdY_Debut = v_leY
                tbl_fichExcel(i_tbl_fichExcel).CmdX_Fin = v_lex
                tbl_fichExcel(i_tbl_fichExcel).CmdY_Fin = v_leY
                Dim tbVals() As Variant
                If bool_liste Then
                    tbVals = Repart_RecupChampTbEntite("L", Liste_Num, "EntiteLib;EntiteNum", False, nbvaleurs, i_tbl_fichExcel)
                ElseIf boolLstSpécial And BoolLstService Then
                    tbVals = Repart_RecupChampTbEntite("S", 0, "EntiteLib;EntiteNum", True, nbvaleurs, i_tbl_fichExcel)
                ElseIf boolLstSpécial And BoolLstFonction Then
                    tbVals = Repart_RecupChampTbEntite("F", 0, "EntiteLib;EntiteNum", False, nbvaleurs, i_tbl_fichExcel)
                ElseIf boolLstSpécial And BoolLstHierarchie Then
                    tbVals = Repart_RecupChampTbEntite("H", Liste_Num, "EntiteLib;EntiteNum", True, nbvaleurs, i_tbl_fichExcel)
                End If
                
                For row = v_leY To leYCible
                    If MenFNbOccur <> "*" Then
                        ' voir le nombre d'occurences
                        If iNbOccur = val(MenFNbOccur) Then
                            Exit For
                        End If
                    End If
                    tmp_La_ValDétail = ""
                    If bool_liste Then
                        tmp_Le_Lib = Replace(Le_Lib, "[ENT_LIB]", tbVals(0, iNbOccur))
                        tmp_Le_LibDétail = Le_LibDétail
                        tmp_La_ValDétail = Replace(La_ValDétail, "[ENT_LIB]", tbVals(0, iNbOccur))
                        tmp_La_Val = Replace(La_Val, "[ENT_LIB]", tbVals(0, iNbOccur))
                    ElseIf boolLstSpécial And (BoolLstService Or BoolLstFonction Or BoolLstHierarchie) Then
                        If BoolLstService Then
                            s = "Tous les services"
                        ElseIf BoolLstFonction Then
                            s = "Toutes les fonctions"
                        ElseIf BoolLstHierarchie Then
                            s = "Toutes les valeurs"
                        End If
                        If iNbOccur = 0 And (MenFLesVal = "" Or UCase(MenFLesVal) = "TOUTES" Or MenFLesVal = "M0" Or MenFLesVal = "0") Then
                            tmp_Le_Lib = Replace(Le_Lib, "[ENT_LIB]", s)
                        Else
                            tmp_Le_Lib = Replace(Le_Lib, "[ENT_LIB]", tbVals(0, iNbOccur))
                        End If
                        tmp_Le_LibDétail = Replace(Le_LibDétail, "[ENT_LIB]", tbVals(0, iNbOccur))
                        tmp_La_ValDétail = ""
                        tmp_La_Val = Replace(La_Val, "[ENT_LIB]", tbVals(0, iNbOccur))
                    Else
                        tmp_Le_Lib = Le_Lib
                        tmp_Le_LibDétail = Le_LibDétail
                        tmp_La_ValDétail = La_ValDétail
                    End If
                    
                    If (v_lex + 1) > LaColMax Then
                        ' pas assez de colonnes
                        tbl_fenExcel(v_idgrid).FenColMax = v_lex + 2
                        tbl_fenExcel(v_idgrid).FenModif = True
                        BoolFaireSauveFenetre = True
                        p_ListeRafraichirFenetre = v_idgrid
                        Exit For
                    End If
                    
                    grdCell(v_idgrid).col = v_lex
                    If row > LaRowMax Then
                        If leYCible > tbl_fenExcel(v_idgrid).FenRowMax Then
                            tbl_fenExcel(v_idgrid).FenRowMax = leYCible
                            tbl_fenExcel(v_idgrid).FenModif = True
                            BoolFaireSauveFenetre = True
                            p_ListeRafraichirFenetre = v_idgrid
                            Call verifSiSauve
                            Exit For
                        End If
                    End If
                    grdCell(v_idgrid).row = row
                    If row = v_leY Then
                        Padd = Padd1
                        If tbl_fichExcel(i_tbl_fichExcel).CmdFormNum = p_numfiltre_encours And tbl_fichExcel(i_tbl_fichExcel).CmdFormIndice = p_numindice_encours Then
                            If tbl_fichExcel(i_tbl_fichExcel).CmdCondition <> "" Then
                                Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULEBF_PLUS).Picture
                            Else
                                Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULEBF).Picture
                            End If
                        Else
                            If tbl_fichExcel(i_tbl_fichExcel).CmdCondition <> "" Then
                                Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULEBC_PLUS).Picture
                            Else
                                Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULEBC).Picture
                            End If
                        End If
                        XPère = v_lex
                        YPère = row
                    Else
                        Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULE).Picture
                        Padd = Padd2
                    End If
                    If (MenFLigCol = "Colonne_Lib_Val") Then  'Colonne_Lib_Val
                        grdCell(v_idgrid).col = v_lex + 1
                        grdCell(v_idgrid).row = row
                        Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULE).Picture
                        tbl_fichExcel(i_tbl_fichExcel).CmdX_Fin = v_lex + 1
                        tbl_fichExcel(i_tbl_fichExcel).CmdY_Fin = row
                    Else
                        tbl_fichExcel(i_tbl_fichExcel).CmdX_Fin = v_lex
                        tbl_fichExcel(i_tbl_fichExcel).CmdY_Fin = row
                    End If
                    If (MenFLigCol = "Colonne_Lib") Then
                        NomCellDest = FctFaitNomCellDest(v_lex, row)
                        If p_dansExcel Then exc_sheet.Range(NomCellDest).Value = tmp_Le_Lib
                        grdCell(v_idgrid).TextMatrix(row, v_lex) = Padd & tmp_Le_Lib
                        If p_dansGrid Then MetTag v_idgrid, v_lex, row, "Lib", LibPortee, tmp_Le_LibDétail & " " & tmp_La_ValDétail, XPère, YPère
                    ElseIf (MenFLigCol = "Colonne_Val") Then
                        NomCellDest = FctFaitNomCellDest(v_lex, row)
                        If p_dansExcel Then exc_sheet.Range(NomCellDest).Value = La_Val
                        grdCell(v_idgrid).TextMatrix(row, v_lex) = ""
                        If p_ModeAssistant Then
                            grdCell(v_idgrid).TextMatrix(v_leY + 1, col) = ""
                            If p_dansExcel Then exc_sheet.Range(NomCellDest).Value = ""
                        End If
                        If p_dansGrid Then MetTag v_idgrid, v_lex, row, "Val", LibPortee, tmp_Le_LibDétail & " " & tmp_La_ValDétail, XPère, YPère
                    ElseIf (MenFLigCol = "Colonne_Lib_Val") Then
                        NomCellDest = FctFaitNomCellDest(v_lex, row)
                        If p_dansExcel Then exc_sheet.Range(NomCellDest).Value = tmp_Le_Lib
                        grdCell(v_idgrid).TextMatrix(row, v_lex) = Padd & tmp_Le_Lib
                        If p_dansGrid Then MetTag v_idgrid, v_lex, row, "Lib", LibPortee, tmp_Le_LibDétail & " " & tmp_La_ValDétail, XPère, YPère
                        NomCellDest = FctFaitNomCellDest((v_lex + 1), row)
                        If p_dansExcel Then exc_sheet.Range(NomCellDest).Value = ""
                        grdCell(v_idgrid).TextMatrix(row, v_lex + 1) = ""
                        If p_ModeAssistant Then
                            grdCell(v_idgrid).TextMatrix(v_leY + 1, col) = ""
                            If p_dansExcel Then exc_sheet.Range(NomCellDest).Value = ""
                        End If
                        If p_dansGrid Then MetTag v_idgrid, v_lex + 1, row, "Val", LibPortee, tmp_Le_LibDétail & " " & tmp_La_ValDétail, XPère, YPère
                    End If
                    If bEstListe Then
                        If MenFToutesouNouNR = "NONVALEUR_R" Or MenFToutesouNouNR = "NONVALEUR_NR" Then
                            Exit For        ' on ne veut qu'une seule valeur (NOMBRE ou POURCENT)
                        Else
                            ' pour voir le nombre d'occurences
                            If iNbOccur > nbvaleurs Then
                                Exit For
                            End If
                            iNbOccur = iNbOccur + 1
                        End If
                    Else
                        Exit For
                    End If
                Next row
            End If
            If forec_type = "ListeChamps" Or (MenFLigCol = "Ligne_Lib" Or MenFLigCol = "Ligne_Val" Or MenFLigCol = "Ligne_Lib_Val") Then  'en Ligne
                If nbvaleurs = "" Then nbvaleurs = "0"
                If BoolLstService Or bool_liste Or BoolLstFonction Or BoolLstHierarchie Then
                    ' on en met 10 maxi.
                    If nbvaleurs > 10 Then
                        nbvaleurs = 10
                    End If
                ElseIf BoolDate Then
                    nbvaleurs = 5
                End If
                If forec_type = "ListeChamps" Then
                    leXCible = v_lex
                ElseIf nbvaleurs = 1 Then
                    ' on en met qu'une seule
                    leXCible = v_lex
                Else
                    leXCible = v_lex + nbvaleurs - 1
                    If leXCible > Len(Public_Alpha) Then
                        leXCible = Len(Public_Alpha)
                    End If
                End If
                
                If forec_type = "ListeChamps" Then
                    MenFNbOccur = "*"
                End If
                
                iNbOccur = 0
                
                If tbl_fichExcel(i_tbl_fichExcel).CmdChpRelierà <> "" Then
                    Le_LibDétail = Le_LibDétail & Chr(13) & Chr(10) & " Champs Relié à un autre en " & tbl_fichExcel(i_tbl_fichExcel).CmdChpRelierà
                End If
                If bool_liste Then
                    tbVals = Repart_RecupChampTbEntite("L", Liste_Num, "EntiteLib;EntiteNum", False, nbvaleurs, i_tbl_fichExcel)
                ElseIf boolLstSpécial And BoolLstService Then
                    tbVals = Repart_RecupChampTbEntite("S", 0, "EntiteLib;EntiteNum", True, nbvaleurs, i_tbl_fichExcel)
                ElseIf boolLstSpécial And BoolLstFonction Then
                    tbVals = Repart_RecupChampTbEntite("F", 0, "EntiteLib;EntiteNum", False, nbvaleurs, i_tbl_fichExcel)
                ElseIf boolLstSpécial And BoolLstHierarchie Then
                    tbVals = Repart_RecupChampTbEntite("H", Liste_Num, "EntiteLib;EntiteNum", True, nbvaleurs, i_tbl_fichExcel)
                End If
                
                tbl_fichExcel(i_tbl_fichExcel).CmdX_Debut = v_lex
                tbl_fichExcel(i_tbl_fichExcel).CmdY_Debut = v_leY
                tbl_fichExcel(i_tbl_fichExcel).CmdX_Fin = v_lex
                tbl_fichExcel(i_tbl_fichExcel).CmdY_Fin = v_leY
                For col = v_lex To leXCible 'v_leX + rs.RowCount
                    If MenFNbOccur <> "*" Then
                        ' voir le nombre d'occurences
                        If iNbOccur = val(MenFNbOccur) Then
                            Exit For
                        End If
                    End If
                    ' controle du nombre de colonnes
                    tmp_La_ValDétail = ""
                    If bool_liste Then
                        tmp_Le_Lib = Replace(Le_Lib, "[ENT_LIB]", tbVals(0, iNbOccur))
                        tmp_Le_LibDétail = Le_LibDétail
                        tmp_La_ValDétail = Replace(La_ValDétail, "[ENT_LIB]", tbVals(0, iNbOccur))
                        tmp_La_Val = Replace(La_Val, "[ENT_LIB]", tbVals(0, iNbOccur))
                    ElseIf boolLstSpécial And (BoolLstService Or BoolLstFonction Or BoolLstHierarchie) Then
                        If BoolLstService Then
                            s = "Tous les services"
                        ElseIf BoolLstFonction Then
                            s = "Toutes les fonctions"
                        ElseIf BoolLstHierarchie Then
                            s = "Toutes les valeurs"
                        End If
                        If iNbOccur = 0 And (MenFLesVal = "" Or UCase(MenFLesVal) = "TOUTES" Or MenFLesVal = "M0" Or MenFLesVal = "0") Then
                            tmp_Le_Lib = Replace(Le_Lib, "[ENT_LIB]", s)
                        Else
                            tmp_Le_Lib = Replace(Le_Lib, "[ENT_LIB]", tbVals(0, iNbOccur))
                        End If
                        tmp_Le_LibDétail = Replace(Le_LibDétail, "[ENT_LIB]", tbVals(0, iNbOccur))
                        tmp_La_ValDétail = ""
                        tmp_La_Val = Replace(La_Val, "[ENT_LIB]", tbVals(0, iNbOccur))
                    ElseIf forec_type = "ListeChamps" Then
                    ElseIf boolSQL Then
                    ElseIf BoolDate Then
                        If MenFRepartition = "J" Then
                            tmp_Le_LibDétail = Le_Lib & " Répartition par jour calendaire"
                            tmp_Le_Lib = "J. " & iNbOccur
                        ElseIf MenFRepartition = "S" Then
                            tmp_Le_LibDétail = Le_Lib & " Répartition par semaine"
                            tmp_Le_Lib = "Sem. " & iNbOccur
                        ElseIf MenFRepartition = "T" Then
                            tmp_Le_LibDétail = Le_Lib & " Répartition par trimestre"
                            tmp_Le_Lib = "Sem. " & iNbOccur
                        ElseIf MenFRepartition = "M" Then
                            tmp_Le_LibDétail = Le_Lib & " Répartition par mois"
                            tmp_Le_Lib = "Mois " & iNbOccur
                        ElseIf MenFRepartition = "A" Then
                            tmp_Le_LibDétail = Le_Lib & " Répartition par année"
                            tmp_Le_Lib = "Année " & iNbOccur
                        End If
                        If iNbOccur = 0 Then
                            tmp_Le_Lib = Le_Lib
                        End If
                        tmp_La_ValDétail = La_ValDétail
                    ElseIf forec_type = "NOMBRE_TOTAL" Then
                        tmp_Le_LibDétail = "Nombre de Fiches"
                        tmp_Le_Lib = "Nombre de Fiches"
                    Else
                        tmp_Le_Lib = Le_Lib
                        tmp_Le_LibDétail = Le_LibDétail
                        tmp_La_ValDétail = La_ValDétail
                    End If
                    
                    If (v_leY + 1) > LaRowMax Then
                        ' pas assez de lignes
                        tbl_fenExcel(v_idgrid).FenRowMax = v_leY + 2
                        tbl_fenExcel(v_idgrid).FenModif = True
                        BoolFaireSauveFenetre = True
                        p_ListeRafraichirFenetre = v_idgrid
                        Exit For
                    End If
                    
                    If col > LaColMax Then
                        If leXCible > tbl_fenExcel(v_idgrid).FenColMax Then
                            tbl_fenExcel(v_idgrid).FenColMax = leXCible
                            tbl_fenExcel(v_idgrid).FenModif = True
                            BoolFaireSauveFenetre = True
                            p_ListeRafraichirFenetre = v_idgrid
                            p_ListeRafraichirTropX = leXCible - LaColMax
                            If Not p_ModeAssistant Then ' sinon on raffraichira plus tard
                                Call verifSiSauve
                                Exit For
                            End If
                        End If
                    End If
                    
                    If v_leY + 1 >= grdCell(v_idgrid).Rows Then GoTo Fin
                    
                    If p_ListeRafraichirTropX = 0 Then
                        grdCell(v_idgrid).col = col
                        
                        grdCell(v_idgrid).row = v_leY
                        If col = v_lex Then
                            Padd = Padd1
                            If tbl_fichExcel(i_tbl_fichExcel).CmdFormNum = p_numfiltre_encours And tbl_fichExcel(i_tbl_fichExcel).CmdFormIndice = p_numindice_encours Then
                                If forec_type = "ListeChamps" Then
                                    If InStr(tbl_fichExcel(i_tbl_fichExcel).cmdTypeChp, "Ici") > 0 Then
                                        Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_CHP_LOUPEB).Picture
                                    Else
                                        Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_CHP_LOUPER).Picture
                                    End If
                                Else
                                    If boolSQL Then
                                        If tbl_fichExcel(i_tbl_fichExcel).CmdCondition <> "" Then
                                            Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_SQL_SELECT_FPLUS).Picture
                                        Else
                                            Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_SQL_SELECT_F).Picture
                                        End If
                                    ElseIf tbl_fichExcel(i_tbl_fichExcel).CmdCondition <> "" Then
                                        Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULEBF_PLUS).Picture
                                    Else
                                        Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULEBF).Picture
                                    End If
                                End If
                            Else
                                If forec_type = "ListeChamps" Then
                                    If InStr(tbl_fichExcel(i_tbl_fichExcel).cmdTypeChp, "Ici") > 0 Then
                                        Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_CHP_LOUPEB).Picture
                                    Else
                                        Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_CHP_LOUPER).Picture
                                    End If
                                Else
                                    If boolSQL Then
                                        If tbl_fichExcel(i_tbl_fichExcel).CmdCondition <> "" Then
                                            Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_SQL_SELECT_CPLUS).Picture
                                        Else
                                            Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_SQL_SELECT_C).Picture
                                        End If
                                    ElseIf tbl_fichExcel(i_tbl_fichExcel).CmdCondition <> "" Then
                                        Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULEBC_PLUS).Picture
                                    Else
                                        Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULEBC).Picture
                                    End If
                                End If
                            End If
                            XPère = col
                            YPère = v_leY
                        Else
                            Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULE).Picture
                            Padd = Padd2
                        End If
                        If v_leY + 1 >= grdCell(v_idgrid).Rows Then GoTo Fin
                        If (MenFLigCol = "Ligne_Lib_Val") Then
                            grdCell(v_idgrid).col = col
                            grdCell(v_idgrid).row = v_leY + 1
                            Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULE).Picture
                        End If
                        
                        If (MenFLigCol = "Ligne_Lib") Then
                            tbl_fichExcel(i_tbl_fichExcel).CmdX_Fin = col
                            tbl_fichExcel(i_tbl_fichExcel).CmdY_Fin = v_leY
                            NomCellDest = FctFaitNomCellDest(col, v_leY)
                            If p_dansExcel Then exc_sheet.Range(NomCellDest).Value = tmp_Le_Lib
                            grdCell(v_idgrid).TextMatrix(v_leY, col) = Padd1 & tmp_Le_Lib
                            If p_dansGrid Then MetTag v_idgrid, col, v_leY, "Lib", LibPortee, tmp_Le_LibDétail & " " & tmp_La_ValDétail, XPère, YPère
                        ElseIf (MenFLigCol = "Ligne_Val") Then
                            tbl_fichExcel(i_tbl_fichExcel).CmdX_Fin = col
                            tbl_fichExcel(i_tbl_fichExcel).CmdY_Fin = v_leY
                            NomCellDest = FctFaitNomCellDest(col, v_leY)
                            If p_dansExcel Then exc_sheet.Range(NomCellDest).Value = ""
                            grdCell(v_idgrid).TextMatrix(v_leY, col) = ""
                            If p_ModeAssistant Then
                                grdCell(v_idgrid).TextMatrix(v_leY + 1, col) = ""
                                If p_dansExcel Then exc_sheet.Range(NomCellDest).Value = ""
                            End If
                            If p_dansGrid Then MetTag v_idgrid, col, v_leY, "Val", LibPortee, tmp_Le_LibDétail & " " & tmp_La_ValDétail, XPère, YPère
                        ElseIf (MenFLigCol = "Ligne_Lib_Val") Then
                            tbl_fichExcel(i_tbl_fichExcel).CmdX_Fin = col
                            tbl_fichExcel(i_tbl_fichExcel).CmdY_Fin = v_leY + 1
                            NomCellDest = FctFaitNomCellDest(col, v_leY)
                            If p_dansExcel Then exc_sheet.Range(NomCellDest).Value = tmp_Le_Lib
                            grdCell(v_idgrid).TextMatrix(v_leY, col) = Padd1 & tmp_Le_Lib
                            If p_dansGrid Then MetTag v_idgrid, col, v_leY, "Lib", LibPortee, tmp_Le_LibDétail & " " & tmp_La_ValDétail, XPère, YPère
                            NomCellDest = FctFaitNomCellDest(col, v_leY + 1)
                            If p_dansExcel Then exc_sheet.Range(NomCellDest).Value = ""
                            grdCell(v_idgrid).TextMatrix(v_leY + 1, col) = ""
                            If p_ModeAssistant Then
                                grdCell(v_idgrid).TextMatrix(v_leY + 1, col) = ""
                                If p_dansExcel Then exc_sheet.Range(NomCellDest).Value = ""
                            End If
                            If p_dansGrid Then MetTag v_idgrid, col, v_leY + 1, "Val", LibPortee, tmp_Le_LibDétail & " " & tmp_La_ValDétail, XPère, YPère
                        ElseIf forec_type = "ListeChamps" Then
                        Else
                            P_MettreChamp = False
                            MsgBox "Mise en forme mal formatée"
                        End If
                    End If
                    If forec_type = "ListeChamps" Then
                        Exit For
                    Else
                        If tbl_fichExcel(i_tbl_fichExcel).CmdChpRelierà <> "" Then
                            Exit For
                        ElseIf bEstListe Then
                            ' pour voir le nombre d'occurences
                            If iNbOccur > nbvaleurs Then
                                Exit For
                            End If
                            iNbOccur = iNbOccur + 1
                        ElseIf BoolDate Then
                            ' pour voir le nombre d'occurences
                            If iNbOccur > nbvaleurs Then
                                Exit For
                            End If
                            iNbOccur = iNbOccur + 1
                        Else
                            Exit For
                        End If
                    End If
                Next col
            End If
        End If
    End If
Fin:
    p_bfaire_RowColChange = ANC_bfaire_RowColChange

End Function

Public Function Repart_Chercher_Entite(ByVal EntType, ByVal EntNum, ByVal iChpNum)
    Dim UB As Integer
    Dim ie As Integer

Debut:
    On Error GoTo Erreur
    UB = UBound(tbl_LesListes_Entites)
    On Error GoTo 0
Cherche:
    For ie = 0 To UB
        If EntType = "D" Then
            If tbl_LesListes_Entites(ie).EntPDates = EntNum Then
                Repart_Chercher_Entite = ie
                Exit Function
            End If
        Else
            If tbl_LesListes_Entites(ie).EntPNum = EntNum And tbl_LesListes_Entites(ie).EntPType = EntType And tbl_LesListes_Entites(ie).EntiChpNum = iChpNum Then
                Repart_Chercher_Entite = ie
                Exit Function
            End If
        End If
    Next ie
    Repart_Chercher_Entite = -1
    Exit Function
Erreur:
    ReDim Preserve tbl_LesListes_Entites(0)
    GoTo Debut
End Function

Public Function Repart_RecupChampTbEntite(ByVal EntType, ByVal EntPNum, ByVal StrVeutChp, ByVal Decaler As Boolean, ByVal nbOccurences, ByVal iChpNum As Integer)
    ' Pour obtenir un tableau de ceux que l'on veut
    Dim tbEntExtraites()
    Dim tbRes()
    Dim tbChp(), i As Integer, s As String
    Dim nbchp As Integer
    Dim ub1 As Integer, ub2 As Integer
    Dim UBE As Integer
    Dim iEntPNum As Integer
    Dim premier As Boolean
    Dim Decalage As Integer
    Dim MaxNiveau As Integer
Debut:
    iEntPNum = Repart_Chercher_Entite(EntType, EntPNum, iChpNum)
    
    If Decaler Then
        MaxNiveau = 99
        ' Déterminer le plus grand niveau pour le décalage
        For UBE = 0 To UBound(tbl_LesListes_Entites(iEntPNum).EntPEntites)
            If tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFRetenue Then
                If tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFNiveau < MaxNiveau Then
                    MaxNiveau = tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFNiveau
                End If
            End If
        Next UBE
    End If
    nbchp = STR_GetNbchamp(StrVeutChp, ";")
    premier = True
    ub1 = nbchp
    Erase tbRes
    ub2 = 0
    For UBE = 0 To UBound(tbl_LesListes_Entites(iEntPNum).EntPEntites)
        If tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFRetenue Then
            If premier Then
                ub2 = 0
                premier = False
            Else
                ub2 = UBound(tbRes, 2) + 1
            End If
            ReDim Preserve tbRes(ub1, ub2)
            For i = 0 To nbchp - 1
                s = STR_GetChamp(StrVeutChp, ";", i)
                If s <> "" Then
                    If s = "EntiteLib" Then
                        s = IIf(tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFLibCourt <> "", tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFLibCourt, tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFLibLong)
                        If Decaler Then
                            s = Space((tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFNiveau - MaxNiveau) * 2) & s
                        End If
                    ElseIf s = "EntiteNum" Then
                        s = tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFNum
                    ElseIf s = "EntiteLibCourt" Then
                        s = tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFLibCourt
                    Else
                        MsgBox "Repart_RecupChampTbEntite " & s & " non prévu"
                    End If
                    tbRes(i, ub2) = s
                End If
            Next i
            ub2 = ub2 + 1
        End If
    Next UBE
    Repart_RecupChampTbEntite = tbRes
End Function

Public Function Repart_MenFormeCndEntite(ByRef nbOccur As Integer, ByVal EntType, ByVal EntPNum, ByVal iChpNum, ByVal VeutNiveau As String) As String
    ' permet de mettre en forme la condition pour ne conserver que les entités souhaitées
    ' pour la partie gauche et les répartitions

    Dim Chp_ForecNum As String, Chp_ForecNom As String
    Dim Chp_MenForme As String, Chp_MenFNbValeur As String, Chp_MenFListeValeurs As String
    Dim Chp_MenFRepartDate As String
    Dim Chp_MenFSi As String, Chp_SQL As String
    Dim Chp_LstNum As String
    Dim tbRes()
    Dim sql As String
    Dim nb As Integer
    Dim ie As Integer
    Dim laVal As String
    
    Chp_ForecNum = CStr(tbl_fichExcel(iChpNum).CmdChpNum)
    If Chp_ForecNum < -10 Then
    Else
        Call Odbc_RecupVal("select forec_nom,forec_valeurs_possibles from formetapechp where forec_num=" & Chp_ForecNum, Chp_ForecNom, Chp_LstNum)
    End If
    Chp_MenForme = tbl_fichExcel(iChpNum).CmdMenFormeChp
    Chp_MenFSi = STR_GetChamp(Chp_MenForme, "#", 2)
    Chp_MenFNbValeur = STR_GetChamp(Chp_MenForme, "#", 3)
    Chp_MenFListeValeurs = STR_GetChamp(Chp_MenForme, "#", 4)
    If EntType = "D" Then
        Chp_MenFRepartDate = STR_GetChamp(Chp_MenForme, "#", 6)
        nbOccur = 0
    ElseIf EntType = "L" Then
        If Chp_MenFListeValeurs = "" Or Chp_MenFListeValeurs = "TOUTES" Then
            nbOccur = 0
        ElseIf Chp_MenFListeValeurs <> "" And Chp_MenFListeValeurs <> "TOUTES" Then
            nbOccur = STR_GetNbchamp(Chp_MenFListeValeurs, ";")
            Chp_MenFNbValeur = nbOccur
        End If
    End If
    If Chp_MenFListeValeurs = "0" Then
        Chp_MenFListeValeurs = "TOUTES"
    End If
    If Chp_MenFSi = "VALEUR_SIGNIF" Or Chp_MenFSi = "NONVALEUR_R" Then
        Chp_SQL = "(" & Chp_ForecNom & "!= '' And " & Chp_ForecNom & " IS NOT NULL [SQL])"
    ElseIf Chp_MenFSi = "NONVALEUR_NR" Then
        Chp_SQL = "(" & Chp_ForecNom & "= '' Or " & Chp_ForecNom & " IS NULL [SQL])"
    Else
        Chp_SQL = "true [SQL]"
    End If
    If Chp_MenFListeValeurs = "M0" Then ' Hiérarchie => Toutes
        Chp_MenFListeValeurs = "*"
        Chp_MenFNbValeur = "TOUTES"
    End If
    If Chp_MenFNbValeur = "TOUTES" Or Chp_MenFNbValeur = "*" Then
        nbOccur = 0
    Else
        nbOccur = Chp_MenFNbValeur
    End If
    nb = Repart_SelectionneTbEntite(nbOccur, EntType, EntPNum, Chp_MenFListeValeurs, VeutNiveau, iChpNum)
    If EntType = "D" Then
        tbRes = Repart_RecupChampTbEntite(EntType, EntPNum, "EntiteLibCourt", False, 0, iChpNum)
    Else
        tbRes = Repart_RecupChampTbEntite(EntType, EntPNum, "EntiteNum", False, 0, iChpNum)
    End If
'For ie = 0 To UBound(tbRes, 2)
'    Debug.Print tbRes(0, ie) & " " & tbRes(1, ie)
'Next ie
    If (Chp_MenFListeValeurs = "*" Or Chp_MenFListeValeurs = "" Or Chp_MenFListeValeurs = "TOUTES") And VeutNiveau = "*" And nbOccur = 0 Then
        Repart_MenFormeCndEntite = Replace(Chp_SQL, "[SQL]", "")
        If P_Faire_tbListeVals Then
            ReDim Preserve P_tbListeVals(P_UB_tbListeVals)
            P_tbListeVals(P_UB_tbListeVals).ListeNum = EntPNum
            P_tbListeVals(P_UB_tbListeVals).VC_Num = "*"
            P_UB_tbListeVals = P_UB_tbListeVals + 1
        End If
        nbOccur = nb
        Exit Function
    End If
    If nb <> nbOccur Then
        nbOccur = nb
    End If
    
    sql = ""
    If EntType = "H" Then
        sql = sql & Chp_ForecNom & " like '%M" & tbRes(0, 0) & ";%'"
    Else
        For ie = 0 To UBound(tbRes, 2)
            sql = sql & IIf(sql <> "", " Or ", "")
            If EntType = "S" Then
                sql = sql & Chp_ForecNom & " like '" & tbRes(0, ie) & "#%'"
                laVal = "S" & tbRes(0, ie)
            ElseIf EntType = "F" Then
                sql = sql & Chp_ForecNom & " like '" & tbRes(0, ie) & "#%'"
                laVal = "F" & tbRes(0, ie)
            ElseIf EntType = "L" Then
                sql = sql & Chp_ForecNom & " like '%V" & tbRes(0, ie) & ";%'"
                laVal = "V" & tbRes(0, ie)
            End If
            If P_Faire_tbListeVals Then
                ReDim Preserve P_tbListeVals(P_UB_tbListeVals)
                P_tbListeVals(P_UB_tbListeVals).ListeNum = EntPNum
                P_tbListeVals(P_UB_tbListeVals).VC_Num = laVal
                P_UB_tbListeVals = P_UB_tbListeVals + 1
            End If
        Next ie
    End If
    If sql <> "" Then
        Repart_MenFormeCndEntite = Replace(Chp_SQL, "[SQL]", " and (" & sql & ")")
    Else
        Repart_MenFormeCndEntite = Replace(Chp_SQL, "[SQL]", "")
    End If
End Function

Public Function Repart_SelectionneTbEntite(ByVal nbOccur As Integer, EntType, ByVal EntPNum, ByVal StrEntNum, ByVal VeutNiveau, ByVal iChpNum)
    ' Pour obtenir seulement celles que l'on veut garder
    Dim tbEntExtraites() As LISTE_ENTITE
    Dim UB As Integer, UBE As Integer
    Dim EntNum As String
    Dim i As Integer
    Dim ie As Integer, sE As String, s1E As String
    Dim jE As Integer
    Dim sep1 As String, sep2 As String
    Dim iEntPNum As Integer
    Dim ok As Boolean
    Dim niveauRet As Integer
    Dim nb As Integer
    
Debut:
    ' DATE => EntNum =>  Debut;Fin;S-M-T ...
    iEntPNum = Repart_Chercher_Entite(EntType, EntPNum, iChpNum)
    If iEntPNum = -1 Then
        ' la charger
        Call Repart_Charger_Entite(EntType, EntPNum, iChpNum)
        GoTo Debut
    Else
        If (StrEntNum = "*" Or StrEntNum = "" Or StrEntNum = "TOUTES") And VeutNiveau = "*" Then
            For UBE = 0 To UBound(tbl_LesListes_Entites(iEntPNum).EntPEntites)
                tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFRetenue = True
                nb = nb + 1
                If nbOccur > 0 And nb > nbOccur Then
                    Exit For
                End If
            Next UBE
            'nb = nb - 1
        Else
            sep1 = "|"
            sep2 = ";"
            If EntType = "F" Or EntType = "L" Then
                StrEntNum = Replace(StrEntNum, ";", sep1)
            End If
            If StrEntNum <> "*" And StrEntNum <> "" And StrEntNum <> "TOUTES" Then
                For UBE = 0 To UBound(tbl_LesListes_Entites(iEntPNum).EntPEntites)
                    tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFRetenue = False
                Next UBE
                For ie = 0 To STR_GetNbchamp(StrEntNum, sep1)
                    sE = STR_GetChamp(StrEntNum, sep1, ie)
                    If sE <> "" Then
                        If Mid(sE, Len(sE), 1) = sep2 Then
                            sE = Mid(sE, 1, Len(sE) - 1)
                        End If
                        s1E = STR_GetChamp(sE, sep2, STR_GetNbchamp(sE, sep2) - 1)
                        s1E = Replace(s1E, "S", "")
                        s1E = Replace(s1E, "M", "")
                        ' il faut que ce soit un fils de ce que l'on recherche ET du bon niveau
                        For UB = 0 To UBound(tbl_LesListes_Entites(iEntPNum).EntPEntites)
                            If s1E = tbl_LesListes_Entites(iEntPNum).EntPEntites(UB).EntFNum Then
                                tbl_LesListes_Entites(iEntPNum).EntPEntites(UB).EntFRetenue = True
                                nb = nb + 1
                                If EntType = "H" Or EntType = "S" Then
                                    'Debug.Print UB & " " & tbl_LesListes_Entites(iEntPNum).EntPEntites(UB).EntFArbor
                                    niveauRet = tbl_LesListes_Entites(iEntPNum).EntPEntites(UB).EntFNiveau
                                    For UBE = UB + 1 To UBound(tbl_LesListes_Entites(iEntPNum).EntPEntites)
                                        If tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFNiveau > niveauRet Then
                                            'Debug.Print UBE & " " & tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFArbor
                                            tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFRetenue = True
                                            nb = nb + 1
                                        Else
                                            GoTo LabNextSE
                                        End If
                                    Next UBE
                                Else
                                    GoTo LabNextSE
                                End If
                            End If
                        Next UB
LabNextSE:
                    End If
                Next ie
LabFin:
            End If
            If VeutNiveau <> "*" Then
            End If
            If nbOccur > 0 And nb > nbOccur Then
                nb = 0
                For UBE = 0 To UBound(tbl_LesListes_Entites(iEntPNum).EntPEntites)
                    If tbl_LesListes_Entites(iEntPNum).EntPEntites(UBE).EntFRetenue Then
                        nb = nb + 1
                        If nb = nbOccur Then
                            For UB = UBE + 1 To UBound(tbl_LesListes_Entites(iEntPNum).EntPEntites)
                                tbl_LesListes_Entites(iEntPNum).EntPEntites(UB).EntFRetenue = False
                            Next UB
                        End If
                    End If
                Next UBE
            End If
        End If
    End If
    Repart_SelectionneTbEntite = nb
End Function

Public Function Repart_Charger_Entite(ByVal EntType, ByVal EntNum, ByVal iChpNum As Integer)
    Dim sep As String, strEnt As String
    Dim nb As Integer, i As Integer
    Dim strFils As String
    Dim sql As String
    Dim rs As rdoResultset
    Dim UB As Integer
    Dim UBE As Integer
    Dim k As Integer
    Dim ok As Boolean
    Dim niveau As Integer
    Dim premier As Boolean
    Dim NewArbor As String
    
Debut:
    If Repart_Chercher_Entite(EntType, EntNum, iChpNum) = -1 Then
        If EntType = "H" Or EntType = "D" Or EntType = "F" Or EntType = "L" Or EntType = "S" Then
            If EntType = "H" Then
                sql = "select * from lsthierarchp where lhc_num=" & EntNum
            ElseIf EntType = "L" Then
                sql = "select * from lstvalchp where lvc_num=" & EntNum
            ElseIf EntType = "F" Then
                sql = ""
            ElseIf EntType = "S" Then
                sql = ""
            ElseIf EntType = "D" Then
                sql = ""
            Else
                MsgBox "Repart_Charger_Entite Type " & EntType & " non prévu"
            End If
            If EntType = "H" Or EntType = "L" Then
                If Odbc_SelectV(sql, rs) = P_ERREUR Then
                    Repart_Charger_Entite = False
                    Exit Function
                End If
            End If
            If Not p_bool_tbl_LesListes_Entites Then
                UB = 0
            Else
                UB = UBound(tbl_LesListes_Entites) + 1
            End If
            ReDim Preserve tbl_LesListes_Entites(UB)
            If EntType = "H" Then
                tbl_LesListes_Entites(UB).EntPNum = rs("lhc_num")
                tbl_LesListes_Entites(UB).EntPNom = rs("lhc_nom")
                tbl_LesListes_Entites(UB).EntPType = EntType
            ElseIf EntType = "L" Then
                tbl_LesListes_Entites(UB).EntPNum = rs("lvc_num")
                tbl_LesListes_Entites(UB).EntPNom = rs("lvc_nom")
                tbl_LesListes_Entites(UB).EntPType = EntType
            ElseIf EntType = "S" Then
                tbl_LesListes_Entites(UB).EntPNum = "0"
                tbl_LesListes_Entites(UB).EntPNom = "services"
                tbl_LesListes_Entites(UB).EntPType = EntType
            ElseIf EntType = "F" Then
                tbl_LesListes_Entites(UB).EntPNum = "0"
                tbl_LesListes_Entites(UB).EntPNom = "Fonctions"
                tbl_LesListes_Entites(UB).EntPType = EntType
            ElseIf EntType = "D" Then
                tbl_LesListes_Entites(UB).EntPNum = "0"
                tbl_LesListes_Entites(UB).EntPDates = EntNum
                tbl_LesListes_Entites(UB).EntPNom = "Dates : " & EntNum
                tbl_LesListes_Entites(UB).EntPType = EntType
            End If
            tbl_LesListes_Entites(UB).EntiChpNum = iChpNum
            
            p_bool_tbl_LesListes_Entites = True
            UBE = 0
            ReDim Preserve tbl_LesListes_Entites(UB).EntPEntites(UBE)
            premier = True
            
            If EntType = "D" Then
                ' Répartition par
                Dim RepartPar As String
                Dim RepartDateD As String, RepartDateF As String
                Dim LaDate As Date
                Dim numR As String
                Dim strR As String
                Dim AncnumR As String
                Dim encore As Boolean
                Dim Année As String
                Dim ordre As Integer
                ' DATE => EntNum =>  Debut;Fin;S-M-T ...
                RepartPar = STR_GetChamp(EntNum, ";", 2)
                If RepartPar = "J" Then
                    strR = "Jour"
                ElseIf RepartPar = "S" Then
                    strR = "Semaine"
                ElseIf RepartPar = "M" Then
                    strR = "Mois"
                ElseIf RepartPar = "T" Then
                    strR = "Trimestre"
                ElseIf RepartPar = "A" Then
                    strR = "Année"
                End If
                RepartDateD = STR_GetChamp(EntNum, ";", 0)
                RepartDateF = STR_GetChamp(EntNum, ";", 1)
                If IsDate(RepartDateD) Then
                    LaDate = RepartDateD
                    encore = True
                    AncnumR = ""
                    ordre = 1
                    While encore
                        If RepartPar = "J" Then
                            numR = Repart_Calcul_NumJour(LaDate)
                        ElseIf RepartPar = "S" Then
                            numR = Repart_Calcul_NumSemaine(LaDate)
                        ElseIf RepartPar = "M" Then
                            numR = Repart_Calcul_NumMois(LaDate)
                        ElseIf RepartPar = "T" Then
                            numR = Repart_Calcul_NumTrimestre(LaDate)
                        ElseIf RepartPar = "A" Then
                            numR = Repart_Calcul_NumAnnée(LaDate)
                        End If
                        If Not premier Then
                            ok = True
                            For k = 0 To UBound(tbl_LesListes_Entites(UB).EntPEntites)
                                Année = Mid(LaDate, 7, 4)
                                If tbl_LesListes_Entites(UB).EntPEntites(k).EntFLibCourt = Année & "_" & RepartPar & "_" & numR Then
                                    ' y est déjà
                                    ok = False
                                    Exit For
                                End If
                            Next k
                        End If
                        If ok Then          ' numR <> AncnumR Then
                            If Not premier Then
                                UBE = UBound(tbl_LesListes_Entites(UB).EntPEntites) + 1
                                ReDim Preserve tbl_LesListes_Entites(UB).EntPEntites(UBE)
                            Else
                                premier = False
                            End If
                            Année = Mid(LaDate, 7, 4)
                            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibCourt = Année & "_" & RepartPar & "_" & numR
                            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibLong = strR & " " & numR
                            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNiveau = 0
                            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNum = numR
                            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNumPere = Année
                            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFOrdre = ordre
                            ordre = ordre + 1
                        End If
                        AncnumR = numR
                        LaDate = LaDate + 1
                        If LaDate > RepartDateF Then
                            encore = False
                        End If
                    Wend
                End If
                Exit Function
            End If
            
            If EntType = "H" Then
                sql = "select * from hierarvalchp where hvc_lhcnum= " & rs("lhc_num") & " and hvc_numpere=0 order by hvc_ordre"
            ElseIf EntType = "L" Then
                sql = "select * from valchp where vc_lvcnum= " & rs("lvc_num") & " order by vc_ordre"
            ElseIf EntType = "S" Then
                sql = "select * from service where srv_numpere=0 order by srv_nom"
            ElseIf EntType = "F" Then
                sql = "select * from fcttrav order by ft_libelle"
            End If
            If Odbc_SelectV(sql, rs) = P_ERREUR Then
                Repart_Charger_Entite = False
                Exit Function
            End If
            niveau = 1
            If Not rs.EOF Then
                Me.PgBar.Value = 0
                rs.MoveLast
                rs.MoveFirst
                Me.PgBar.max = rs.RowCount
                Me.PgBar.Visible = True
            End If
            While Not rs.EOF
                Me.PgBar.Value = IIf(Me.PgBar.Value + 1 > Me.PgBar.max, 1, Me.PgBar.Value + 1)
                If Not premier Then
                    UBE = UBound(tbl_LesListes_Entites(UB).EntPEntites) + 1
                    ReDim Preserve tbl_LesListes_Entites(UB).EntPEntites(UBE)
                Else
                    premier = False
                End If
                If EntType = "H" Then
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibCourt = ""
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibLong = rs("hvc_nom")
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNiveau = niveau
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNum = rs("hvc_num")
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNumPere = rs("hvc_numpere")
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFOrdre = rs("hvc_ordre")
                    NewArbor = rs("hvc_num") & ";"
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFArbor = NewArbor
                ElseIf EntType = "S" Then
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibCourt = rs("srv_libcourt")
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibLong = rs("srv_nom")
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNiveau = niveau
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNum = rs("srv_num")
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNumPere = rs("srv_numpere")
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNiveauSH = rs("srv_nivsnum")
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFOrdre = 0
                    NewArbor = rs("srv_num") & ";"
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFArbor = NewArbor
                ElseIf EntType = "F" Then
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibCourt = IIf(IsNull(rs("ft_code")), rs("ft_libelle"), rs("ft_code"))
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibLong = rs("ft_libelle")
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNiveau = niveau
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNum = rs("ft_num")
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNumPere = 0
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFOrdre = 0
                ElseIf EntType = "L" Then
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibCourt = rs("vc_libcourt")
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibLong = rs("vc_lib")
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNiveau = niveau
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNum = rs("vc_num")
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNumPere = 0
                    tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFOrdre = rs("vc_ordre")
                End If
                If EntType = "H" Then
                    ' Charger les fils
                    Call Repart_Charger_Entite_Fils(NewArbor, UB, EntType, rs("hvc_num"), niveau + 1)
                ElseIf EntType = "S" Then
                    ' Charger les fils
                    Call Repart_Charger_Entite_Fils(NewArbor, UB, EntType, rs("srv_num"), niveau + 1)
                End If
                rs.MoveNext
            Wend
            rs.Close
        End If
        'For UB = 0 To UBound(tbl_LesListes_Entites)
        '    Debug.Print tbl_LesListes_Entites(UB).EntPNom
        '    For UBE = 0 To UBound(tbl_LesListes_Entites(UB).EntPEntites)
        '        Debug.Print "  " & tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNiveau & " " & tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNum & ":" & tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNumPere & " " & tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibLong
        '    Next UBE
        'Next UB
    End If
End Function

Private Function Repart_Calcul_NumJour(ByVal LaDate As String)
    Dim FirstDayOfWeek As Integer
    
    FirstDayOfWeek = 2
    Repart_Calcul_NumJour = Weekday(LaDate, FirstDayOfWeek)
    'Repart_Calcul_NumJour = Weekday(LaDate)
End Function

Private Function Repart_Calcul_NumSemaine(ByVal LaDate As String)
    Repart_Calcul_NumSemaine = DatePart("ww", LaDate, vbMonday, vbFirstJan1)
    'Repart_Calcul_NumSemaine = val(Format(LaDate, "ww", vbMonday, vbFirstJan1))
    Repart_Calcul_NumSemaine = Format(Repart_Calcul_NumSemaine, "00")
End Function

Private Function Repart_Calcul_NumMois(ByVal LaDate As String)
    Repart_Calcul_NumMois = val(Format(LaDate, "mm"))
    Repart_Calcul_NumMois = Format(Repart_Calcul_NumMois, "00")
End Function

Private Function Repart_Calcul_NumAnnée(ByVal LaDate As String)
    Repart_Calcul_NumAnnée = val(Format(LaDate, "yyyy", vbMonday, vbFirstJan1))
    Repart_Calcul_NumAnnée = Format(Repart_Calcul_NumAnnée, "0000")
End Function

Private Function Repart_Calcul_NumTrimestre(ByVal LaDate As String)
    Dim s As String
    
    s = val(Format(LaDate, "mm"))
    If s >= 1 And s <= 3 Then
        Repart_Calcul_NumTrimestre = 1
    ElseIf s >= 4 And s <= 6 Then
        Repart_Calcul_NumTrimestre = 2
    ElseIf s >= 7 And s <= 9 Then
        Repart_Calcul_NumTrimestre = 3
    ElseIf s >= 10 And s <= 12 Then
        Repart_Calcul_NumTrimestre = 4
    End If
    Repart_Calcul_NumTrimestre = Format(Repart_Calcul_NumTrimestre, "0")
End Function

Public Function Repart_Charger_Entite_Fils(ByVal Arbor As String, UB As Integer, EntType, ByVal EntNum, ByRef niveau)
    Dim sql As String, rs As rdoResultset
    Dim UBE As Integer
    Dim NewArbor As String
    
    If EntType = "H" Then
        sql = "select * from hierarvalchp where hvc_numpere= " & EntNum & " order by hvc_ordre"
    ElseIf EntType = "S" Then
        sql = "select * from service where srv_numpere= " & EntNum & " order by srv_nom"
    End If
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Repart_Charger_Entite_Fils = False
        Exit Function
    End If
    While Not rs.EOF
        Me.PgBar.Value = IIf(Me.PgBar.Value + 1 > Me.PgBar.max, 1, Me.PgBar.Value + 1)
        UBE = UBound(tbl_LesListes_Entites(UB).EntPEntites) + 1
        ReDim Preserve tbl_LesListes_Entites(UB).EntPEntites(UBE)
        If EntType = "H" Then
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibCourt = ""
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibLong = rs("hvc_nom")
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNiveau = niveau
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNum = rs("hvc_num")
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNumPere = rs("hvc_numpere")
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFOrdre = rs("hvc_ordre")
            NewArbor = Arbor & rs("hvc_num") & ";"
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFArbor = NewArbor
        ElseIf EntType = "S" Then
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibCourt = rs("srv_libcourt")
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibLong = rs("srv_nom")
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNiveau = niveau
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNum = rs("srv_num")
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNumPere = rs("srv_numpere")
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNiveauSH = rs("srv_nivsnum")
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFOrdre = 0
            NewArbor = Arbor & rs("srv_num") & ";"
            tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFArbor = NewArbor
        End If
        ' Charger les fils
        'Debug.Print UBE & " " & tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFLibLong & " " & tbl_LesListes_Entites(UB).EntPEntites(UBE).EntFNiveau
        If EntType = "H" Then
            Call Repart_Charger_Entite_Fils(NewArbor, UB, EntType, rs("hvc_num"), niveau + 1)
        ElseIf EntType = "S" Then
            Call Repart_Charger_Entite_Fils(NewArbor, UB, EntType, rs("srv_num"), niveau + 1)
        End If
        rs.MoveNext
    Wend
    rs.Close
End Function

Public Function FctVoirStructureMenForme(v_bool_liste, v_MenForme)
    
    Dim New_MenFLigCol As String, New_MenFPresentation As String, New_MenFToutesouNouNR As String
    Dim New_MenFNbOccur As String, New_MenFLesVal As String, New_MenFparRapport As String
    Dim Anc_S1 As String, Anc_S2 As String, Anc_S3 As String, Anc_S4 As String, Anc_S5 As String
    Dim Bool_Ancien As Boolean
    
    ' Colonne_Val#Toutes#POURCENT##*
    Anc_S1 = STR_GetChamp(v_MenForme, "#", 0)
    Anc_S2 = STR_GetChamp(v_MenForme, "#", 1)
    Anc_S3 = STR_GetChamp(v_MenForme, "#", 2)
    Anc_S4 = STR_GetChamp(v_MenForme, "#", 3)
    Anc_S5 = STR_GetChamp(v_MenForme, "#", 4)
    
    ' Colonne_Val # POURCENT # NONVALEUR_R # * #             # TOUTES    ' pour Entier
    ' Colonne_Val # POURCENT # VALEUR_R    # 5 # 121;114;118 # AUX_R     ' pour Liste
    ' 0 New_MenFLigCol          Colonne_Lib_Val#
    ' 1 New_MenFPresentation    POURCENT-TOTAL-VALEUR-SOMME-MOYENNE-ECART_TYPE#
    ' 2 New_MenFToutesouNouNR   VALEUR VALEUR_SIGNIF VALEUR_R NONVALEUR_R#
    ' 3 New_MenFNbOccur         * (nb occurences)
    ' 4 New_MenFLesVal          Si liste : Liste des items à afficher ou *
    ' 5 New_MenFparRapport      Pour Entier et Listes : par rapport à : TOUTES AUX_R

    If Anc_S2 = "Toutes" Or Anc_S2 = "Significatives" Or Anc_S2 = "NR" Then  ' Ancienne version
        Bool_Ancien = True
    ElseIf InStr(Anc_S4, ";") > 0 Then ' Ancienne version
        Bool_Ancien = True
    End If
    
    If Bool_Ancien Then
        New_MenFLigCol = Anc_S1
        
        New_MenFparRapport = ""
        New_MenFLesVal = ""
        
        If v_bool_liste Then
            If Anc_S2 = "Toutes" Then
                New_MenFToutesouNouNR = "VALEUR"
            ElseIf Anc_S2 = "Significatives" Then
                New_MenFToutesouNouNR = "VALEUR_SIGNIF"
            ElseIf Anc_S2 = "NR" Then
                New_MenFToutesouNouNR = "NONVALEUR_NR"
                New_MenFparRapport = "TOUTES"
            ElseIf Anc_S2 = "POURCENT" Then
                ' Colonne_Val # POURCENT # NONVALEUR_R # * #             # TOUTES    ' pour Entier
                New_MenFToutesouNouNR = "VALEUR"
                New_MenFparRapport = "TOUTES"
            Else
                MsgBox "CAS ?"
            End If
        Else
            If Anc_S2 = "Toutes" Then
                New_MenFToutesouNouNR = "NONVALEUR_R"
            Else
                MsgBox "CAS ?"
            End If
        End If
        
        If Anc_S3 = "POURCENT" Then
            New_MenFPresentation = "POURCENT"
            New_MenFparRapport = "AUX_R"
        ElseIf Anc_S3 = "MOYENNE" Then
            New_MenFPresentation = "MOYENNE"
            New_MenFparRapport = "AUX_R"
        ElseIf Anc_S3 = "TOTAL" Then
            If v_bool_liste Then
                New_MenFPresentation = "NOMBRE"
                If New_MenFToutesouNouNR = "" Then New_MenFToutesouNouNR = "NONVALEUR_R"
            Else
                New_MenFPresentation = "SOMME"
            End If
            If New_MenFToutesouNouNR = "" Then New_MenFToutesouNouNR = "NONVALEUR_R"
            New_MenFparRapport = "AUX_R"
        ElseIf Anc_S3 = "VALEUR" Then
            New_MenFPresentation = "NOMBRE"
        Else
            MsgBox "CAS ?"
        End If
        
        New_MenFNbOccur = ""
        If Anc_S4 <> "" Then
            If InStr(Anc_S4, ";") > 0 Then
                New_MenFLesVal = Anc_S4
                New_MenFNbOccur = "*"
            ElseIf val(Anc_S4) > 0 Then
                New_MenFNbOccur = Anc_S4
            End If
        End If
            
        If New_MenFNbOccur = "" Then
            If Anc_S5 = "*" Or Anc_S5 = "" Then
                New_MenFNbOccur = "*"
            Else
                MsgBox "CAS ?"
            End If
        End If
        
        FctVoirStructureMenForme = New_MenFLigCol & "#" & New_MenFPresentation & "#"
        FctVoirStructureMenForme = FctVoirStructureMenForme & New_MenFToutesouNouNR & "#" & New_MenFNbOccur & "#"
        FctVoirStructureMenForme = FctVoirStructureMenForme & New_MenFLesVal & "#" & New_MenFparRapport
        
    Else
        'MsgBox "New version"
        FctVoirStructureMenForme = v_MenForme
    End If
End Function

Private Sub MetTag(v_numfeuille, v_X, v_Y, v_lib, v_Portee, v_Le_Lib, v_XPère, v_YPère)
    Dim ij As Integer
    Dim MenFType As String, MenFToutes As String, MenFVal As String, MenFUneVal As String, lib As String
    
    If p_bool_tbl_cell Then
        For ij = 0 To UBound(tbl_cell())
            If tbl_cell(ij).CellFeuille = v_numfeuille Then
                If tbl_cell(ij).CellX = v_X And tbl_cell(ij).CellY = v_Y Then
                    If v_lib = "Lib" Then
                        tbl_cell(ij).CellTag = "Champ " & v_Le_Lib
                        tbl_cell(ij).cellXPère = v_XPère
                        tbl_cell(ij).cellYPère = v_YPère
                        tbl_cell(ij).CellPortee = v_Portee
                        Exit For
                    ElseIf v_lib = "Val" Then
                        tbl_cell(ij).CellTag = "Valeur pour " & v_Le_Lib
                        tbl_cell(ij).cellXPère = v_XPère
                        tbl_cell(ij).cellYPère = v_YPère
                        tbl_cell(ij).CellPortee = v_Portee
                        Exit For
                    End If
                End If
            End If
        Next ij
    End If
End Sub


Private Sub AjouterContenuTableau(v_idgrid As Integer)
    ' ajouter le contenu du tableau
    Dim bret As Boolean
    Dim Exc_wrk As Excel.Workbook
    Dim exc_sheet As Excel.Worksheet
    Dim i As Integer, j As Integer
    Dim NomCellDest As String
    Dim widthCell As Integer, coef As Integer
    Dim LaRowMax As Integer, LaColMax As Integer
    Dim DéjàDemandé As Boolean
    Dim ToutCharger As Boolean
    Dim iDébut As Integer
    Dim iChargé As Integer
    Dim dMax As Double
    Dim nblig As Double
    Dim cptRefresh As Integer
    
    Me.ChkHyperlien.Value = 1
    Call FindLastCell(v_idgrid, LaRowMax, LaColMax)
    PgBar.Visible = True
    PgBar.Value = 0
    p_bfaire_RowColChange = False
    
    Public_VerifOuvrir g_CheminModele, False, True, p_tbl_FichExcelOuverts
    
    Set Exc_wrk = Exc_obj.ActiveWorkbook
    Set exc_sheet = Exc_wrk.Sheets(tbl_fenExcel(v_idgrid).FenNom)
    exc_sheet.Activate
    Me.LblHelp.Visible = True
    ToutCharger = True
    
    iChargé = 0
    If bRafraichir Then
        ' on charge tous les champs à charger sur la tranche de lignes déjà chargée
        iDébut = 1
        LaRowMax = val(grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_Chargement))
        nblig = LaRowMax - iDébut + 1
    Else
        If grdFeuille.TextMatrix((v_idgrid - 1), GrdFeuil_Chargement) = "0" Then
            iDébut = 1
        Else
            iDébut = val(grdFeuille.TextMatrix((v_idgrid - 1), GrdFeuil_Chargement)) + 1
        End If
        nblig = p_Imax
    End If
    
    dMax = val(LaColMax) * val(LaRowMax)
    dMax = val(LaColMax) * val(p_Imax)
    PgBar.max = dMax
    
    If iDébut >= LaRowMax Then  ' tout est chargé
        iChargé = LaRowMax
    End If
    If p_TraitPublier <> "G" Then
        For i = iDébut To LaRowMax
            cptRefresh = cptRefresh + 1
            If cptRefresh = 10 Then
                Me.LblHelp.Caption = "Ligne " & i & " / " & LaRowMax    ' NbLig
                Me.LblHelp.Refresh
                cptRefresh = 0
            End If
            If bRafraichir Then
                ' on fait toutes les lignes calculées plus haut
            Else
                If i >= grdCell(v_idgrid).Rows Then
                    GoTo Next_i
                ElseIf i > val(grdFeuille.TextMatrix((v_idgrid - 1), GrdFeuil_Chargement)) + p_Imax Then
                    grdCell(v_idgrid).row = i
                    For j = 1 To LaColMax
                        grdCell(v_idgrid).col = j
                        grdCell(v_idgrid).CellBackColor = grdCell(v_idgrid).BackColorBkg
                    Next j
                    GoTo Next_i
                ElseIf i < val(grdFeuille.TextMatrix((v_idgrid - 1), GrdFeuil_Chargement)) Then
                    GoTo Next_i
                End If
            End If
            
            If i > iChargé Then iChargé = i
            For j = 1 To LaColMax
                NomCellDest = FctFaitNomCellDest(j, i)
                grdCell(v_idgrid).row = i
                grdCell(v_idgrid).col = j
                If exc_sheet.Range(NomCellDest).HasFormula Then
                    ' il y a une formule
                    Set grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_SOMME).Picture
                Else
                    ' du texte
                    If exc_sheet.Range(NomCellDest).Value <> "" Then
                        ' si champ de formulaire
                        bret = False
                        If grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULE).Picture Then bret = True
                        If grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_SQL_SELECT_C).Picture Then bret = True
                        If grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_SQL_SELECT_CPLUS).Picture Then bret = True
                        If grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_SQL_SELECT_F).Picture Then bret = True
                        If grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_SQL_SELECT_FPLUS).Picture Then bret = True
                        If grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULEBC).Picture Then bret = True
                        If grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULEBC_PLUS).Picture Then bret = True
                        If grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULEBF).Picture Then bret = True
                        If grdCell(v_idgrid).CellPicture = imglst.ListImages(IMG_BOULEBF_PLUS).Picture Then bret = True
                        If bret Then
                        Else
                            grdCell(v_idgrid).TextMatrix(i, j) = exc_sheet.Range(NomCellDest).Value
                        End If
                    End If
                    On Error Resume Next
                    grdCell(v_idgrid).CellFontBold = exc_sheet.Range(NomCellDest).Font.Bold
                    If exc_sheet.Range(NomCellDest).Font.Color = exc_sheet.Range(NomCellDest).Interior.Color Then  ' blanc sur blanc
                        grdCell(v_idgrid).CellForeColor = 0
                    Else
                        grdCell(v_idgrid).CellForeColor = exc_sheet.Range(NomCellDest).Font.Color
                    End If
                    grdCell(v_idgrid).CellFontName = exc_sheet.Range(NomCellDest).Font.Name
                    grdCell(v_idgrid).CellFontItalic = exc_sheet.Range(NomCellDest).Font.Italic
                    grdCell(v_idgrid).CellFontSize = exc_sheet.Range(NomCellDest).Font.Size
                    grdCell(v_idgrid).CellFontName = exc_sheet.Range(NomCellDest).Font.Name
                    grdCell(v_idgrid).CellBackColor = exc_sheet.Range(NomCellDest).Interior.Color
                    If i = 1 Then
                        coef = 20
                        widthCell = exc_sheet.Range(NomCellDest).Width
                        grdCell(v_idgrid).ColWidth(j) = coef * widthCell
                    End If
                End If
            Next j
Next_i:
        Next i
    End If
    
    If Not bRafraichir Then
        If iChargé >= LaRowMax Then
            grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_Chargement) = "*"
            grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_Chargement) = iChargé
        Else
            grdFeuille.TextMatrix(v_idgrid - 1, GrdFeuil_Chargement) = iChargé
        End If
    Else
        For i = LaRowMax + 1 To grdCell(v_idgrid).Rows - 1
            grdCell(v_idgrid).row = i
            For j = 1 To grdCell(v_idgrid).Cols - 1
                grdCell(v_idgrid).col = j
                grdCell(v_idgrid).CellBackColor = &HC0C0C0
            Next j
        Next i
    End If
    
    Me.LblHelp.Visible = False

    p_bfaire_RowColChange = True
    PgBar.Visible = False
End Sub
Private Function quitter(v_mode As String) As Boolean

' v_mode="AUTO" : on ne demande rien

    Dim reponse As Integer
    Dim LaUbound As Integer, i As Integer
    Dim j As Integer, n As Integer
    Dim strFichG As String, strFichd As String, FichServeur As String, liberr As String
    Dim FichLocal As String
    
    FctTrace ("PiloteExcelBis Début quitter")

    If v_mode = "AUTO" Then GoTo Auto
    
    If cmd(CMD_ENREGISTRER).Visible Then
        reponse = MsgBox("Confirmez-vous l'abandon des modifications du paramétrage ?", vbYesNo + vbDefaultButton2 + vbQuestion)
        If reponse = vbNo Then
            quitter = False
            p_Appel_Création_Nouveau_Modele = False
            Exit Function
        End If
    End If
    
Auto:
    ' voir si des fichiers Excel sont à fermer proprement
    FctTrace ("PiloteExcelBis Quitter début Boucle")
    If p_bool_tbl_FichExcelOuverts Then
        LaUbound = 0
        On Error GoTo Err_Quit
        LaUbound = UBound(p_tbl_FichExcelOuverts(), 1) + 1
        For i = 0 To LaUbound - 1
            For j = 1 To Exc_obj.Workbooks.Count
                strFichG = Replace(UCase(Exc_obj.Workbooks(j).FullName), "\", "$")
                strFichG = Replace(strFichG, "/", "$")
                strFichd = Replace(UCase(p_tbl_FichExcelOuverts(i).FichFullname), "\", "$")
                strFichd = Replace(strFichd, "/", "$")
                If strFichG = strFichd Then
                    If p_tbl_FichExcelOuverts(i).FichàSauver Then
                        Exc_obj.Workbooks(j).Close True
                    Else
                        Exc_obj.Workbooks(j).Close False
                    End If
                End If
            Next j
        Next i
    End If
    FctTrace ("PiloteExcelBis Quitter fin Boucle")

    On Error GoTo Err_Quit
    
    FctTrace ("PiloteExcelBis Quitter Etape 1")
    Exc_obj.Application.Quit
        
    FctTrace ("PiloteExcelBis Quitter Etape 2")
    Set Exc_obj = Nothing
    GoTo Suite_Quit
Err_Quit:
    Resume Suite_Quit:
Suite_Quit:
    FctTrace ("PiloteExcelBis Quitter Etape 3")

    n = -1
    On Error Resume Next
    n = UBound(p_tbl_HTTP_Fichiers_Chargés)
    On Error GoTo 0
    For i = 0 To n
        If p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Locké Then
            ' ReCopier les fichiers chargés vers le serveur
            FichLocal = p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Fullname_Local
            FichServeur = p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Fullname_Serveur
            Call HTTP_Appel_PutFile(FichServeur, FichLocal, True, p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Locké, liberr)
            'Call HTTP_Appel_LockDelock_file(False, FichServeur, True, liberr)
        End If
    Next i
    
    quitter = True
    
    FctTrace ("PiloteExcelBis Fin quitter")
    
    Unload Me
    
End Function

Private Sub supprimer_form()
    Dim i_grdregle As Integer
    Dim ret As Integer
    Dim NumFiltre As String, NumIndice As String
    Dim i As Integer
    Dim x As Integer
    Dim iGrd As Integer
    Dim strX As String, leX As Integer, leY As Integer
    Dim MenForme As String
    
    ret = MsgBox("Etes vous sûr de vouloir supprimer ce filtre ?", vbDefaultButton2 + vbYesNo + vbQuestion, "Suppression d'un filtre")
    If ret <> vbYes Then Exit Sub
    
    NumFiltre = grdForm.TextMatrix(grdForm.row, GrdForm_FF_Num)
    NumIndice = grdForm.TextMatrix(grdForm.row, GrdForm_FF_NumIndice)
    
    i_grdregle = FctAttribIndex(NumFiltre, NumIndice)
    
    
    For i = 0 To UBound(tbl_fichExcel())
        
        If tbl_fichExcel(i).CmdType = "CHP" Then
            ' On supprime aussi tous ses champs
            If tbl_fichExcel(i).CmdFormNum = NumFiltre Then
                If tbl_fichExcel(i).CmdFormIndice = NumIndice Then
                    strX = tbl_fichExcel(i).CmdX
                    leX = FctIntColdest(strX)
                    leY = tbl_fichExcel(i).CmdY
                    MenForme = tbl_fichExcel(i).CmdMenFormeChp
                    iGrd = val(tbl_fichExcel(i).CmdFenNum)
                    If iGrd < UBound(tbl_fenExcel) Then
                        If tbl_fenExcel(iGrd).FenLoad Then
                            P_MettreChamp "Vider", i, leX, leY, MenForme, val(tbl_fichExcel(i).CmdChpNum), val(tbl_fichExcel(i).CmdFormIndice), iGrd, True
                        End If
                    End If
                    tbl_fichExcel(i).CmdChpNum = -1
                    tbl_fichExcel(i).CmdType = ""
                    cmd(CMD_MODE_CHAMP).Visible = False
                    cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
                    cmd(CMD_MODE_SIMUL).Visible = False
                    cmd(CMD_MODE_LIEN).Visible = False
                End If
            End If
        ElseIf tbl_fichExcel(i).CmdType = "CONDF" Then
            If tbl_fichExcel(i).CmdFormNum = NumFiltre Then
                If tbl_fichExcel(i).CmdFormIndice = NumIndice Then
                    ' c'est lui : on le supprime
                    tbl_fichExcel(i).CmdChpNum = -1
                    Call verifSiSauve
                End If
            End If
        End If
    Next i
    Call verifSiSauve
    
    On Error GoTo Err_Unload
    If grdForm.Rows = 1 Then
        grdForm.Rows = 0
        ' supprimer aussi le grid des regles
        Unload grdCond(i_grdregle)
        cmd(CMD_SUPPR_FORM).Visible = False
    Else
        grdForm.RemoveItem (grdForm.row)
        ' supprimer aussi le grid des regles
        Unload grdCond(i_grdregle)
        grdForm.row = 0
        Call grdForm_Click
    End If
Fin:
    On Error GoTo 0
    Exit Sub
Err_Unload:
    Resume Next
End Sub
Private Sub supprimer_cond()
    Dim lig As Integer
    Dim Index As Integer
    Dim numfor As Integer
    Dim NumIndice As Integer
    Dim leIndex As Integer
    Dim num_a_suppr As Integer
    Dim isuppr As Integer
    
    ' supprimer du grid et du tableau
    'leIndex = (grdForm.TextMatrix(grdForm.row, GrdForm_FF_Num) * 100) + grdForm.TextMatrix(grdForm.row, GrdForm_FF_NumIndice)
    leIndex = FctAttribIndex(grdForm.TextMatrix(grdForm.row, GrdForm_FF_Num), grdForm.TextMatrix(grdForm.row, GrdForm_FF_NumIndice))
    If lig > -1 Then
        lig = grdCond(leIndex).row
        numfor = grdCond(leIndex).TextMatrix(lig, GrdCond_NumFiltre)
        NumIndice = grdCond(leIndex).TextMatrix(lig, GrdCond_NumIndice)
        grdCond(leIndex).TextMatrix(lig, GrdCond_NumFiltre) = -1
        grdCond(leIndex).TextMatrix(lig, GrdCond_TypeFL) = "S"
        grdCond(leIndex).TextMatrix(lig, GrdCond_CondF) = "Supprimé"
        grdCond(leIndex).RowHeight(lig) = 0
        Call verifSiSauve
        num_a_suppr = grdCond(leIndex).TextMatrix(lig, GrdCond_Oper)
    
        num_a_suppr = grdCond(leIndex).TextMatrix(lig, GrdCond_I_TblCond)
        tbl_cond(num_a_suppr).CondLigneDansGrid = -1
        'For isuppr = 0 To UBound(tbl_rdoL())
        '    If tbl_rdoL(isuppr).RDOL_fornum = numfor And tbl_rdoL(isuppr).RDOL_FormIndice = numindice Then
        '        If tbl_rdoL(isuppr).RDOL_num = num_a_suppr Then
        '            tbl_rdoL(isuppr).RDOL_fornum = -1
        '            tbl_rdoL(isuppr).RDOL_FormIndice = -1
        '        End If
        '    End If
        'Next isuppr
    End If
End Sub

Private Function FctOuvrirFichier(ByVal v_CheminFichier As String)
    
    If FICH_FichierExiste(v_CheminFichier) Then
        StartProcess v_CheminFichier
    Else
        MsgBox "Fichier " & v_CheminFichier & " introuvable"
    End If

End Function

Private Function Fct_Tmp_Vers_Modele(v_Trait As String)
    
    Dim CheminModele As String
    Dim iret As Integer
    Dim NomCellDest As String
    Dim s As String
    Dim nbFeuille As Integer
    Dim LaRowMax As Integer, LaColMax As Integer
    Dim CheminTmp As String
    Dim STRCheminModele As String
    Dim STRCheminTmp As String
    Dim j As Integer
    Dim n As Integer
    Dim x As Integer, y As Integer
    Dim XD As Integer, XF As Integer, YD As Integer, YF As Integer
    Dim lig As Integer, col As Integer
    Dim numTemp As String
    Dim strFichG As String, strFichd As String

    CheminTmp = p_Chemin_Modeles_Local & "\Temp_" & g_numModele & p_PointExtensionXls
    STRCheminTmp = Replace(CheminTmp, "\", "$")
    STRCheminTmp = Replace(STRCheminTmp, "/", "$")
    STRCheminTmp = UCase(STRCheminTmp)
    
    Call Public_VerifOuvrir(CheminTmp, False, False, p_tbl_FichExcelOuverts())
    ' supprimer tous les commentaires
    Me.PgBar.Visible = True
    If Exc_obj.Workbooks.Count = 0 Then
        MsgBox "Le fichier Excel de simulation a été fermé"
        Exit Function
    End If
    nbFeuille = Exc_obj.ActiveWorkbook.Sheets.Count
    Exc_obj.Visible = True
    For n = 1 To nbFeuille
        Exc_obj.ActiveWorkbook.Sheets(n).Activate
        ' Supprimer les fenetres de détail
        'MsgBox (Exc_obj.ActiveWorkbook.Sheets(n).Name)
        
        If Mid(Exc_obj.ActiveWorkbook.Sheets(n).Name, 1, 7) = "Det_" Then
            Exc_obj.ActiveWorkbook.Sheets(n).Delete
            GoTo NextFeuille
        End If
        Call FindLastCell(n, LaRowMax, LaColMax)
        Me.PgBar.max = LaRowMax
        'For lig = 1 To LaRowMax
        '    Me.PgBar.Value = lig
        '    For col = 1 To LaColMax
        '        NomCellDest = FctFaitNomCellDest(col, lig)
        '        Exc_obj.Sheets(n).Range(NomCellDest).ClearComments
        '    Next col
        'Next lig
NextFeuille:
        nbFeuille = Exc_obj.ActiveWorkbook.Sheets.Count
    Next n
    Exc_obj.Visible = False
    If v_Trait = "TversM" Then
        iret = MsgBox("Voulez vous au préalable vider les données de simulation du nouveau Modèle ?", vbDefaultButton1 + vbYesNo + vbQuestion, "Remplacement du Modèle")
        If iret = vbYes Then
            For n = 1 To nbFeuille
                Exc_obj.ActiveWorkbook.Sheets(n).Activate
                For j = 0 To UBound(tbl_fichExcel)
                    If tbl_fichExcel(j).CmdFenNum <> "" Then
                        If tbl_fichExcel(j).CmdFenNum = n Then
                            If tbl_fichExcel(j).CmdType = "CHP" Then
                                If tbl_fichExcel(j).CmdY_Debut = "" Then
                                    YD = tbl_fichExcel(j).CmdY
                                Else
                                    YD = tbl_fichExcel(j).CmdY_Debut
                                End If
                                If tbl_fichExcel(j).CmdY_Fin = "" Then
                                    YF = tbl_fichExcel(j).CmdY
                                Else
                                    YF = tbl_fichExcel(j).CmdY_Fin
                                End If
                                If tbl_fichExcel(j).CmdX_Debut = "" Then
                                    XD = FctIntColdest(tbl_fichExcel(j).CmdX)
                                Else
                                    XD = tbl_fichExcel(j).CmdX_Debut
                                End If
                                If tbl_fichExcel(j).CmdX_Fin = "" Then
                                    XF = FctIntColdest(tbl_fichExcel(j).CmdX)
                                Else
                                    XF = tbl_fichExcel(j).CmdX_Fin
                                End If
                                For x = XD To XF
                                    For y = YD To YF
                                        s = FctFaitNomCellDest(x, y)
                                        Exc_obj.ActiveSheet.Range(s).Value = ""
                                    Next y
                                Next x
                            End If
                        End If
                    End If
                Next j
            Next n
        End If
    End If
    ' Fermer le fichier Temp
    For j = 1 To Exc_obj.Workbooks.Count
        strFichG = Replace(UCase(Exc_obj.Workbooks(j).FullName), "\", "$")
        strFichG = Replace(strFichG, "/", "$")
        If strFichG = STRCheminTmp Then
            Exc_obj.Workbooks(j).Close True
            Exit For
        End If
    Next j
    
    If InStr(NomFichierParam, ".") > 0 Then
        NomFichierParam = Replace(NomFichierParam, ".", "")
    End If
    CheminModele = NomFichierParam & p_PointExtensionXls
    STRCheminModele = Replace(CheminModele, "\", "$")
    STRCheminModele = Replace(STRCheminModele, "/", "$")
    STRCheminModele = UCase(STRCheminModele)
    ' Fermer le fichier Modèle
    For j = 1 To Exc_obj.Workbooks.Count
        strFichG = Replace(UCase(Exc_obj.Workbooks(j).FullName), "\", "$")
        strFichG = Replace(strFichG, "/", "$")
        If strFichG = STRCheminModele Then
            Exc_obj.Workbooks(j).Close True
            Exit For
        End If
    Next j
    
    Fct_Tmp_Vers_Modele = True
    If v_Trait = "TversM" Then
        ' Sauvegarder le modèle
        If InStr(NomFichierParam, ".") > 0 Then
            NomFichierParam = Replace(NomFichierParam, ".", "")
        End If
        FICH_CopierFichier CheminModele, NomFichierParam & "_Old" & p_PointExtensionXls
        
        ' Copier le temp dans Modèle
        FICH_CopierFichier CheminTmp, CheminModele
    
        cmd(CMD_MODELE_VERS_TMP).Visible = FICH_FichierExiste(CheminModele)
            
        iret = MsgBox("La simulation a remplacé le modèle" & vbCr & "Ouvrir le nouveau Modèle ?", vbDefaultButton1 + vbYesNo + vbQuestion, "Remplacement du Modèle")
        If iret = vbYes Then
            Call Public_VerifOuvrir(CheminModele, True, True, p_tbl_FichExcelOuverts())
        End If
        Fct_Tmp_Vers_Modele = False
        cmd(CMD_TMP_VERS_MODELE).Visible = False
    ElseIf v_Trait = "Back" Then
        ' Sauvegarder le modèle
        If InStr(NomFichierParam, ".") > 0 Then
            NomFichierParam = Replace(NomFichierParam, ".", "")
        End If
        FICH_CopierFichier NomFichierParam & "_Old" & p_PointExtensionXls, CheminModele
        
        cmd(CMD_MODELE_VERS_TMP).Visible = False
            
        iret = MsgBox("Le dernier modèle a été restauré " & vbCr & "Ouvrir le nouveau Modèle ?", vbDefaultButton1 + vbYesNo + vbQuestion, "Restauration du Modèle")
        If iret = vbYes Then
            Call Public_VerifOuvrir(CheminModele, True, True, p_tbl_FichExcelOuverts())
            Fct_Tmp_Vers_Modele = False
        End If
        cmd(CMD_MODELE_VERS_TMP).Visible = False
    End If
    Me.PgBar.Visible = False

    ' MODIF LN 26/06/11
    cmd(CMD_ENREGISTRER).Visible = True
    cmd(CMD_ENREGISTRER).Enabled = True
    
End Function

Private Function Ouvrir_KaliDoc()
        
    Dim sql As String
    Dim cmd As String
    Dim rs As rdoResultset
    Dim numfor As Integer
    
    sql = "select * from formulaire,filtreform where formulaire.for_num = filtreform.ff_fornum " _
        & " and filtreform.ff_num = " & p_numfiltre_encours
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Function
    End If
    numfor = rs("for_num").Value
    cmd = p_chemin_appli & "\Lance.exe " & p_chemin_appli & ";KaliDoc;;FORMULAIRE=" & numfor
    Call Shell(cmd)
'        Call SYS_Sleep(1000)

End Function

Private Sub ChkExpert_Click()
    If Me.ChkExpert.Value = 1 Then
        'cmd(CMD_OUVRIR_PARAM).Visible = True
        Call SYS_PutIni("TRACES", "MODE_EXPERT", "Oui", p_nomini)
    Else
        cmd(CMD_OUVRIR_PARAM).Visible = False
        Call SYS_PutIni("TRACES", "MODE_EXPERT", "Non", p_nomini)
    End If
End Sub

Private Function FctGraphGerenerAuto()
    Dim i As Integer, n As Integer, chpnum As Integer, IndiceNum As Integer
    Dim sql As String, MenForme As String, strFFNum As String, s As String, sOp As String, sFFNum As String
    Dim strType As String, lib  As String, sNumFiltre As Integer
    Dim rs As rdoResultset, rsFiltre As rdoResultset, rsChp As rdoResultset
    Dim numfor As Integer, nbChamp As Integer, ichp As Integer, nbchp As Integer
    Dim int_ForNum As Integer, int_ChpNum As Integer
    Dim bSelected As Boolean
    Dim NumFiltre As String, strDeja As String
    Dim TypeGraphique As String
    Dim sret As String
    Dim bmêmeFen As Boolean, ret As Integer
    
    If p_ModeAssistant Then
        Me.PgbarHTTPDTaille.max = 12
        Me.FrmHTTPD.Caption = "Génération des graphiques"
        Me.PgbarHTTPDTaille.Value = 10
    End If
    ' faire la liste de tous les champs (choix_liste)
    Call CL_Init
    nbchp = 0
    On Error GoTo Err_Suite2
    i = UBound(tbl_fichExcel())
    GoTo Suite_2
Err_Suite2:
    Resume Fin
Suite_2:
    On Error GoTo 0
    Call CL_InitGererTousRien(True)
    Call CL_InitMultiSelect(True, True)
    
    NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
    If InStr(NomFichierParam, ".") = 0 Then
        NomFichierParam = NomFichierParam & "."
    End If
    ' ouvrir le fichier Excel
    Public_VerifOuvrir NomFichierParam & p_PointExtensionXls, False, True, p_tbl_FichExcelOuverts()
    Set Exc_wrk = Exc_obj.ActiveWorkbook
    Exc_wrk.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Activate
    
    'ret = MsgBox("Placer les graphiques sur une autre feuille ?", vbQuestion + vbYesNo, "Graphiques")
    'If ret = vbYes Then
    'End If
    
    ' prendre tous les champs de cette fenêtre
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdChpNum > 0 Then
            If tbl_fichExcel(i).CmdType = "CHP" Then
                If tbl_fichExcel(i).CmdFenNum = g_numfeuille Then
                    int_ChpNum = tbl_fichExcel(i).CmdChpNum
                    sql = "select * from formetapechp where forec_num=" & int_ChpNum
                    If Odbc_SelectV(sql, rsChp) = P_ERREUR Then
                        Exit Function
                    End If
                    If Not rsChp.EOF Then
                        If rsChp("Forec_Type").Value = "CHECK" Or rsChp("Forec_Type").Value = "RADIO" Or rsChp("Forec_Type").Value = "SELECT" Then
                            If rsChp("Forec_Type").Value = "CHECK" Then
                                strType = "Cases"
                            ElseIf rsChp("Forec_Type").Value = "RADIO" Then
                                strType = "Options"
                            ElseIf rsChp("Forec_Type").Value = "SELECT" Then
                                strType = "Liste"
                            End If
                        ElseIf rsChp("Forec_Type").Value = "TEXT" Then
                            strType = "Text"
                            If rsChp("Forec_fctvalid").Value = "" Then
                            ElseIf rsChp("Forec_fctvalid").Value = "%NUMSERVICE" Then
                                strType = "Service"
                            ElseIf rsChp("Forec_fctvalid").Value = "%NUMFCT" Then
                                strType = "Fonction"
                            ElseIf rsChp("Forec_fctvalid").Value = "%NUM" Then
                                strType = "Numéro automatique"
                            ElseIf InStr(rsChp("Forec_fctvalid").Value, "%DATE") > 0 Then
                                strType = "Date"
                            ElseIf rsChp("forec_fctvalid").Value = "%ENTIER" Then
                                strType = "Entier"
                            ElseIf rsChp("forec_fctvalid").Value = "%MTT" Then
                                strType = "Montant"
                            Else
                                strType = rsChp("Forec_fctvalid").Value
                            End If
                        ElseIf rsChp("Forec_Type").Value = "TEXTAREA" Then
                            strType = "Commentaire"
                        Else
                            strType = rsChp("Forec_Type").Value
                        End If
                        If rsChp("forec_valeurs_possibles") <> "" Then
                            lib = rsChp("Forec_Nom").Value & vbTab & "  (" & strType & " " & FctRecupNomListe(rsChp("forec_valeurs_possibles")) & ")"
                        Else
                            lib = rsChp("Forec_Nom").Value & vbTab & "  (" & strType & ")"
                        End If
                        ' voir si selected
                        bSelected = True
                        
                        If VoirSiChartExiste("C", "", g_numfeuille, i, sret) >= 0 Then
                            bSelected = False
                        End If
                        If bSelected Then
                            Call CL_AddLigne(lib, i, "", bSelected)
                            nbchp = nbchp + 1
                        End If
                    End If
                End If
            End If
        End If
    Next i
    
    If nbchp = 0 Then
        MsgBox "Aucun graphique à générer dans cette feuille"
        Exit Function
    End If
    Call CL_InitTitreHelp("Champs utilisables pour créer un graphique (" & Exc_obj_Version & " => " & p_VersionExcel & ")", "")
    Call CL_AddBouton("Secteurs", "", vbKeyO, vbKeyF1, 2000)
    Call CL_AddBouton("Histogrammes", "", vbKeyO, vbKeyF1, 2000)
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
    Call CL_InitTaille(0, -15)
    
    ChoixListe.Show 1
    
    If CL_liste.retour = 2 Then
        Exit Function
    End If
    
    If CL_liste.retour = 0 Then
        TypeGraphique = "S"
    ElseIf CL_liste.retour = 0 Then
        TypeGraphique = "H"
    End If
    
    ' Générer les graphiques
    PgbarHTTPDTaille.Value = 1
    PgbarHTTPDTaille.max = nbchp + 1
    For i = 0 To nbchp - 1
        If CL_liste.lignes(i).selected Then
            ' créer le graphique
            If Me.PgbarHTTPDTaille.Value = PgbarHTTPDTaille.max Then Me.PgbarHTTPDTaille.Value = 1
            Me.FrmHTTPD.Caption = "Génération du graphique " & CL_liste.lignes(i).texte
            Me.PgbarHTTPDTaille.Value = Me.PgbarHTTPDTaille.Value + 1
            Call FctCreerGraphique("C", 0, 0, TypeGraphique, g_numfeuille, val(CL_liste.lignes(i).num))
        End If
    Next i
    
    If p_ModeAssistant Then
        Me.PgbarHTTPDTaille.max = 12
        Me.FrmHTTPD.Caption = "Génération des graphiques"
        Me.PgbarHTTPDTaille.Value = 10
    End If
    
    Call MsgBox("Les graphiques ont été initialisés")
    Exc_obj.Visible = True
    Exit Function
Fin:
    On Error GoTo 0
End Function

Private Sub ChkHyperlien_Click()
    If Me.ChkHyperlien.Value = 1 Then
        p_chemin_fichier_liens = p_Chemin_Modeles_Local & "\Temp_" & g_numModele & "_" & p_NumUtil & ".txt"
        If FICH_FichierExiste(p_chemin_fichier_liens) Then
            'cmd(CMD_VOIR_HTML).Visible = True
        Else
            'cmd(CMD_VOIR_HTML).Visible = False
        End If
    Else
        'cmd(CMD_VOIR_HTML).Visible = False
    End If
End Sub

Public Function Faire_HTML()
    Dim FicTmp As String, sChemin As String, FicOutHTML As String, FicOut As String
    Dim nomrep_serv As String, HTTP_LibErr As String
    Dim s As String
    Dim chemin As String
    Dim Chemin1 As String, Chemin2 As String
    
    Me.FrmHTTPD.Visible = True
    Me.lblHTTPDTemps.Visible = False
    Me.PgbarHTTPDTemps.Visible = False
    s = Me.lblHTTPDTaille.Caption
    Me.PgbarHTTPDTaille.max = 4
    Me.lblHTTPDTaille.Caption = "Conversion HTML"
    Me.PgbarHTTPDTaille.Value = 1
    FicTmp = p_Chemin_Modeles_Local & "\Temp_" & p_nummodele & p_PointExtensionXls
    ' transformer en HTML
    sChemin = p_chemin_appli & "\tmp\TransfertHTML_" & p_nummodele & "_" & p_NumUtil
    If Not FICH_EstRepertoire(sChemin, False) Then
        Call FICH_CreerRepComp(sChemin, False, False)
    End If
    FicOutHTML = sChemin & "\Temp_" & g_numModele & "_" & p_NumUtil & ".html"
    Exc_obj.DisplayAlerts = False
    Call Public_VerifOuvrir(FicTmp, False, False, p_tbl_FichExcelOuverts())
    Exc_wrk.SaveAs FileName:=FicOutHTML, _
        FileFormat:=44, ReadOnlyRecommended:=False, CreateBackup:=False
    Call Exc_wrk.Close
    
    Me.lblHTTPDTaille.Caption = "Transfert liens vers Serveur"
    Me.PgbarHTTPDTaille.Value = 2
    ' Transfère le fichier des liens sur le serveur
    If Not KF_EstRepertoire(p_Chemin_Résultats & "/Temp", False) Then
        Call KF_CreerRepertoire(p_Chemin_Résultats & "/Temp")
    End If
    If Not KF_EstRepertoire(p_Chemin_Résultats & "/Temp/Temp_" & p_nummodele, False) Then
        Call KF_CreerRepertoire(p_Chemin_Résultats & "/Temp/Temp_" & p_nummodele)
    End If
    ' Transfère le fichier des liens vers le serveur
    p_chemin_fichier_liens = p_Chemin_Modeles_Local & "\Temp_" & p_nummodele & "_" & p_NumUtil & ".txt"
    If FICH_FichierExiste(p_chemin_fichier_liens) Then
        If KF_PutFichier(p_Chemin_Résultats & "/Temp/Temp_" & p_nummodele & "/Temp_" & p_nummodele & "_" & p_NumUtil & ".txt", p_chemin_fichier_liens) = P_ERREUR Then
            MsgBox "Erreur Dépot Fichier " & p_chemin_fichier_liens & " vers le serveur"
        End If
    End If
    
    Me.lblHTTPDTaille.Caption = "Transfert HTML vers Serveur"
    Me.PgbarHTTPDTaille.Value = 3
    ' Transfère le .html sur le serveur
    If FICH_FichierExiste(FicOutHTML) Then
        chemin = p_Chemin_Résultats & "/Temp/Temp_" & p_nummodele & "/Temp_" & p_nummodele & "_" & p_NumUtil & ".html"
        If KF_PutFichier(chemin, FicOutHTML) = P_ERREUR Then
            MsgBox "Erreur Dépot Fichier " & FicOutHTML & " vers le serveur"
        End If
        ' creer le dossier fichiers
        chemin = p_Chemin_Résultats & "/Temp/Temp_" & p_nummodele & "/Temp_" & p_nummodele & "_" & p_NumUtil & "_fichiers"
        If HTTP_Appel_est_repertoire(chemin, False, HTTP_LibErr) = P_ERREUR Then
            MsgBox HTTP_LibErr
        Else
            If HTTP_Appel_creer_repertoire(chemin, HTTP_LibErr) = P_ERREUR Then
                MsgBox HTTP_LibErr
            End If
        End If
        Chemin1 = p_chemin_appli & "\tmp\TransfertHTML_" & p_nummodele & "_" & p_NumUtil & "\Temp_" & p_nummodele & "_" & p_NumUtil & "_fichiers"
        Chemin2 = p_Chemin_Résultats & "/Temp/Temp_" & p_nummodele & "\Temp_" & p_nummodele & "_" & p_NumUtil & "_fichiers"
        If HTTP_Appel_PutDos(Chemin1, Chemin2, False, False, HTTP_LibErr) <> HTTP_OK Then
            MsgBox HTTP_LibErr
        End If
    End If
    cmd(CMD_VOIR_HTML).Visible = True
    
    ' Vider le dossier local de transfert
    Me.lblHTTPDTaille.Caption = "Vider fichiers locaux"
    Me.PgbarHTTPDTaille.Value = 4
    Call FICH_EffacerRep(sChemin & "\Temp_" & p_nummodele & "_" & p_NumUtil & "_fichiers")
    Call FICH_EffacerRep(sChemin)
    
    
    Me.lblHTTPDTemps.Visible = True
    Me.PgbarHTTPDTemps.Visible = True
    Me.lblHTTPDTaille.Caption = s
    Me.PgbarHTTPDTaille.Value = 0
    Me.FrmHTTPD.Visible = False
    
    Call Ouvrir_IE_HTML
    
    
End Function

Private Function Envoyer_Simul_Mail()
    Dim Frm As Form
    Dim cr As Integer
    Dim NomExped As String, nomdest As String
    Dim Fichier As String, chemin_php As String, mess As String, Adresse As String
    Dim adrdest As String
    Dim cnd_sversconf As String, util As String
    Dim nomfich_serv As String, nomfich_loc As String
    Dim smtp_webmaster As String, smtp_user As String, smtp_password As String
    Dim numzone As String, sql As String, rs As rdoResultset
    Dim AdrExped As String
    Dim nom As String, prenom As String
    Dim sujet As String
    Dim pos As Integer
    
    Fichier = p_Chemin_Modeles_Local & "\Temp_" & p_nummodele & p_PointExtensionXls
    If Not FICH_FichierExiste(Fichier) Then
        MsgBox ("Le fichier " & Fichier & " n'existe pas")
    Else
        Call Odbc_RecupVal("select pg_cheminphp from prmgen_http", chemin_php)
    End If
    mess = "Bonjour," & vbCrLf & vbCrLf
    mess = mess & "Un rapport Excel vous est diffusé." & vbCrLf & vbCrLf
    mess = mess & "Vous pouvez le consulter en format Excel (en pièce jointe)" & vbCrLf
    mess = mess & "ou en cliquant sur le lien suivant" & vbCrLf
    Adresse = "http://" & p_AdrServeur & p_Chemin_Modeles_Serveur & "/publiweb/pident.php?in=divers" & cnd_sversconf & "&V_util=" & util & "&V_url="
    mess = mess & "<A href='" & Adresse & "'>Cliquez ici</A>" & vbCrLf
    mess = mess & "Merci et bonne journée."
    
    ' N° de la zone Adrmail
    If Odbc_RecupVal("select ZU_Num from ZoneUtil where ZU_Code='ADRMAIL'", numzone) = P_ERREUR Then
        Envoyer_Simul_Mail = P_ERREUR
        Exit Function
    End If
    ' Recherche l'adrmail de l'expéditeur
    sql = "select UC_Valeur from UtilCoordonnee" _
        & " where UC_Type='U'" _
        & " and UC_TypeNum=" & p_NumUtil _
        & " and UC_ZUNum=" & numzone
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Envoyer_Simul_Mail = P_ERREUR
        Exit Function
    End If
    If rs.EOF Then
        NomExped = "KaliDoc"
        AdrExped = smtp_webmaster
    Else
        AdrExped = rs("UC_Valeur").Value
    End If
    rs.Close
    pos = InStr(AdrExped, "@")
    If pos > 0 Then
        adrdest = Mid(AdrExped, pos)
    End If
    Dim ModeFichier As String
    adrdest = InputBox("Adresse mail", "Envoi d'un rapport", adrdest)
    If adrdest <> "" Then
        If ModeEnvoiFichier = "" Then
            ModeEnvoiFichier = "E"
        End If
        ModeEnvoiFichier = InputBox("Format E pour Excel ou H pour HTML", "Envoi d'un rapport", ModeEnvoiFichier)
        If InStr(adrdest, "@") > 0 Then
            If p_S_Vers_Conf <> "" Then
                cnd_sversconf = "&s_vers_conf=" & p_S_Vers_Conf
            End If
            nomfich_serv = ""
            nomfich_loc = p_chemin_appli & "\tmp\RP" & Format(Time, "hhmmss") & p_PointExtensionXls
            If Odbc_RecupVal("select pg_adrsmtp, pg_adrwebmaster, pg_smtpuser, pg_smtppassword from prmgen_http", _
                             p_smtp_adrsrv, smtp_webmaster, smtp_user, smtp_password) = P_ERREUR Then
                Envoyer_Simul_Mail = P_ERREUR
                Exit Function
            End If
            
            ' N° de la zone Adrmail
            If Odbc_RecupVal("select ZU_Num from ZoneUtil where ZU_Code='ADRMAIL'", _
                              numzone) = P_ERREUR Then
                Envoyer_Simul_Mail = P_ERREUR
                Exit Function
            End If
            Call Odbc_RecupVal("select u_nom,u_prenom from utilisateur where u_num=" & p_NumUtil, nom, prenom)
            NomExped = UCase(Mid(prenom, 1, 1)) & "." & nom
            sujet = "Un rapport Excel vous est envoyé par " & NomExped
            ' Envoi du message
            If AdrExped <> "" And adrdest <> "" Then
                'Pour que les messages arrivent à Kalitech ...
                If InStr(smtp_webmaster, "kalitech@") > 0 Then
                    NomExped = "Utilisateur" & NomExped
                    AdrExped = "kalitech@kalitech.fr"
                    nomdest = "Utilisateur" & adrdest
                    adrdest = "kalitech@kalitech.fr"
                End If
'smtp_user = "root"
'smtp_password = "Gkpd.835"
'p_smtp_adrsrv = "192.168.101.20"
'p_smtp_adrsrv = "smtp.wanadoo.fr"
'AdrExped = "helene.festoc@kalitech.fr"
'p_smtp_adrsrv = "smtp.online.net"
'smtp_user = "webmaster@kalitech.fr"
'smtp_password = "Gkpd.835"
'p_smtp_adrsrv = "smtp.orange.fr"
'smtp_user = ""
'smtp_password = ""
                Set Frm = FMail_SMTP
                cr = FMail_SMTP.EnvoiMessage(NomExped, AdrExped, adrdest, adrdest, sujet, mess, Fichier, smtp_user, smtp_password)
                Set Frm = Nothing
                If cr < 0 Then
                    Envoyer_Simul_Mail = P_ERREUR
                End If
            End If
        End If
    End If
End Function

Public Sub Vider_TEMP(v_init As Boolean, v_forcer_vider As Boolean, v_creer_temp As Boolean)
    Dim numTemp As String
    Dim Fichier As String
    Dim ret As Integer
    Dim i As Integer
    
    If Excel_Init() = P_ERREUR Then
        Call MsgBox("Impossible de démarrer Excel", vbOKOnly + vbCritical, "")
        End
    End If
    If Exc_obj.Workbooks.Count > 0 Then
        For i = 0 To Exc_obj.Workbooks.Count - 1
            Exc_obj.DisplayAlerts = False
            Exc_obj.ActiveWorkbook.Close
        Next i
    End If
    Fichier = p_Chemin_Modeles_Local & "\Temp_" & p_nummodele & p_PointExtensionXls
    ret = vbNo
    If FICH_FichierExiste(Fichier) Then
        If v_forcer_vider Then
            ret = vbYes
        ElseIf v_init Then
            If FICH_FichierExiste(p_chemin_fichier_liens) Then
                ret = MsgBox("Voulez vous vider le fichier temporaire Temp_" & g_numModele & p_PointExtensionXls, vbDefaultButton2 + vbYesNo)
            End If
        End If
        If ret = vbYes Then
            If FICH_EffacerFichier(Fichier, False) = P_ERREUR Then
                MsgBox "Impossible d'effacer " & Fichier
            End If
            p_chemin_fichier_liens = p_Chemin_Modeles_Local & "\Temp_" & p_nummodele & "_" & p_NumUtil & ".txt"
            If FICH_FichierExiste(p_chemin_fichier_liens) Then
                Call FICH_EffacerFichier(p_chemin_fichier_liens, False)
            End If
            If v_creer_temp Then
                FICH_CopierFichier g_CheminModele, Fichier
                FrmHTML.Visible = True
            Else
                FrmHTML.Visible = False
            End If
        Else
            Call MetFrmHTML_Visible
        End If
    Else
        If v_creer_temp Then
            FICH_CopierFichier g_CheminModele, Fichier
        End If
        Call MetFrmHTML_Visible
    End If
    p_bool_forcer_vider_temp = False
End Sub

Private Sub Conversion_XLSX()

    Dim chemin_du_xls As String, chemin_du_xlsx As String
    Dim laDim As Integer, i As Integer, iret As Integer
    Dim CheminTableau As String, FichServeur As String
    Dim sql As String, rs As rdoResultset
    Dim s As String
    Dim liberr As String
    Dim num_xlOpenXMLWorkbook As Variant
    
    chemin_du_xls = g_CheminModele
    chemin_du_xlsx = Replace(g_CheminModele, ".xls", ".xlsx")
    
    Public_VerifOuvrir chemin_du_xls, True, True, p_tbl_FichExcelOuverts
    ' Enregistrer sous XLSX
    On Error GoTo Lab_Err:
    num_xlOpenXMLWorkbook = Excel.XlFileFormat.xlOpenXMLWorkbook
    ActiveWorkbook.SaveAs FileName:=chemin_du_xlsx, FileFormat:=num_xlOpenXMLWorkbook, CreateBackup:=False, ReadOnlyRecommended:=False
    '' Ajouter au tableau
    'FichServeur = p_Chemin_Modeles_Serveur & "/RP_" & g_numModele & ".xlsx"
    'Call HTTP_Ajouter_Tbl(chemin_du_xlsx, FichServeur, "Doc", True)
    
    ' Modifier le xls en xlsx dans le tableau
    laDim = UBound(p_tbl_HTTP_Fichiers_Chargés(), 1)
    FichServeur = p_Chemin_Modeles_Serveur & "/RP_" & g_numModele & ".xls"
    For i = 0 To laDim
        CheminTableau = p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Fullname_Serveur
        If FichServeur = CheminTableau Then
            s = Replace(p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Fullname_Serveur, ".xls", ".xlsx")
            p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Fullname_Serveur = s
            s = Replace(p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Fullname_Local, ".xls", ".xlsx")
            p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Fullname_Local = s
            Exit For
        End If
    Next i
    ' Supprimer le xls du serveur
    FichServeur = p_Chemin_Modeles_Serveur & "/RP_" & g_numModele & ".xls"
    ' le delocker
    iret = HTTP_Appel_LockDelock_file(False, FichServeur, True, liberr)
    iret = HTTP_Appel_deletefile_simple(FichServeur, True, liberr)
    ' sauvegarder le xlsx
    FichServeur = p_Chemin_Modeles_Serveur & "/RP_" & g_numModele & ".xlsx"
    iret = HTTP_Appel_PutFile(FichServeur, chemin_du_xlsx, True, False, liberr)
    If iret <> HTTP_OK And liberr <> "" Then
        Call MsgBox(liberr)
    End If
    ' le locker
    iret = HTTP_Appel_LockDelock_file(True, FichServeur, True, liberr)
    ' Modifier dans la base
    sql = "update rapport_type set rp_chemin_modele ='RP_" & g_numModele & ".xlsx" & "' where rp_num = " & g_numModele
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        MsgBox "Créer Modèle Erreur : " & sql
    End If
    ' vider temp
    Call Vider_TEMP(False, True, False)
    
    cmd(CMD_VERS_XLSX).Visible = False
    
    ' effacer le fichier xls local
    iret = FICH_EffacerFichier(chemin_du_xls, True)
    
    ' modifier p_PointExtensionXls
    p_PointExtensionXls = ".xlsx"
    p_ExtensionXls = "xlsx"
    g_CheminModele = Replace(g_CheminModele, ".xls", ".xlsx")

     
    Call MsgBox("Votre rapport est maintenant en Version Excel > 2007 (document XML)")
    GoTo lab_fin
Lab_Err:
    MsgBox ("Impossible d'enregistrer au format xlsx")
    On Error GoTo 0
lab_fin:
    
End Sub

Private Sub cmd_Click(Index As Integer)
    Dim NomFichierParam As String
    Dim sret As String
    Dim bret As Boolean
    Dim nbF As Integer, i As Integer, iFEN As String, j As Integer, bDéjà As Boolean
    Dim CheminFichierSimul As String
    Dim strFichG As String, strFichd As String
    Dim numfor As Integer, NumIndice As Integer, leIndex As Integer
    Dim NomCellDest As String, url As String
    Dim ajout As Boolean
    Dim chemin As String
    Dim i_tbl_RDOF As Long
    Dim iret As Integer
    Dim fichierXls As String
    
    Select Case Index
    Case CMD_VERS_XLSX
        Call Conversion_XLSX
    Case CMD_VISIBLE_EXCEL
        On Error Resume Next
        Exc_obj.Visible = True
        Exc_obj.DisplayFullScreen = False
        Exc_obj.WindowState = xlMaximized
        Exc_obj.DisplayAlerts = True
        On Error GoTo 0
    Case CMD_VIDER_TEMP
        If Not ChargementEnCours Then
            Call Vider_TEMP(False, True, False)
        End If
    Case CMD_ENVOYER_MAIL
        Call Envoyer_Simul_Mail
    Case CMD_VOIR_HTML
        Call Ouvrir_IE_HTML
    Case CMD_VOIR_TEMP
        Call Ouvrir_TEMP
    Case CMD_FAIRE_HTML
        Call Faire_HTML
    Case CMD_CPY_CONDCHAMP
        If cmd(CMD_CPY_CONDCHAMP).BackColor = P_GRIS_CLAIR Then
            cmd(CMD_CPY_CONDCHAMP).BackColor = P_JAUNE
            Call MnuSelectionStop_Click
        Else
            cmd(CMD_CPY_CONDCHAMP).BackColor = P_GRIS_CLAIR
            cmd(CMD_CPY_CONDCHAMP).Visible = False
        End If
    Case CMD_PRM_DEMANDER
        i_tbl_RDOF = -1
        ' c'est le bon filtre pour ce champ
        i_tbl_RDOF = -1
        For j = 0 To UBound(tbl_rdoF())
            If tbl_rdoF(j).RDOF_num = p_numfiltre_encours And tbl_rdoF(j).RDOF_FormIndice = p_numindice_encours Then
                i_tbl_RDOF = j
                Exit For
            End If
        Next j
        If i_tbl_RDOF > -1 Then
            sret = FctPoserQuestion("PARAM", p_numfiltre_encours, p_numindice_encours, i_tbl_RDOF, p_Simul_ITab, True)
        End If
    Case CMD_GENERER_AUTO
        Call FctGraphGerenerAuto
    Case CMD_MODE_LIEN
        url = STR_GetChamp(Me.cmd(CMD_MODE_LIEN).tag, "|", 1)
        Me.cmd(CMD_MODE_LIEN).Picture = Me.PictureLien(1).Picture
        Me.TimerPictureLien.Enabled = True
        Me.TimerPictureLien.Interval = 500
        Me.TimerPictureLien.tag = 0
        Shell "C:\Program Files\Internet Explorer\iexplore.exe " & url, vbMaximizedFocus
    Case CMD_MODE_SIMUL
        p_dansExcel = False
        p_dansGrid = True
        'MsgBox tbl_fichExcel(p_Simul_ITab).CmdX
        If p_Simul_ITab = -1 Then p_Simul_ITab = 1
        p_Simul_IFen = tbl_fichExcel(p_Simul_ITab).CmdFenNum
        Call MnuSimulCellSimul_Click
    Case CMD_MODE_GRAPHIQUE
    Case CMD_MODE_CHAMP
        If Me.cmd(CMD_MODE_CHAMP).Picture = Me.imglst.ListImages(IMG_BOULEBF).Picture Or Me.cmd(CMD_MODE_CHAMP).Picture = Me.imglst.ListImages(IMG_CHP_LOUPEB).Picture Or Me.cmd(CMD_MODE_CHAMP).Picture = Me.imglst.ListImages(IMG_CHP_LOUPER).Picture Then
            'If tbl_fichExcel(p_i_tabExcel).CmdChpNum <= -10 Then
            '    MsgBox "Champ de type Nombre de Fiches : non modifiable"
            '    Exit Sub
            'End If
            g_Ajouter_Champ_Index = Me.MnuChpAjout.tag
            g_Ajouter_Champ_numfiltre_encours = p_numfiltre_encours
            g_Ajouter_Champ_grdCell_RowSel = grdCell(Me.MnuChpAjout.tag).RowSel
            g_Ajouter_Champ_grdCell_ColSel = grdCell(Me.MnuChpAjout.tag).ColSel
            g_Ajouter_Champ_bdeja = True
            If tbl_fichExcel(p_i_tabExcel).CmdChpNum = 0 Then
                ajout = True
            Else
                ajout = False
            End If
            If Mid(tbl_fichExcel(p_i_tabExcel).cmdTypeChp, 1, 6) = "Liste=" Then
                Call ajouter_champ_filtre(g_Ajouter_Champ_Index, p_numfiltre_encours, g_Ajouter_Champ_grdCell_RowSel, g_Ajouter_Champ_grdCell_ColSel, ajout, True)
            Else
                Call ajouter_champ(g_Ajouter_Champ_Index, g_Ajouter_Champ_numfiltre_encours, g_Ajouter_Champ_grdCell_RowSel, g_Ajouter_Champ_grdCell_ColSel, ajout, True)
            End If
            Me.cmd(CMD_MODE_CHAMP).Visible = False
            cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
            Me.cmd(CMD_MODE_SIMUL).Visible = False
            Me.cmd(CMD_MODE_LIEN).Visible = False
        End If
    Case CMD_MODE_FORMULE
        Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Activate
        NomCellDest = FctFaitNomCellDest(grdCell(g_numfeuille).col, grdCell(g_numfeuille).row)
        Me.cmd(CMD_MODE_FORMULE).Visible = False
        
        Me.FrmProp.Visible = False
        cmd(CMD_MODE_POLICE).Visible = False
        cmd(CMD_MODE_CHAMP).Visible = False
        cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
        cmd(CMD_MODE_SIMUL).Visible = False
        cmd(CMD_MODE_LIEN).Visible = False
        ' début du mode formule
        bModeFormule = True
        g_ColSelDest = NomCellDest
        Me.FrmFormule.Visible = True
        Me.FrmFormule.Caption = "Formule pour " & NomCellDest
        Me.TxtFormule.Text = ""
        If Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(NomCellDest).HasFormula Then
            Me.TxtFormule.Text = Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(NomCellDest).FormulaLocal
            Me.TxtFormule.Text = Replace(Me.TxtFormule.Text, "=", "")
            Me.TxtFormule.Text = Replace(Me.TxtFormule.Text, "SUM", "SOMME")
            Me.TxtFormule.Text = Replace(Me.TxtFormule.Text, ",", ";")
        End If
        Me.TxtFormule.SelStart = Len(Me.TxtFormule.Text)
        Me.TxtFormule.SetFocus
    Case CMD_MODE_POLICE
        Dim etape As Integer
        On Error GoTo ErrCMD_MODE_POLICE
        Me.cmd(CMD_MODE_POLICE).Visible = False
        Me.FrmProp.Visible = Not Me.FrmProp.Visible
        If Me.FrmProp.Visible Then
            etape = 1
            Me.FrmFormule.Visible = False
            cmd(CMD_MODE_FORMULE).Visible = False
            cmd(CMD_MODE_CHAMP).Visible = False
            cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
            cmd(CMD_MODE_SIMUL).Visible = False
            cmd(CMD_MODE_LIEN).Visible = False
            etape = etape + 1
            Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Activate
            etape = etape + 1
            NomCellDest = FctFaitNomCellDest(grdCell(g_numfeuille).col, grdCell(g_numfeuille).row)
            Me.FrmProp.Caption = "Style et Police pour " & NomCellDest
            Me.txtPolice.Text = Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(NomCellDest).Value
        
            If Me.txtPolice.Text = "" Then
                Me.txtPolice.Text = "Votre texte"
                Me.txtPolice.SelStart = 0
                Me.txtPolice.SelLength = Len(Me.txtPolice.Text)
            End If
            etape = etape + 1
            ComDialog.FontName = Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(NomCellDest).Font.Name
            etape = etape + 1
            ComDialog.FontSize = Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(NomCellDest).Font.Size
            etape = etape + 1
            ComDialog.FontBold = Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(NomCellDest).Font.Bold
            etape = etape + 1
            ComDialog.FontItalic = Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(NomCellDest).Font.Italic
            etape = etape + 1
            ComDialog.Color = Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(NomCellDest).Font.Color
            etape = etape + 1
            Me.txtPolice.FontName = ComDialog.FontName
            etape = etape + 1
            Me.txtPolice.FontBold = ComDialog.FontBold
            etape = etape + 1
            Me.txtPolice.FontItalic = ComDialog.FontItalic
            etape = etape + 1
            Me.txtPolice.FontSize = ComDialog.FontSize
            etape = etape + 1
            Me.txtPolice.ForeColor = ComDialog.Color
            etape = etape + 1
            If g_Police_Name <> "" Then
                cmdPolice(Cmd_Police_Coller).Enabled = True
            Else
                cmdPolice(Cmd_Police_Coller).Enabled = False
            End If
            
            g_ColSelDest = NomCellDest
            etape = etape + 1
            Me.txtPolice.SetFocus
            
            'sret = ChoisirFont("")
        End If
        Exit Sub
ErrCMD_MODE_POLICE:
        'MsgBox "cmd - click CMD_MODE_POLICE étape=" & etape & " " & Error$
        Resume Next
    Case CMD_ACCES_KALIDOC
        Call Ouvrir_KaliDoc
        'Call Shell(p_chemin_appli & "\Lance.exe " & p_chemin_appli & ";KaliDoc;;DESACTIVER_PERS=" & g_numutil)
        'Call SYS_Sleep(1000)
    Case CMD_AJOUT_COND_CHAMP
        If p_i_tabExcel > 0 Then
            Call ajouter_condChamp("Ajout", 0, 0, "")
        Else
            Call MsgBox("Vous devez d'abord sélectionner un champ pour lui ajouter une condition")
        End If
    Case CMD_SUPPR_COND_CHAMP
        If Mid(tbl_fichExcel(p_i_tabExcel).cmdTypeChp, 1, 6) = "Liste=" Then
            ' juste supprimer dans le grid
            i = grdCondChamp(tbl_fichExcel(p_i_tabExcel).CmdChpGridIndice).row
            grdCondChamp(tbl_fichExcel(p_i_tabExcel).CmdChpGridIndice).col = GrdCondChpImgDetail
            grdCondChamp(tbl_fichExcel(p_i_tabExcel).CmdChpGridIndice).RowHeight(i) = 260
            Set grdCondChamp(tbl_fichExcel(p_i_tabExcel).CmdChpGridIndice).CellPicture = imglst.ListImages(IMG_CHP_GOMME).Picture
            Call verifSiSauve
        Else
            If p_i_tabExcel > 0 Then
                Call ajouter_condChamp("Suppr", 0, g_i_CondTbChamp, "")
            Else
                Call MsgBox("Vous devez d'abord sélectionner un champ pour lui ajouter une condition")
            End If
        End If
    Case CMD_TMP_VERS_MODELE
        Call Fct_Tmp_Vers_Modele("TversM")
    Case CMD_MODELE_VERS_TMP
        Call Fct_Tmp_Vers_Modele("Back")
    Case CMD_FAIRE_FICHIER
        Call FctPublier
    
    Case CMD_PARAM_PUBLIER
        Call FctPrmPublier
    
    Case CMD_PUBLIER
        Call FctPublier
    
    Case CMD_CHARGER_LE_RESTE
        grdFeuille_dblClick
    Case CMD_TOUT_CHARGER
        Me.Refresh
        Me.LblHelp.Visible = True
        MenuG.LblGauge.Visible = True
        MenuG.LblGauge.Caption = "Chargement des " & UBound(tbl_fenExcel()) & " Feuilles du Tableau de bord"
        MenuG.PgFeuille.Visible = True
        MenuG.PgFeuille.max = UBound(tbl_fenExcel())
        For i = 1 To UBound(tbl_fenExcel())
            MenuG.PgFeuille.Value = i
            MenuG.lblWait.Caption = "Chargement des Feuilles : " & tbl_fenExcel(i).FenNom
            Me.LblHelp.Caption = "Chargement de la feuille : " & tbl_fenExcel(i).FenNom & " ( " & tbl_fenExcel(i).FenRowMax & " Lignes : " & tbl_fenExcel(i).FenColMax & " Colonnes )"
            Me.LblHelp.Refresh
            grdFeuille.row = i - 1
            If p_TraitPublier = "G" Then MenuG.Caption = "Chargement de la feuille : " & tbl_fenExcel(i).FenNom
            grdFeuille_dblClick
        Next i
        MenuG.LblGauge.Visible = False
        MenuG.PgFeuille.Visible = False
        Me.LblHelp.Visible = False
    Case CMD_VOIR_FORM
        Call Voir_Formulaire
    Case CMD_AIDE
        Call Appel_Aide
    Case CMD_OUVRIR_PARAM
        NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
        If InStr(NomFichierParam, ".") = 0 Then
            NomFichierParam = NomFichierParam & "."
        End If
        Call afficher(NomFichierParam & "txt")
    Case CMD_VOIR_LISTE
        'Ouvrir_IE_SQL (cmd(CMD_VOIR_SQL).tag)
    Case CMD_VOIR_SQL
        Dim ij As Integer, LaCaption As String, MenFType As String, MenFToutes As String, MenFVal As String, lib As String
        If g_modeSQL_LIB = "LIB" Or g_modeSQL_LIB = "" Then
            ' on passe en mode SQL
            g_modeSQL_LIB = "SQL"
            cmd(CMD_VOIR_SQL).Caption = "Voir le Libellé"
            If cmd(CMD_VOIR_SQL).tag <> "" Then
                Me.LblHelp.Visible = True
                Me.LblHelp.Caption = STR_GetChamp(cmd(CMD_VOIR_SQL).tag, "|", 0)
            Else
                Me.LblHelp.Visible = False
            End If
        ElseIf g_modeSQL_LIB = "SQL" Then
            ' on passe en mode lib
            g_modeSQL_LIB = "LIB"
            cmd(CMD_VOIR_SQL).Caption = "Voir le SQL"
            Me.LblHelp.Visible = True
            ij = cmd(CMD_VOIR_LISTE).tag
            LaCaption = tbl_cell(ij).CellTag & Chr(13) & Chr(10) & tbl_cell(ij).CellPortee
            Me.LblHelp.Caption = LaCaption
        End If
    Case CMD_VOIR_FICHIER_PARAM
        NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
        If InStr(NomFichierParam, ".") = 0 Then
            NomFichierParam = NomFichierParam & "."
        End If
        Call afficher(NomFichierParam & ".txt")
    Case CMD_PRM_FORM
        Call ajouter_filtre
    Case CMD_SUPPR_FORM
        Call supprimer_form
    Case CMD_PRM_COND
        'If p_i_tabExcel > 0 Then
            Call ajouter_cond("Ajout", 0)
            numfor = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num)
            NumIndice = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice)
            ' mettre les bonnes couleurs
            leIndex = FctAttribIndex(numfor, NumIndice)
            'leIndex = (numfor * 100) + NumIndice
            Call FctMetCouleur("COND", grdCond(leIndex))
        'Else
        '    Call MsgBox("Vous devez d'abord sélectionner un champ pour lui ajouter une condition")
        'End If
    Case CMD_SUPPR_COND
        Call supprimer_cond
    Case CMD_NOUVEAU_MODELE
        p_Appel_Création_Nouveau_Modele = True
        Call quitter("")
    Case CMD_FERMER
        Call quitter("")
    Case CMD_RAFRAICHIR
        Call Rafraichir
    Case CMD_ENREGISTRER
        Call enregistrer
    Case CMD_EXCEL_CELL
        If cmd(CMD_TMP_VERS_MODELE).Visible Then
            If MsgBox("Voulez vous d'abord transformer votre simulation en modèle", vbYesNo + vbQuestion + vbDefaultButton2, "Une simulation a été effectuée") = vbYes Then
                If Not Fct_Tmp_Vers_Modele("TversM") Then Exit Sub
            End If
            cmd(CMD_TMP_VERS_MODELE).Visible = False
        End If
        
        Public_VerifOuvrir g_CheminModele, True, True, p_tbl_FichExcelOuverts
        For i = 1 To Exc_obj.Workbooks.Count
            strFichG = Replace(UCase(Exc_obj.Workbooks(i).FullName), "\", "$")
            strFichG = Replace(strFichG, "/", "$")
            strFichd = Replace(UCase(g_CheminModele), "\", "$")
            strFichd = Replace(strFichd, "/", "$")
            If strFichG = strFichd Then
                Exc_obj.Workbooks(i).Save
                Exc_obj.Workbooks(i).Activate
                Exc_obj.ActiveWorkbook.Sheets(1).Activate
                Call Excel_MetVisible
                Exit For
            End If
        Next i
        Call verifSiSauve
        'Call verifSiSauve
    
    Case CMD_SIMULATION_UNE
        'Call MetFrmHTML_Visible
        Erase P_tb_conditions
        p_dansExcel = True
        p_dansGrid = False
        p_ModePublication = ""
        Dim ret As Integer
        ret = Excel_Simulation("Feuille", CheminFichierSimul, iret)
        If iret = P_OK Then
            Call Remplir_XLS(p_Simul_IFen, 0)
            Call FctTrace("Retour de Excel_Simulation")
            If iret = P_ERREUR Then Exit Sub
            For i = 1 To Exc_obj.Workbooks.Count
                strFichG = Replace(UCase(Exc_obj.Workbooks(i).FullName), "\", "$")
                strFichG = Replace(strFichG, "/", "$")
                strFichd = Replace(UCase(CheminFichierSimul), "\", "$")
                strFichd = Replace(strFichd, "/", "$")
                If strFichG = strFichd Then
                    Call FctTrace("Sauve du Excel " & strFichd)
                    Exc_obj.Workbooks(i).Save
                    Exc_obj.Workbooks(i).Activate
                    Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Activate
                    'Call Excel_MetVisible
                    Exit For
                End If
            Next i
        End If
        Call FctTrace("Avant MetFrmHTML_Visible")
        Call MetFrmHTML_Visible
        MsgBox "La simulation est terminée"
        If p_dansExcel Then
            If p_TraitPublier = "P" Then
                fichierXls = p_Chemin_Modeles_Local & "\Temp_" & p_nummodele & p_PointExtensionXls
                Call BougerFichierLiens(p_chemin_fichier_liens, p_numRandom)
            Else
                fichierXls = p_Chemin_Modeles_Local & "\Temp_" & p_nummodele & p_PointExtensionXls
            End If
            Call Public_VerifOuvrir(fichierXls, True, True, p_tbl_FichExcelOuverts())
        End If
        p_dansExcel = False
        Call FctTrace("Après MetFrmHTML_Visible")
        
    Case CMD_SIMULATION_ECRAN
        p_dansExcel = False
        p_dansGrid = True
        'MsgBox tbl_fichExcel(p_Simul_ITab).CmdX
        If p_Simul_ITab = -1 Then p_Simul_ITab = 1
        If p_Simul_ITab > 0 Then p_Simul_IFen = tbl_fichExcel(p_Simul_ITab).CmdFenNum
        Call Excel_Simulation("Feuille", chemin, iret)
        'Call MetFrmHTML_Visible
        PgBarFeuille.Visible = False
        PgBarChp.Visible = False
        MsgBox "La simulation est terminée"
    Case CMD_SIMULATION
        p_dansExcel = True
        p_dansGrid = False
        p_ModePublication = ""
        ret = Excel_Simulation("Toutes", CheminFichierSimul, iret)
        If iret = P_OK Then
            Call Remplir_XLS(0, 0)
            Call FctTrace("Retour de Excel_Simulation")
            If iret <> P_OK Then Exit Sub
            For i = 1 To Exc_obj.Workbooks.Count
                strFichG = Replace(UCase(Exc_obj.Workbooks(i).FullName), "\", "$")
                strFichG = Replace(strFichG, "/", "$")
                strFichd = Replace(UCase(CheminFichierSimul), "\", "$")
                strFichd = Replace(strFichd, "/", "$")
                If strFichG = strFichd Then
                'If UCase(Exc_obj.Workbooks(i).FullName) = UCase(CheminFichierSimul) Then
                    Exc_obj.Workbooks(i).Save
                    Exc_obj.Workbooks(i).Activate
                    Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Activate
                    'Call Excel_MetVisible
                    Exit For
                End If
            Next i
        End If
        'p_dansExcel = False
        Call MetFrmHTML_Visible
        MsgBox "La simulation est terminée"
        If p_dansExcel Then
            If p_TraitPublier = "P" Then
                fichierXls = p_Chemin_Modeles_Local & "\Temp_" & p_nummodele & p_PointExtensionXls
                Call BougerFichierLiens(p_chemin_fichier_liens, p_numRandom)
            Else
                fichierXls = p_Chemin_Modeles_Local & "\Temp_" & p_nummodele & p_PointExtensionXls
            End If
            Call Public_VerifOuvrir(fichierXls, True, True, p_tbl_FichExcelOuverts())
        End If

        p_dansExcel = False
        Call FctTrace("Après MetFrmHTML_Visible")
        PgBarFeuille.Visible = False
        PgBarChp.Visible = False
    Case CMD_AJOUT_FENETRE
        Call Ajout_Fenetre(0, "")
    Case CMD_FEN_FL_HAUT
        MoveFen (CMD_FEN_FL_HAUT)
    Case CMD_FEN_FL_BAS
        MoveFen (CMD_FEN_FL_BAS)
    Case CMD_PARAM_FILTRE
        Call Ouvrir_IE_Filtre
    Case CMD_NOUVEAU_FILTRE
        Call Nouveau_IE_Filtre(0)
    Case CMD_AJOUT_DEM
        Call Fct_Demande("Ajout")
        ' mettre les bonnes couleurs
        Call FctMetCouleur("DEM", grdDem)
    Case CMD_SUPPR_DEM
        Call Fct_Demande("Suppr")
    End Select
End Sub

Public Function BougerFichierLiens(chemin_fichier_liens, p_numRandom)
    Dim nomfich_serv As String, nomfich_loc As String
    Dim s As String
    Dim slash As String
    
    slash = "\"
    nomfich_loc = chemin_fichier_liens
    s = STR_GetChamp(nomfich_loc, slash, STR_GetNbchamp(nomfich_loc, slash) - 1)
    nomfich_serv = Replace(nomfich_loc, s, p_numRandom & ".txt")
    nomfich_serv = Replace(nomfich_serv, p_Chemin_Modeles_Local, p_Chemin_Modeles_Serveur)
    nomfich_serv = Replace(nomfich_serv, p_Chemin_Modeles_Serveur, p_Chemin_Modeles_Serveur & "/Resultats/Simulation")
    nomfich_loc = Replace(nomfich_loc, "\", "/")
    nomfich_serv = Replace(nomfich_serv, "\", "/")
    s = p_Chemin_Modeles_Serveur & "/Resultats/Simulation"
    s = Replace(s, "/Modeles_Serveur", "")
    If Not KF_EstRepertoire(s, False) Then
        Call KF_CreerRepertoire(s)
    End If
    nomfich_serv = Replace(nomfich_serv, "/Modeles_Serveur", "")
    'Debug.Print nomfich_serv
    If FICH_FichierExiste(nomfich_loc) Then
        If KF_PutFichier(nomfich_serv, nomfich_loc) = P_ERREUR Then
            MsgBox "Erreur de dépot pour " & nomfich_serv
        End If
    End If
End Function
Public Function Remplir_XLS(ByVal la_Feuille As Integer, ByVal le_I_TabExcel As Integer)
    ' le_I_TabExcel renseigné seulement pour le traitement des répartitions => n'afficher que pour ce champ
    Dim fichierLiens As String
    Dim fichierXls As String
    Dim DblVal As Double
    Dim IsNum As Boolean
    Dim i As Integer
    
    If p_dansExcel Then
        Me.LblHelp.Caption = "Remplissage de Temp_" & p_nummodele & p_PointExtensionXls
        If p_TraitPublier = "P" Then
            fichierLiens = p_Chemin_Modeles_Local & "\Temp_" & p_nummodele & "_" & p_NumUtil & ".txt"
            fichierXls = p_Chemin_Modeles_Local & "\Temp_" & p_nummodele & p_PointExtensionXls
        Else
            fichierLiens = p_Chemin_Modeles_Local & "\RP_Liens_" & p_numFichier_Liens & ".txt"
            fichierXls = p_Chemin_Modeles_Local & "\Temp_" & p_nummodele & p_PointExtensionXls
        End If
    End If
    If FICH_FichierExiste(fichierLiens) Then
        If FICH_FichierExiste(fichierXls) Then
            Call Public_VerifOuvrir(fichierXls, True, True, p_tbl_FichExcelOuverts())
        End If
        If p_ModePublication <> "Publier" Then
            ' pour attendre si message lors de la sauvegarde
            Dim wait As Boolean
            wait = True
            While wait
                On Error GoTo LabWait
                Exc_obj.Visible = True
                GoTo LabApres
LabWait:
                Sleep (100)
            Wend
        End If
LabApres:
        Me.LblHelp.Visible = True
        Dim fpIn As Integer
        Dim Ligne As String
        Dim Feuille As String, laCell As String
        Dim valeur As String, LeLien As String, MenForme As String
        Dim LesLinks As Hyperlinks
        Dim leX As String, leY As String
        Dim x As Integer, y As Integer
        Dim II As Integer
        Dim jj As Integer
        Dim sii As String
        Dim Fin As Integer
        Dim nb As Integer
        Dim tb_conditions() As TB_CONDITION_FILTRE
        Dim deja As Boolean
        Dim url As String
        Dim bHyperL As Boolean
        
        ' Mettre le titre
        Me.LblHelp.Alignment = 0
        nb = 0
        On Error GoTo LabSuite
        Fin = UBound(P_tb_conditions)
        For II = 0 To Fin
            deja = False
            'If nb > 0 Then
                For jj = 0 To UBound(tb_conditions)
                    If tb_conditions(jj).titre = P_tb_conditions(II).titre Then
                        deja = True
                        nb = nb + 1
                        Exit For
                    End If
                Next jj
            'End If
            If Not deja Then
                ReDim Preserve tb_conditions(nb)
                tb_conditions(nb).titre = P_tb_conditions(II).titre
                nb = nb + 1
            End If
        Next II
        If nb > 0 Then
            For II = 0 To UBound(tb_conditions)
                sii = sii & Chr(10) & tb_conditions(II).titre
            Next II
            On Error Resume Next
            Exc_wrk.ActiveSheet.Range("B1").Select
            Exc_wrk.ActiveSheet.Range("B1").AddComment
            Exc_wrk.ActiveSheet.Range("B1").Comment.Text Text:=sii & Chr(10) & ""
        End If
LabSuite:
    
        FICH_OuvrirFichier fichierLiens, FICH_LECTURE, fpIn
        On Error Resume Next
        While Not EOF(fpIn)
LabSuivant:
            Line Input #fpIn, Ligne
            If p_ModePublication = "Publier" Then
                Publier.PgbarHTTPDTemps.Value = IIf(Publier.PgbarHTTPDTemps.Value > 99, 1, Publier.PgbarHTTPDTemps.Value)
                Publier.PgbarHTTPDTemps.Value = Publier.PgbarHTTPDTemps.Value + 1
            End If
            If le_I_TabExcel > 0 Then
                ' on ne renseigne que celui là
                If STR_GetChamp(Ligne, "|", 7) <> le_I_TabExcel Then
                    GoTo LabSuivant
                End If
            End If
            Dim lafeuille As String, s As String
            Feuille = STR_GetChamp(Ligne, "|", 0)
            'Debug.Print Feuille
            If (la_Feuille = 0) Or (la_Feuille > 0 And la_Feuille = Feuille) Then
                laCell = STR_GetChamp(Ligne, "|", 3)
                lafeuille = STR_GetChamp(Ligne, "|", 1)
                valeur = STR_GetChamp(Ligne, "|", 4)
                On Error Resume Next
                s = getNomFeuille(lafeuille)
                Me.LblHelp.Caption = "Remplissage de temp" & p_PointExtensionXls & " Feuille " & s & " " & laCell
                Me.LblHelp.Refresh
                Exc_obj.ActiveWorkbook.Sheets(CInt(Feuille)).Activate
                If IsNumeric(valeur) Then
                    DblVal = CDbl(valeur)
                    Exc_obj.ActiveWorkbook.ActiveSheet.Range(laCell).Value = DblVal
                    IsNum = True
                Else
                    Exc_obj.ActiveWorkbook.ActiveSheet.Range(laCell).Value = valeur
                    IsNum = False
                End If
                bHyperL = (p_ModePublication = "Publier" And Publier.ChkHyperlien.Value = 1) Or (p_ModePublication = "Param" And PiloteExcelBis.ChkHyperlien.Value = 1)
                If bHyperL Then
                    LeLien = STR_GetChamp(Ligne, "|", 6)
                    If LeLien <> "" Then
                        leX = STR_GetChamp(Ligne, "|", 1)
                        leY = STR_GetChamp(Ligne, "|", 2)
                        x = CInt(leX)
                        y = CInt(leY)
                        Set LesLinks = Exc_obj.ActiveWorkbook.ActiveSheet.Hyperlinks
                        LesLinks.Add Anchor:=Exc_obj.ActiveWorkbook.ActiveSheet.Cells(y, x), Address:=LeLien
                    End If
                    MenForme = STR_GetChamp(Ligne, "|", 5)
                    If MenForme = "POURCENT" And IsNum Then
                        If Right$(Exc_obj.ActiveWorkbook.ActiveSheet.Range(laCell).NumberFormat, 1) <> "%" Then
                            Exc_obj.ActiveWorkbook.ActiveSheet.Range(laCell).NumberFormat = "0.00%"
                        End If
                        Exc_obj.ActiveWorkbook.ActiveSheet.Range(laCell).Value = Exc_obj.ActiveWorkbook.ActiveSheet.Range(laCell).Value / 100
                    End If
                End If
            End If
        Wend
        Close #fpIn
        '
        If le_I_TabExcel > 0 Then
            ' on doit supprimer tout ce champ pour ne pas le faire 2 fois
            Dim tbl()
            Dim leUbound As Integer
            Dim prem As Boolean
            prem = True
            FICH_OuvrirFichier fichierLiens, FICH_LECTURE, fpIn
            While Not EOF(fpIn)
                Line Input #fpIn, Ligne
                'Debug.Print ligne
                If STR_GetChamp(Ligne, "|", 7) <> le_I_TabExcel Then
                    If prem Then
                        leUbound = 0
                        prem = False
                    Else
                        leUbound = UBound(tbl) + 1
                    End If
                    ReDim Preserve tbl(leUbound)
                    tbl(leUbound) = Ligne
                End If
            Wend
            Close #fpIn
            Call FICH_EffacerFichier(fichierLiens, False)
            If leUbound > 0 Then
                FICH_OuvrirFichier fichierLiens, FICH_ECRITURE, fpIn
                For i = 0 To leUbound
                    Ligne = tbl(i)
                    Print #fpIn, Ligne
                Next i
                Close #fpIn
            End If
        End If
    End If
    Me.LblHelp.Caption = ""
    Me.LblHelp.Alignment = 2
End Function

Private Function getNomFeuille(ByVal i_Fen As Integer)
Dim s As String
    
    On Error GoTo LabFin
    s = tbl_fenExcel(i_Fen).FenNom
    getNomFeuille = s
    Exit Function
LabFin:
    getNomFeuille = i_Fen
End Function
Private Function MetFrmHTML_Visible()
    Dim numTemp As String
    Dim chemin  As String
    Dim Fichier As String
    
    Fichier = p_Chemin_Modeles_Local & "\Temp_" & g_numModele & p_PointExtensionXls
    If FICH_FichierExiste(Fichier) Then
        FrmHTML.Visible = True
        
        chemin = p_Chemin_Résultats & "/Temp/Temp_" & g_numModele & "/Temp_" & p_NumUtil & ".html"
        If KF_FichierExiste(chemin) Then
            cmd(CMD_VOIR_HTML).Visible = True
        Else
            cmd(CMD_VOIR_HTML).Visible = False
        End If
        cmd(CMD_VOIR_TEMP).Visible = True
        cmd(CMD_VIDER_TEMP).Visible = True
        cmd(CMD_FAIRE_HTML).Visible = True
        cmd(CMD_ENVOYER_MAIL).Visible = True
    Else
        FrmHTML.Visible = False
    End If
End Function

Private Function afficher(ByVal v_CheminFichier As String)
    
    If FICH_FichierExiste(v_CheminFichier) Then
        StartProcess v_CheminFichier
    Else
        MsgBox "Fichier " & v_CheminFichier & " introuvable"
    End If

End Function

Private Function Fct_Demande(v_Trait As String)
    Dim ind As Integer, ForNum As Integer, chpnum As Integer, i As Integer
    Dim rs As rdoResultset, sql As String, bDéjà As Boolean
    Dim iDem As Integer, s As String, lig As Integer
    Dim j As Integer
    Dim sOp As String
    Dim sFFNum As String
    
    If v_Trait = "Ajout" Then
        Call CL_Init
        Call CL_InitTitreHelp("Choix du Champ de formulaire", "")
        Call CL_AddBouton("", p_chemin_appli + "\btnok.gif", vbKeyO, vbKeyF1, 0)
        Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
        ' chercher le formulaire
        sql = "select * from filtreform where ff_num = " & p_numfiltre_encours
        Set rs = Odbc_Cnx.OpenResultset(sql, rdOpenKeyset, rdConcurRowVer)
        If Not rs.EOF Then
            ForNum = rs("ff_fornum")
            s = STR_GetChamp(rs("FF_Fornums"), "*", 0)
            sOp = ""
            If s = "FF" Or s = "FP" Then
                sFFNum = "forec_fornum = " & STR_GetChamp(rs("FF_Fornums"), "*", 1) & " Or " & "forec_fornum = " & STR_GetChamp(rs("FF_Fornums"), "*", 2)
                sOp = "2"
            ElseIf s = "N" Then
                sFFNum = "forec_fornum = " & STR_GetChamp(rs("FF_Fornums"), "*", 1)
            End If
            sql = "select * from formetapechp, formulaire where (" & sFFNum & ") and for_num=forec_fornum" _
                & " order by forec_numetape, forec_ordre"
            Set rs = Odbc_Cnx.OpenResultset(sql, rdOpenKeyset, rdConcurRowVer)
            While Not rs.EOF
                bDéjà = False
                If p_bool_tbl_Demande Then
                    For i = 0 To UBound(tbl_Demande)
                        If tbl_Demande(i).DemandChpNum = rs("forec_num") Then
                            'bDéjà = True
                            Exit For
                        End If
                    Next i
                End If
                If Not bDéjà Then
                    Call CL_AddLigne(rs("FOR_Lib").Value & " " & rs("FOREC_Label").Value, rs("FOREC_Num").Value, "", False)
                End If
                rs.MoveNext
            Wend
            Call CL_InitTaille(0, -20)
            ChoixListe.Show 1
    
            ' Quitter
            If CL_liste.retour = 1 Then
                Exit Function
            End If
    
            ' Ajouter
            On Error GoTo err_TabDem
            iDem = UBound(tbl_Demande) + 1
            GoTo SuiteDem
err_TabDem:
            iDem = 0
            Resume SuiteDem
SuiteDem:
            On Error GoTo 0
            ReDim Preserve tbl_Demande(iDem)
            p_bool_tbl_Demande = True
            tbl_Demande(iDem).DemandFFNum = p_numfiltre_encours
            tbl_Demande(iDem).DemandForNum = ForNum
            tbl_Demande(iDem).DemandFormInd = p_numindice_encours
            tbl_Demande(iDem).DemandChpNum = CL_liste.lignes(CL_liste.pointeur).num
            chpnum = CL_liste.lignes(CL_liste.pointeur).num
            tbl_Demande(iDem).DemandChpStr = FctNomChp(chpnum) & " (" & ForNum & "_" & p_numindice_encours & ")"
            tbl_Demande(iDem).DemandFouA = "A"  '   "L"
            tbl_Demande(iDem).DemandGlobale = "LO"
            Call Odbc_RecupVal("Select forec_valeurs_possibles from formetapechp where forec_num=" & chpnum, s)
            tbl_Demande(iDem).DemandValeursPossibles = val(s)
            ' ajouter dans le grid
            lig = grdDem.Rows
            grdDem.AddItem i & vbTab & tbl_Demande(iDem).DemandChpNum & vbTab & tbl_Demande(iDem).DemandChpStr & vbTab & tbl_Demande(iDem).DemandGlobale & vbTab & tbl_Demande(iDem).DemandFouA, lig
            grdDem.Visible = True
            grdDem.row = lig
            Call grdDem_DblClick
            cmd(CMD_AJOUT_DEM).Visible = True
            cmd(CMD_SUPPR_DEM).Visible = True
            cmd(CMD_PRM_DEMANDER).Visible = cmd(CMD_SUPPR_DEM).Visible
            Call verifSiSauve
        End If
    End If

    If v_Trait = "Suppr" Then
        lig = grdDem.row
        ' supprimer du tableau
        tbl_Demande(grdDem.TextMatrix(lig, 0)).DemandChpNum = -1
        ' supprimer du grid
        For i = lig To grdDem.Rows - 2
            For j = 0 To grdDem.Cols - 1
                grdDem.TextMatrix(i, j) = grdDem.TextMatrix(i + 1, j)
            Next j
        Next i
        grdDem.Rows = grdDem.Rows - 1
        If grdDem.Rows > 0 Then
            grdDem.Visible = True
            cmd(CMD_AJOUT_DEM).Visible = True
            cmd(CMD_SUPPR_DEM).Visible = True
            cmd(CMD_PRM_DEMANDER).Visible = cmd(CMD_SUPPR_DEM).Visible
        Else
            grdDem.Visible = False
            cmd(CMD_AJOUT_DEM).Visible = True
            cmd(CMD_SUPPR_DEM).Visible = False
            cmd(CMD_PRM_DEMANDER).Visible = cmd(CMD_SUPPR_DEM).Visible
        End If
        Call verifSiSauve
    End If
End Function

Private Function FctPublier()
    Dim Frm As Form
    
    Set Frm = Publier
    Publier.AppelFrm (g_numModele)
    Set Frm = Nothing
    
    Call quitter("")
    
End Function

Private Function FctPrmPublier()
    
    Dim Frm As Form
    Dim bcr As Boolean
    Dim NomFichierParam As String
    Dim AncMode As String
    
    AncMode = p_TraitPublier
    p_TraitPublier = "G"
    
    NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
    If InStr(NomFichierParam, ".") = 0 Then
        NomFichierParam = NomFichierParam & "."
    End If
    Set Frm = PrmPublier
    bcr = PrmPublier.AppelFrm(g_numModele, NomFichierParam)
    Set Frm = Nothing
    
    p_TraitPublier = AncMode
    If bcr Then
        Call verifSiSauve
    End If
    
End Function

Private Sub MoveFen(v_Trait As Integer)
    Dim Anc_iFen As Integer
    Dim New_iFen As Integer
    Dim F As Integer
    Dim i As Integer
    Dim Exc_wrk As Excel.Workbook
    Dim exc_sheet As Excel.Worksheet
    Dim exc_sheets As Sheets
    
    Anc_iFen = g_numfeuille 'grdFeuille.row + 1
    If v_Trait = CMD_FEN_FL_HAUT Then
        New_iFen = Anc_iFen - 1
    ElseIf v_Trait = CMD_FEN_FL_BAS Then
        New_iFen = Anc_iFen + 1
    Else
        Exit Sub
    End If
    ' monter ou descendre la fenetre
    ' 5) Inverser dans le tableau Excel

    ' 1) modifier le tableau tbl_fenExcel
    Dim tbl_fenExcel_tmp(0) As SFEN_EXCEL
    tbl_fenExcel_tmp(0) = tbl_fenExcel(Anc_iFen)
    tbl_fenExcel(Anc_iFen) = tbl_fenExcel(New_iFen)
    tbl_fenExcel(New_iFen) = tbl_fenExcel_tmp(0)
    '
    
    ' 2) modifier le tableau tbl_fichExcel
    For i = 0 To UBound(tbl_fichExcel)
        ' mettre -1 dans tous les Anc_iFen
        'Debug.Print tbl_fichExcel(i).CmdType & " " & tbl_fichExcel(i).CmdFenNum
        If IsNumeric(tbl_fichExcel(i).CmdFenNum) Then
            If tbl_fichExcel(i).CmdFenNum = Anc_iFen Then
                tbl_fichExcel(i).CmdFenNum = New_iFen
            ElseIf tbl_fichExcel(i).CmdFenNum = New_iFen Then
                tbl_fichExcel(i).CmdFenNum = Anc_iFen
            End If
        End If
    Next i
        
    ' 3) modifier le tableau tbl_cell
    On Error GoTo Lab2
    For i = 0 To UBound(tbl_cell)
        If tbl_cell(i).CellFeuille = Anc_iFen Then
            tbl_cell(i).CellFeuille = New_iFen
        ElseIf tbl_cell(i).CellFeuille = New_iFen Then
            tbl_cell(i).CellFeuille = Anc_iFen
        End If
    Next i
    
Lab2:
    On Error GoTo 0
    ' 4) Inverser dans le grid des feuilles
    Dim FenNum As String, FenNom As String, FenLoadFait As String
    FenNum = grdFeuille.TextMatrix(Anc_iFen - 1, GrdFeuil_FenNum)
    FenNom = grdFeuille.TextMatrix(Anc_iFen - 1, GrdFeuil_FenNom)
    FenLoadFait = grdFeuille.TextMatrix(Anc_iFen - 1, GrdFeuil_LoadFait)
    '
    grdFeuille.TextMatrix(Anc_iFen - 1, GrdFeuil_FenNum) = grdFeuille.TextMatrix(New_iFen - 1, GrdFeuil_FenNum)
    grdFeuille.TextMatrix(Anc_iFen - 1, GrdFeuil_FenNom) = grdFeuille.TextMatrix(New_iFen - 1, GrdFeuil_FenNom)
    grdFeuille.TextMatrix(Anc_iFen - 1, GrdFeuil_LoadFait) = grdFeuille.TextMatrix(New_iFen - 1, GrdFeuil_LoadFait)
    '
    grdFeuille.TextMatrix(New_iFen - 1, GrdFeuil_FenNum) = FenNum
    grdFeuille.TextMatrix(New_iFen - 1, GrdFeuil_FenNom) = FenNom
    grdFeuille.TextMatrix(New_iFen - 1, GrdFeuil_LoadFait) = FenLoadFait
        
    ' inverser les deux fenetres Excel
    Call Public_VerifOuvrir(g_CheminModele, False, True, p_tbl_FichExcelOuverts)
    
    Set Exc_wrk = Exc_obj.ActiveWorkbook
    If v_Trait = CMD_FEN_FL_BAS Then
        Exc_wrk.Sheets(tbl_fenExcel(New_iFen).FenNom).Move After:=Exc_wrk.Sheets(tbl_fenExcel(Anc_iFen).FenNom)
    End If
    If v_Trait = CMD_FEN_FL_HAUT Then
        Exc_wrk.Sheets(tbl_fenExcel(New_iFen).FenNom).Move before:=Exc_wrk.Sheets(tbl_fenExcel(Anc_iFen).FenNom)
    End If
    
    ' recharger les deux fenêtre (grdcell)
    grdFeuille.TextMatrix(Anc_iFen - 1, GrdFeuil_LoadFait) = ""
    grdFeuille.TextMatrix(New_iFen - 1, GrdFeuil_LoadFait) = ""
    tbl_fenExcel(Anc_iFen).FenLoad = False
    tbl_fenExcel(New_iFen).FenLoad = False
    '
    'MsgBox "Les feuilles vont être rechargées" & Chr(13) & Chr(10) & "n'oubliez pas de sauvegarder"
    Call verifSiSauve
    On Error GoTo Err_Unload1
    Unload grdCell(Anc_iFen)
    grdFeuille.row = Anc_iFen - 1
    'Debug.Print Anc_iFen & " " & grdFeuille.TextMatrix(Anc_iFen - 1, GrdFeuil_Chargement)
    grdFeuille.TextMatrix(Anc_iFen - 1, GrdFeuil_Chargement) = "0"
    grdFeuille_dblClick
    '
Suite2:
    On Error GoTo Err_Unload2
    Unload grdCell(New_iFen)
    grdFeuille.row = New_iFen - 1
    'Debug.Print New_iFen & " " & grdFeuille.TextMatrix(New_iFen - 1, GrdFeuil_Chargement)
    grdFeuille.TextMatrix(New_iFen - 1, GrdFeuil_Chargement) = "0"
    grdFeuille_dblClick
    '
Fin:
    On Error GoTo 0
    Exit Sub
Err_Unload1:
    Resume Suite2
Err_Unload2:
    Resume Fin
End Sub

Private Sub Ajout_Fenetre(ByVal v_num As Integer, ByVal v_nom As String)
    Dim Exc_wrk As Excel.Workbook
    Dim exc_sheet As Excel.Worksheet
    Dim exc_sheets As Sheets
    Dim NomFen As String, iNext As Integer
    Dim i As Integer
    
    Call Public_VerifOuvrir(g_CheminModele, False, True, p_tbl_FichExcelOuverts)
    Set Exc_wrk = Exc_obj.ActiveWorkbook
    iNext = Exc_wrk.Sheets.Count + 1
    If v_num > 0 Then
        NomFen = v_nom
    Else
        NomFen = InputBox("Nom de la nouvelle feuille", "Ajouter une fenêtre", "Feuille " & iNext)
    End If
    NomFen = Mid(NomFen, 1, 30)
    If NomFen <> "" Then
        p_bool_forcer_vider_temp = True
        Exc_wrk.Sheets.Add After:=Exc_wrk.Sheets(Exc_wrk.Sheets.Count)
        Exc_wrk.Sheets(Exc_wrk.Sheets.Count).Name = NomFen
        
        i = iNext
        
        ReDim Preserve tbl_fenExcel(i) As SFEN_EXCEL
        p_bool_tbl_fenExcel = True
        g_numfeuille = i
        tbl_fenExcel(i).FenNum = i
        tbl_fenExcel(i).FenNom = Exc_obj.ActiveWorkbook.Sheets(i).Name
        tbl_fenExcel(i).FenLoad = False
        tbl_fenExcel(i).FenColMax = 12
        tbl_fenExcel(i).FenRowMax = 20
        tbl_fenExcel(i).FenItbl_fichExcel = 1000
        
        Exc_wrk.Sheets(Exc_wrk.Sheets.Count).Range("A1").Value = "Nouvelle Feuille"
        Exc_wrk.Sheets(Exc_wrk.Sheets.Count).Range("J40").Value = "FIN"
        
        ' ajouter dans le grid
        ajouter_feuille_grd (i)
    
        If v_num > 0 Then
            Exit Sub
        End If
        Call verifSiSauve
        
        grdFeuille.row = i - 1
        grdFeuille_Click
        
        Call Rafraichir

    End If
End Sub

Private Function ResTbEntiteTrouverFils(ByVal idx As Integer, ByVal niveau As Integer)
    Dim EntiteNum As Integer
    Dim i As Integer, newDim As Integer
    
    EntiteNum = P_tb_Entite(idx).NumEntite
    
    ' trouver ses fils
    For i = 0 To UBound(P_tb_Entite)
        If P_tb_Entite(i).EntNumPere = EntiteNum Then
            newDim = UBound(New_tb_Entite) + 1
            ReDim Preserve New_tb_Entite(newDim)
            New_tb_Entite(newDim) = P_tb_Entite(i)
            Call ResTbEntiteTrouverFils(i, niveau + 1)
        End If
    Next i

End Function

Public Function Excel_Simulation(v_Trait As String, ByRef r_chemin As String, ByRef r_codeRet As Integer)
    Dim i As Integer, j As Integer, II As Integer
    Dim iY As Integer, ichp As Integer
    Dim nbchp As Integer
    Dim leXplus As Integer, leYplus As Integer
    Dim iM As Integer
    Dim bPrevenir As Boolean
    Dim Xprevenir As Integer, Yprevenir As Integer
    Dim NumFiltre As Integer
    Dim bool_liste As Boolean, bool_liste_hierar As Boolean
    Dim bool_liste_service As Boolean, bool_liste_fonction As Boolean
    Dim bool_liste_date As Boolean
    Dim bool_Calcul As Boolean, bMettre As Boolean
    Dim bool_entier As Boolean, bool_montant As Boolean
    Dim sql As String, ChpNom As String, ChpLabel As String, sval As String
    Dim forec_num As Integer
    Dim leX As Integer, leY As Integer
    Dim leYdebut As Integer
    Dim leYFin As Integer
    Dim tbDeLaListeGauche()
    Dim leYLabel As Integer
    Dim numCol As Integer
    Dim jN As Integer
    Dim numColNR As Integer
    Dim strX As String
    Dim ff_num As Integer
    Dim ff_indice As Integer
    Dim f_numfor As Integer, f_numindice As Integer
    Dim MenForme As String
    Dim rs As rdoResultset
    Dim i_tbl_fichExcel As Integer
    Dim i_tbl_RDOF As Integer
    Dim rsVal As rdoResultset
    Dim rsChp As rdoResultset
    Dim forec_type As String
    Dim nombasechp As String
    Dim strFichG As String, strFichd As String
    Dim Liste_Num As Variant
    Dim Cnd As String
    Dim lib As String
    Dim VC_lib As String, VC_libcourt As String
    Dim une_vc As String
    Dim sqlVal As String, nomtable_tempo As String
    Dim numSdebut As Integer, numHdebut As Integer
    Dim strServDebut As String
    Dim sqlValNoeud As String
    Dim numNoeud As Long
    Dim valResultNoeud As Integer
    Dim rsResult As rdoResultset
    Dim F As Integer
    Dim exc_sheet As Excel.Worksheet
    Dim CndTot As String
    Dim cndSQL As String
    Dim CndOp As String
    Dim op As String
    Dim k As Integer
    Dim kk As Integer
    Dim maxK As Integer
    Dim leUbound As Integer
    Dim srvNumPere As Integer, srvnum As Integer
    Dim MenFLigCol As String
    Dim MenFType As String
    Dim MenFNiveau As String
    Dim MenFSi  As String
    Dim MenFSi_Valeurs As Boolean
    Dim MenFSi_Global As Boolean
    Dim MenFNbValeur As String
    Dim MenFListeValeurs As String
    Dim nbSrv As Long
    Dim MenFparRapport As String
    
    Dim TotNR As Integer
    Dim numTemp As String
    Dim TotR As Integer
    Dim sret As String
    Dim i_F As Integer
    Dim strLstSpécial As String, boolLstSpécial As Boolean
    Dim boolListeChamps As Boolean
    Dim LaRowMax As Long, LaColMax As Long
    Dim iDebFeuille As Integer
    Dim laVal As String
    Dim nb As Integer
    Dim laForm As Form
    Dim àMettre As Boolean
    Dim bEpingle As Boolean
    Dim iK As Integer
    Dim iL As Integer
    Dim iCol As Integer
    Dim iZ As Integer
    Dim LeXMax As Integer, LeYMax As Integer
    Dim ListeLeXMax As Integer, ListeLeYMax As Integer
    Dim ListeChamps As String
    Dim nbChamps As Integer
    Dim UnChamp As String
    Dim LeType As String, laFctValid As String
    Dim i1 As Integer, i2 As Integer
    Dim LeXInit As Integer, LeYInit As Integer
    Dim ListeOldRequeteSQL As String
    Dim ListeOldNbRows As Long
    Dim strEntete As String
    Dim bEntete As Boolean
    Dim MenFormeListe As String
    Dim NomCellDest As String
    Dim CndChamp As String, s As String
    Dim z As Integer
    Dim ZsqlDonnees As String
    Dim ZZsqlDonnees As String
    Dim rsZ As rdoResultset
    Dim pourcentTotal As Integer
    Dim zX As Integer, zY As Integer
    Dim bCumuler As Boolean
    Dim tbDistinctValeur()
    Dim CndChampF As String
    Dim LesLinks As Hyperlinks
    Dim sqlDonnees As String, rsDonnees As rdoResultset
    Dim retS()
    Dim chpS()
    Dim iX As Integer
    Dim xListe As Integer, yListe As Integer
    Dim bFinListeQuestionPosée As Boolean
    Dim sqlDonneesTotal As String, rsDonneesTotal As rdoResultset
    Dim CndUneVal As String
    Dim ValResult As String
    Dim TypVal As String
    Dim LibLienDétail As String
    Dim laS As Variant
    Dim chpnum As Integer
    Dim laS1 As String, laS2 As String
    Dim X_Debut As String, Y_Debut As String, X_Fin As String, Y_Fin As String
    Dim laS_Total As String
    Dim val_Total As Integer
    Dim nomtable As String
    Dim OperSql As String
    Dim Cnd_OperSql As String
    Dim sChp1 As String, sChp2 As String, sChp3 As String
    Dim aGarder As Boolean
    Dim iTotal As Integer
    Dim iGraph As Integer
    Dim Cnd_DernierMoment As String
    Dim nbvaleurs As Integer
    Dim Cnd_NR As String
    Dim valTotal As String
    Dim numfor As Long
    Dim strNomChp As String
    Dim strNomchpCourt As String
    Dim strListeChp As String
    Dim sForecNum As String
    Dim strMenForme As String
    Dim strSQL As String
    Dim strIX As String
    Dim Cnd_OperSqlT As String
    Dim OperSqlT As String
    Dim ValResultNB As String
    Dim iGdrCellVisible As Integer
    Dim numfor_du_chp As Long
    Dim nbval As Integer
    Dim sNbVal As String
    Dim le_forecNum As Integer
    Dim le_forec_fornum As Integer
    Dim le_forectype As String, le_forecvalid As String
    Dim s_forectype As String, s_forecfctvalid As String
    Dim niveauRelier As String
    Dim cnd_jointure As String, table_jointure As String, Sens As String
    Dim sOp As String
    Dim sFFNum As String
    Dim fornumG As Integer, fornumD As Integer
    Dim libG As Integer, libD As Integer
    Dim slibG As String, slibD As String
    Dim nbdem As Long
    Dim nbServices As Long
    Dim nbHierarchie As Long
    Dim sCoordGraph As String
    Dim scoordDebut As String, scoordFin As String
    Dim niveauMax As Integer
    Dim niveau As Integer
    Dim XMax As Long
    Dim sFormule As String
    Dim estRelié As Boolean
    Dim BoolMettreErreur As Boolean
    Dim anc_p_Mode_FctTrace As Boolean
    Dim bFinBoucle As Boolean
    Dim bTousServices As Boolean
    Dim bTousHierar As Boolean
    Dim libSiGlobal As String
    Dim sqlReq As String
    Dim opSQL As String
    Dim bPlusDeQuestion As Boolean
    Dim rsDonneesFait As Boolean
    Dim Fichier As String
    Dim nbPourRefresh As Integer
    Dim iPourRefresh As Integer
    Dim FaireRefresh As Boolean
    'Dim CndPourLiens As String
    
    bPlusDeQuestion = False
    Me.LblHelp.Visible = True
    Me.LblHelp.Caption = "Ouverture du modèle"
    SimulationFaite = False
    cmd(CMD_TMP_VERS_MODELE).Visible = False
    
    r_codeRet = P_OK
    
    ' Seulement s'il y a lieu
    If UBound(tbl_fichExcel()) = 0 Then
        MsgBox "Rien à simuler"
        Exit Function
    End If
    
    bEntete = False

    'fermer le fichier modele
    If p_dansExcel Then
        If Exc_obj.Workbooks.Count > 0 Then
            For i = 1 To Exc_obj.Workbooks.Count
                strFichG = Replace(UCase(Exc_obj.Workbooks(i).FullName), "\", "$")
                strFichG = Replace(strFichG, "/", "$")
                strFichd = Replace(UCase(NomFichierParam & p_ExtensionXls), "\", "$")
                strFichd = Replace(strFichd, "/", "$")
                If strFichG = strFichd Then
                    Exc_obj.Workbooks(i).Close True
                    Exit For
                End If
            Next i
        End If
    End If
    
    If p_TraitPublier = "P" Then
        If p_dansExcel Then
            If PiloteExcelBis.ChkHyperlien.Value = 1 Then
                'p_chemin_fichier_liens = p_Chemin_Modeles_Local & "\Temp_" & p_NumUtil & ".txt"
                'If FICH_FichierExiste(p_chemin_fichier_liens) Then
                '    Call FICH_EffacerRep(p_chemin_fichier_liens)
                'End If
            End If
        End If
    End If
    
    p_NumTemp = 0
    numTemp = ""
Début:
    If p_dansExcel Then
        Fichier = p_Chemin_Modeles_Local & "\Temp_" & g_numModele & p_PointExtensionXls
        If p_bool_forcer_vider_temp Or (Not FICH_FichierExiste(Fichier)) Then
            'fermer le fichier temp
            For i = 1 To Exc_obj.Workbooks.Count
                strFichG = Replace(UCase(Exc_obj.Workbooks(i).FullName), "\", "$")
                strFichG = Replace(strFichG, "/", "$")
                strFichd = Replace(UCase(p_Chemin_Modeles_Local & "\Temp_" & g_numModele & p_PointExtensionXls), "\", "$")
                strFichd = Replace(strFichd, "/", "$")
                If strFichG = strFichd Then
                    Exc_obj.Workbooks(i).Close True
                    Exit For
                End If
            Next i
            FICH_CopierFichier g_CheminModele, Fichier
        End If
        Call Public_VerifOuvrir(Fichier, False, True, p_tbl_FichExcelOuverts())
        r_chemin = Fichier
    End If
Lab_Une_Simul_01:
    ' Effacer les questions de dernier moment (pour les re-poser)
    If p_ModePublication = "Publier" Then
    Else
        For i_F = 0 To UBound(tbl_rdoF())
            tbl_rdoF(i_F).RDOF_QuestionsFait = False
            tbl_rdoF(i_F).RDOF_AussiQuestionsFait = ""
        Next i_F
    End If
    ' controle : si 2 demandes FO sur le même champ => inutile !!!
    On Error GoTo err_TabDem
    nbdem = UBound(tbl_Demande)
    GoTo SuiteDem
err_TabDem:
    Resume ApresDem
SuiteDem:
    For i = 0 To nbdem
        For j = i + 1 To nbdem
            If tbl_Demande(j).DemandChpNum = tbl_Demande(i).DemandChpNum Then
                If tbl_Demande(i).DemandGlobale = "LO" Or tbl_Demande(j).DemandGlobale = "LO" Then
                Else
                    'Call MsgBox(" les conditions [" & tbl_Demande(j).DemandChpStrPlus & "] et [" & tbl_Demande(j).DemandChpStrPlus & "]" & Chr(13) & Chr(10) & " sont des conditions redondantes (même formulaire - même champ)" & Chr(13) & Chr(10) & "Vous pouvez en supprimer une", vbExclamation + vbOKOnly)
                End If
            End If
        Next j
    Next i
ApresDem:
    Me.LblHelp.Visible = False
    If p_ModePublication = "Publier" Then
        Set laForm = Publier
        p_BoolMettreComment = False
    Else
        Set laForm = Me
        If laForm.ChkCommentaire.Value = 1 Then
            p_BoolMettreComment = True
        Else
            p_BoolMettreComment = False
        End If
    End If
    
    laForm.PgBarFeuille.Visible = True
    laForm.PgBarFeuille.max = UBound(tbl_fenExcel)
    
    LblSimulFeuille.Visible = True
    If p_dansExcel Then Set Exc_wrk = Exc_obj.ActiveWorkbook
    iDebFeuille = 1
    If v_Trait = "Une" Or v_Trait = "Feuille" Then
        If p_Simul_IFen = 0 Then p_Simul_IFen = 1
        iDebFeuille = p_Simul_IFen
    End If
    ' on ne vide plus
    'GoTo Lab_Sans_Vider
    
    Dim MessPasChargee As String
    MessPasChargee = ""
    For F = iDebFeuille To UBound(tbl_fenExcel)
        If Not tbl_fenExcel(F).FenLoad Then
            If v_Trait = "Une" Or v_Trait = "Feuille" Then
                ' on ne vérifie que cette feuille
                If F = p_Simul_IFen Then
                    MessPasChargee = MessPasChargee & "La Feuille " & tbl_fenExcel(F).FenNom & " n'est pas chargée" & vbCrLf
                End If
            Else
                MessPasChargee = MessPasChargee & "La Feuille " & tbl_fenExcel(F).FenNom & " n'est pas chargée" & vbCrLf
            End If
        End If
    Next F
    If MessPasChargee <> "" Then
        MsgBox MessPasChargee
    End If
    For F = iDebFeuille To UBound(tbl_fenExcel)
        If Not tbl_fenExcel(F).FenLoad Then
            If v_Trait = "Une" Or v_Trait = "Feuille" Then
                ' on ne vérifie que cette feuille
                If F = p_Simul_IFen Then
                    'MessPasChargee = MessPasChargee & "La Feuille " & tbl_fenExcel(F).FenNom & " n'est pas chargée"
                    GoTo LabNextF
                End If
            Else
                'MsgBox "La Feuille " & tbl_fenExcel(F).FenNom & " n'est pas chargée"
                GoTo LabNextF
            End If
        End If
        If p_ModePublication = "Publier" Then
            Publier.grdFeuille.row = F - 1
            Publier.grdFeuille.col = 0
            Set Publier.grdFeuille.CellPicture = Publier.ImageListS.ListImages(6).Picture
            Publier.grdFeuille.col = 1
        Else
            If p_bool_tbl_fenExcel Then
                iGdrCellVisible = g_numfeuille
                For i = 1 To UBound(tbl_fenExcel)
                    If tbl_fenExcel(i).FenLoad Then
                        If tbl_fenExcel(i).FenNum >= 0 Then
                            If i = F Then
                                grdCell(i).Visible = True
                                LblSimulFeuille.ZOrder 0
                            Else
                                grdCell(i).Visible = False
                            End If
                        End If
                    End If
                Next i
                If FaireRefresh Then PiloteExcelBis.Refresh
            End If
        End If
        
        ' se mettre sur la bonne feuille
        laForm.PgBarFeuille.Value = F
        If FaireRefresh Then
            LblSimulFeuille.Caption = tbl_fenExcel(F).FenNom
            LblSimulFeuille.Refresh
        End If
        On Error GoTo 0
        If p_dansExcel Then
            Set exc_sheet = Exc_wrk.Sheets(tbl_fenExcel(F).FenNom)
            exc_sheet.Activate
            Call FindLastCell(F, LaRowMax, LaColMax)
        End If
        If tbl_fenExcel(F).FenRowMax > LaRowMax Then
            LaRowMax = tbl_fenExcel(F).FenRowMax
        End If
        
        If tbl_fenExcel(F).FenColMax > LaColMax Then
            LaColMax = tbl_fenExcel(F).FenColMax
        End If
        
        'Vider les emplacements
        laForm.PgBarChp.Value = 0
        laForm.PgBarChp.Visible = True
        XMax = LaColMax * LaRowMax
        If (XMax) > 32000 Then
        End If
        laForm.PgBarChp.max = LaColMax * LaRowMax
        
        On Error GoTo Err_Suite2
        i = UBound(tbl_fichExcel())
        GoTo Suite2
Err_Suite2:
        Resume Continu_2
Suite2:
        On Error GoTo 0
        If v_Trait = "Une" Then
            i = p_Simul_ITab
            If i < 0 Then
                Exit Function
            End If
            GoTo Lab_Une_Simul_02
        End If
        If Not p_dansGrid Then
            GoTo Lab_Sans_Vider
        End If
        For i = 0 To UBound(tbl_fichExcel())
Lab_Une_Simul_02:
            LblSimulFeuille.Caption = tbl_fenExcel(F).FenNom & " " & i & " / " & UBound(tbl_fichExcel())
            
            If i > laForm.PgBarChp.max Then laForm.PgBarChp.max = i
            laForm.PgBarChp.Value = i
            
            If tbl_fichExcel(i).CmdChpRelierà <> "" And tbl_fichExcel(i).CmdType = "CHP" Then
                If tbl_fichExcel(i).CmdChpNum = -1 Then
                    ' supprimé
                    GoTo NextI_CHP
                End If
                If tbl_fichExcel(i).CmdFenNum = F Then
                    
                    boolListeChamps = IIf(Mid(tbl_fichExcel(i).cmdTypeChp, 1, 6) = "Liste=", True, False)
                    If boolListeChamps Then ' on ne vide pas
                        If p_dansGrid And v_Trait <> "Une" Then
                            GoTo NextI_CHP
                        End If
                    End If
                    ' emplacement du champ
                    strX = tbl_fichExcel(i).CmdX
                    leX = FctIntColdest(strX)
                    leY = tbl_fichExcel(i).CmdY
                    ff_num = tbl_fichExcel(i).CmdFormNum
                    ff_indice = tbl_fichExcel(i).CmdFormIndice
                    
                    '************************************************************************************
                    ' format du champ à retourner
                    '************************************************************************************
                    ' Colonne_Val # POURCENT # NONVALEUR_R # * #             # TOUTES    ' pour Entier
                    ' Colonne_Val # POURCENT # VALEUR_R    # 5 # 121;114;118 # AUX_R     ' pour Liste
                    ' 0 Colonne_Lib_Val#
                    ' 1 POURCENT-TOTAL-VALEUR-SOMME-MOYENNE-ECART_TYPE#
                    ' 3 VALEUR VALEUR_SIGNIF VALEUR_R NONVALEUR_R#
                    ' 4 * (nb occurences)
                    ' 5 Si liste : Liste des items à afficher ou *
                    ' 6 Pour Entier et Listes : par rapport à : TOUTES AUX_R
                    '************************************************************************************
                    ' Ligne_Lib_Val#NOMBRE#VALEUR_SIGNIF#*#9;30;91;94;80#
                    '
                    '************************************************************************************
                    MenForme = tbl_fichExcel(i).CmdMenFormeChp
                    MenFLigCol = STR_GetChamp(MenForme, "#", 0)         ' Ligne_Lib_Val
                    MenFType = STR_GetChamp(MenForme, "#", 1)           ' NOMBRE
                    MenFSi = STR_GetChamp(MenForme, "#", 2)             ' VALEUR_SIGNIF
                    MenFSi_Valeurs = False
                    MenFSi_Global = False
                    If MenFSi = "VALEUR" Or MenFSi = "VALEUR_SIGNIF" Then
                        MenFSi_Valeurs = True
                    ElseIf MenFSi = "NONVALEUR_R" Or MenFSi = "NONVALEUR_NR" Then
                        MenFSi_Global = True
                    End If
                    MenFNbValeur = STR_GetChamp(MenForme, "#", 3)       ' *
                    MenFListeValeurs = STR_GetChamp(MenForme, "#", 4)   ' 9;30;142
                    MenFparRapport = STR_GetChamp(MenForme, "#", 5)     '

                    If boolListeChamps Then ' pas besoin de mise en forme
                        MenForme = "ListeChamp"
                    Else
                        If Mid(MenFLigCol, 1, 7) = "Colonne" Then
                            If IsNumeric(MenFNbValeur) Then
                                LeYMax = leY + MenFNbValeur
                                If LeYMax > LaRowMax Then LeYMax = LaRowMax
                            End If
                        ElseIf Mid(MenFLigCol, 1, 5) = "Ligne" Then
                            If IsNumeric(MenFNbValeur) Then
                                LeXMax = leX + MenFNbValeur
                                If LeXMax > LaColMax Then LeXMax = LaColMax
                            End If
                        Else
                            MsgBox "case ?"
                        End If
                        ' Trouver le champ
                        If MenFSi = "NOMBRE_TOTAL" Then
                            ChpNom = "Nombre Total"
                            ChpLabel = "Nombre Total de Fiches"
                            forec_type = ""
                        Else
                            sql = "select * from formetapechp where forec_num = " & tbl_fichExcel(i).CmdChpNum
                            If Odbc_SelectV(sql, rsChp) = P_ERREUR Then
                                Exit Function
                            End If
                            ' son type
                            forec_type = rsChp("forec_type")
                            ChpNom = rsChp("forec_nom")
                            ChpLabel = rsChp("forec_label")
                            numfor_du_chp = rsChp("forec_fornum")
                            strLstSpécial = rsChp("forec_fctvalid")
                            sFormule = IIf(IsNull(rsChp("forec_formule").Value), "", rsChp("forec_formule").Value)
                        End If
                        bool_liste = False
                        bool_liste_service = False
                        bool_liste_fonction = False
                        bool_liste_hierar = False
                        bool_montant = False
                        bool_entier = False
                        bool_Calcul = False
                        If forec_type = "RADIO" Or forec_type = "CHECK" Or forec_type = "SELECT" Then
                            bool_liste = True
                            Liste_Num = rsChp("forec_valeurs_possibles")
                        ElseIf forec_type = "HIERARCHIE" Then
                            bool_liste_hierar = True
                            Liste_Num = rsChp("forec_valeurs_possibles")
                        ElseIf forec_type = "TEXT" Then
                            If strLstSpécial = "%NUMSERVICE" Then
                                bool_liste_service = True
                            ElseIf strLstSpécial = "%NUMFCT" Then
                                bool_liste_fonction = True
                            ElseIf strLstSpécial = "%MTT" Then
                                bool_montant = True
                            ElseIf strLstSpécial = "%ENTIER" Then
                                bool_entier = True
                            ElseIf sFormule <> "" Then
                                strLstSpécial = "CALCULER"
                                bool_Calcul = True
                            Else
                                MsgBox "case ?"
                            End If
                        End If
                        If MenFSi <> "NOMBRE_TOTAL" Then rsChp.Close
                    End If
                    
                    ' Vider les emplacements (si feuille est chargée)
                    If tbl_fenExcel(F).FenLoad Then
                        If bool_liste Or boolLstSpécial Then
                            For j = 0 To grdForm.Rows - 1
                                If grdForm.TextMatrix(j, GrdForm_FF_Num) = ff_num Then
                                    If grdForm.TextMatrix(j, GrdForm_FF_NumIndice) = ff_indice Then
                                        P_MettreChamp "Vider", i, leX, leY, MenForme, val(tbl_fichExcel(i).CmdChpNum), val(tbl_fichExcel(i).CmdFormIndice), F, True
                                    End If
                                End If
                            Next j
                        End If
                    End If
                End If
            End If
NextI_CHP:
            If v_Trait = "Une" Then
                i = p_Simul_ITab
                GoTo Lab_Une_Simul_03
            End If
        
        Next i
        
Lab_Sans_Vider:
        'Effectuer le remplacement de chaque champ
        laForm.PgBarChp.max = UBound(tbl_fichExcel())
        anc_p_Mode_FctTrace = p_Mode_FctTrace
        iPourRefresh = 0
        nbPourRefresh = Int(UBound(tbl_fichExcel()) / 100)
        For i = 0 To UBound(tbl_fichExcel())
Lab_Une_Simul_03:
            FaireRefresh = False
            rsDonneesFait = False
            If (tbl_fichExcel(i).CmdType = "CHP" Or tbl_fichExcel(i).CmdType = "RES") Then
                If tbl_fichExcel(i).CmdFenNum <> "" Then
                    If tbl_fichExcel(i).CmdFenNum > F Then
                        GoTo LabNextF
                    End If
                End If
            Else
                GoTo Next_Chp
            End If
            Call FctTrace("Champ : F " & tbl_fichExcel(i).CmdFenNum & " I=" & i & " Y=" & tbl_fichExcel(i).CmdY & " X=" & tbl_fichExcel(i).CmdX)
            If tbl_fichExcel(i).CmdFenNum = F Then
                If tbl_fichExcel(i).CmdType = "CHP" Or tbl_fichExcel(i).CmdType = "RES" Then
                    iPourRefresh = iPourRefresh + 1
                    If iPourRefresh >= nbPourRefresh Then
                        iPourRefresh = 0
                        'FaireRefresh = True
                    End If
                    
                    If tbl_fichExcel(i).CmdType = "CHP" Then
                        Erase p_tblCondPourLien
                        If val(tbl_fichExcel(i).CmdChpRelierà) = 0 Then
                            tbl_fichExcel(i).CmdChpRelierà = ""
                        End If
                        If tbl_fichExcel(i).CmdChpRelierà <> "" Then
                            GoTo Next_Chp
                        End If
                    End If
                    BoolMettreErreur = False
                    '*********************************************************
                    ' ré-initialiser tbl_rdoL() (conditions locales au filtre)
                    '*********************************************************
                    If p_bool_tbl_rdoL Then
                        For k = 0 To UBound(tbl_rdoL())
                            tbl_rdoL(k).RDOL_DéjàPenCompte = False
                        Next k
                    End If
                    '*********************************************************
                    ' ré-initialiser tbl_rdoF() et tbl_demande()
                    '*********************************************************
                    'If p_ModePublication = "Publier" Then
                    'Else
                        If p_bool_tbl_Demande Then
                            For k = 0 To UBound(tbl_Demande())
                                tbl_Demande(k).DemandFait = False
                                'Debug.Print tbl_Demande(k).DemandenSQL
                            Next k
                        End If
                        If p_bool_tbl_rdoF Then
                            For k = 0 To UBound(tbl_rdoF())
                                tbl_rdoF(k).RDOF_AussiQuestionsFait = ""
                            Next k
                        End If
                    'End If
                End If
            End If
            laForm.PgBarChp.Value = i
            If tbl_fichExcel(i).CmdFenNum = F Then
                If tbl_fichExcel(i).CmdType = "CHP" Or tbl_fichExcel(i).CmdType = "RES" Then
                    ' emplacement du champ
                    scoordDebut = ""
                    scoordFin = ""
                    strX = tbl_fichExcel(i).CmdX
                    leX = FctIntColdest(strX)
                    leY = tbl_fichExcel(i).CmdY
                    sCoordGraph = strX & "_" & leY
                    'scoordDebut = strX & "_" & LeY
                    scoordDebut = "$" & strX & "$" & leY
                    ff_num = tbl_fichExcel(i).CmdFormNum
                    ff_indice = tbl_fichExcel(i).CmdFormIndice
                    
                    LblSimulFeuille.Caption = "Feuille " & tbl_fenExcel(F).FenNom & " : Champ : " & i & "/" & UBound(tbl_fichExcel()) & " ( " & FctStrColDest(leX) & leY & " )"
                    If FaireRefresh Then LblSimulFeuille.Refresh
                    
                    boolListeChamps = IIf(Mid(tbl_fichExcel(i).cmdTypeChp, 1, 6) = "Liste=", True, False)
                    
                    '************************************************************************************
                    ' Colonne_Val # POURCENT # NONVALEUR_R # * #             # TOUTES    ' pour Entier
                    ' Colonne_Val # POURCENT # VALEUR_R    # 5 # 121;114;118 # AUX_R     ' pour Liste
                    ' 0 MenFLigCol          Colonne_Lib_Val#
                    ' 1 MenFType            POURCENT-TOTAL-VALEUR-SOMME-MOYENNE-ECART_TYPE#
                    ' 2 MenFSi              VALEUR VALEUR_SIGNIF VALEUR_R NONVALEUR_R#
                    '                       => MenFSi_Valeurs et MenFSi_Global
                    ' 3 MenFNbValeur        * (nb occurences)
                    ' 4 MenFListeValeurs    Si liste : Liste des items à afficher ou *
                    ' 5 Pour Entier et Listes :
                    '   MenFparRapport      par rapport à : TOUTES AUX_R
                    '************************************************************************************
                    ' Ligne_Lib_Val#NOMBRE#VALEUR_SIGNIF#*#9;30;91;94;80#
                    '
                    '************************************************************************************
                    ' Trouver le champ
                    If tbl_fichExcel(i).CmdType = "RES" Then
                        Dim rp_num As String, docnum As String, fichnum As String, FichServeur As String, FichLocal As String
                        Dim sFeuille As String, sCellule As String
                        s = Replace(tbl_fichExcel(i).CmdChpRelierà, "RES=", "")
                        s = STR_GetChamp(s, ";", 0)
                        rp_num = val(STR_GetChamp(s, "_", 1))
                        docnum = val(STR_GetChamp(s, "_", 2))
                        fichnum = val(STR_GetChamp(s, "_", 3))
                        sFeuille = STR_GetChamp(tbl_fichExcel(i).CmdChpRelierà, ";", 1)
                        sCellule = STR_GetChamp(tbl_fichExcel(i).CmdChpRelierà, ";", 2)
                        FichServeur = p_Chemin_Résultats & "/RP_" & rp_num & "/Doc_" & docnum & "/" & fichnum & p_PointExtensionXls
                        FichLocal = p_chemin_appli & "\tmp\RP" & Format(Time, "hhmmss") & p_PointExtensionXls
                        Call FICH_EffacerFichier(FichLocal, False)
                        If KF_GetFichier(FichServeur, FichLocal) = P_OK Then
                            s = Excel_Recup_Valeur(FichLocal, sFeuille, sCellule)
                            Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leX, leY, MenFLigCol, lib, s, F, False, "", 0, False)
                        End If
                        GoTo Next_Chp
                    End If
                    If tbl_fichExcel(i).CmdChpNum = -1 Then ' Supprimé
                        GoTo Next_Chp
                    End If
                    
                    If boolListeChamps Then
                        MenForme = "ListeChamp"
                        NumFiltre = tbl_fichExcel(i).CmdFormNum
                        sql = "select * from filtreform where ff_num =" & NumFiltre
                        If Odbc_SelectV(sql, rs) = P_ERREUR Then
                            Exit Function
                        End If
                        
                        s = STR_GetChamp(rs("FF_Fornums"), "*", 0)
                        sOp = ""
                        If s = "FF" Then
                            fornumG = STR_GetChamp(rs("FF_Fornums"), "*", 1)
                            fornumD = STR_GetChamp(rs("FF_Fornums"), "*", 2)
                            Sens = VoirSensDdon_Asc_Desc(rs("FF_Fornums"), STR_GetChamp(rs("FF_Fornums"), "*", 1), cnd_jointure, table_jointure, tbl_fenExcel(F).FenNom & " " & tbl_fichExcel(i).CmdX & tbl_fichExcel(i).CmdY)
                            'Sens = VoirSensDdon_Asc_Desc(STR_GetChamp(rs("FF_Fornums"), "*", 1), STR_GetChamp(rs("FF_Fornums"), "*", 2), cnd_jointure, table_jointure)
                            If Sens = "?" Then
                                MsgBox "Sens de la jointure indéterminé"
                            End If
                        ElseIf s = "FP" Then
                            fornumG = STR_GetChamp(rs("FF_Fornums"), "*", 1)
                            fornumD = STR_GetChamp(rs("FF_Fornums"), "*", 2)
                            Sens = VoirSensDdon_Asc_Desc(rs("FF_Fornums"), STR_GetChamp(rs("FF_Fornums"), "*", 1), cnd_jointure, table_jointure, tbl_fenExcel(F).FenNom & " " & tbl_fichExcel(i).CmdX & tbl_fichExcel(i).CmdY)
                            ' Sens = VoirSensDdon_Asc_Desc(STR_GetChamp(rs("FF_Fornums"), "*", 1), STR_GetChamp(rs("FF_Fornums"), "*", 2), cnd_jointure, table_jointure)
                            If Sens = "?" Then
                                MsgBox "Sens de la jointure indéterminé"
                            End If
                        ElseIf s = "N" Then
                            fornumG = STR_GetChamp(rs("FF_Fornums"), "*", 1)
                            fornumD = 0
                        End If
                        If fornumG > 0 Then
                            sql = "select For_Code from formulaire where For_Num = " & fornumG
                            Call Odbc_RecupVal(sql, slibG)
                        End If
                        If fornumD > 0 Then
                            sql = "select For_Code from formulaire where For_Num = " & fornumD
                            Call Odbc_RecupVal(sql, slibD)
                        End If
                    Else
                        MenForme = tbl_fichExcel(i).CmdMenFormeChp
                        MenFLigCol = STR_GetChamp(MenForme, "#", 0)         ' Ligne_Lib_Val
                        MenFType = STR_GetChamp(MenForme, "#", 1)           ' NOMBRE
                        MenFNiveau = STR_GetChamp(MenForme, "#", 7)         ' Niveau (Serv et Hier) et exact O/N
                        MenFSi = STR_GetChamp(MenForme, "#", 2)             ' VALEUR_SIGNIF
                        MenFSi_Valeurs = False
                        MenFSi_Global = False
                        If MenFSi = "VALEUR" Or MenFSi = "VALEUR_SIGNIF" Then
                            MenFSi_Valeurs = True
                        ElseIf MenFSi = "NONVALEUR_R" Or MenFSi = "NONVALEUR_NR" Then
                            MenFSi_Global = True
                        ElseIf MenFSi = "NOMBRE_TOTAL" Then
                            MenFSi_Global = True
                        Else
                            MsgBox "Case ?"
                            MenFSi_Global = True
                        End If
                        MenFNbValeur = STR_GetChamp(MenForme, "#", 3)       ' *
                        MenFListeValeurs = STR_GetChamp(MenForme, "#", 4)   ' 9;30;142
                        If MenFListeValeurs = "" Or MenFListeValeurs = "0" Then MenFListeValeurs = "TOUTES"
                        
                        MenFparRapport = STR_GetChamp(MenForme, "#", 5)     '
                        
                        ChpNom = ""
                        If tbl_fichExcel(i).CmdChpNum < -10 Then    ' c'est un nombre de fiches ((numfiltre + 10 ) * -1)
                            MenFSi = "NOMBRE_TOTAL"
                            MenFSi_Valeurs = False
                            MenFSi_Global = True
                            MenFType = "NOMBRE"
                        End If
                        chpnum = 0
                        If MenFSi = "NOMBRE_TOTAL" Then
                        Else
                            chpnum = tbl_fichExcel(i).CmdChpNum
                            If chpnum < 0 Then chpnum = chpnum * -1
                            sql = "select * from formetapechp where forec_num = " & chpnum
                            If Odbc_SelectV(sql, rsChp) = P_ERREUR Then
                                Exit Function
                            End If
                            ' son type
                            'MsgBox rsChp("forec_label")
                            forec_type = rsChp("forec_type")
                            strLstSpécial = rsChp("forec_fctvalid")
                            numfor_du_chp = rsChp("forec_fornum")
                            strNomChp = "donnees_" & rsChp("forec_fornum") & "." & rsChp("forec_nom")
                            strNomchpCourt = rsChp("forec_nom")
                            sFormule = IIf(IsNull(rsChp("forec_formule").Value), "", rsChp("forec_formule").Value)

                            bool_liste = False
                            bool_liste_service = False
                            bool_liste_fonction = False
                            bool_liste_hierar = False
                            bool_montant = False
                            bool_entier = False
                            bool_Calcul = False
                            bool_liste_date = False
                            ChpNom = rsChp("forec_nom")
                            ChpLabel = rsChp("forec_label")
                            If forec_type = "RADIO" Or forec_type = "CHECK" Or forec_type = "SELECT" Then
                                bool_liste = True
                                Liste_Num = rsChp("forec_valeurs_possibles")
                            ElseIf forec_type = "HIERARCHIE" Then
                                bool_liste_hierar = True
                                Liste_Num = rsChp("forec_valeurs_possibles")
                            ElseIf forec_type = "TEXT" Then
                                If strLstSpécial = "%NUMSERVICE" Then
                                    bool_liste_service = True
                                    Liste_Num = 0
                                ElseIf strLstSpécial = "%NUMFCT" Then
                                    bool_liste_fonction = True
                                    Liste_Num = 0
                                ElseIf strLstSpécial = "%MTT" Then
                                    bool_montant = True
                                ElseIf strLstSpécial = "%ENTIER" Then
                                    bool_entier = True
                                ElseIf sFormule <> "" Then
                                    strLstSpécial = "CALCULER"
                                    bool_Calcul = True
                                ElseIf InStr(strLstSpécial, "%DATE") > 0 Then
                                    bool_liste_date = True
                                Else
                                    MsgBox "case ? pour " & ChpLabel
                                End If
                            End If
                            rsChp.Close
                        End If
                    End If
                    
                    sqlDonneesTotal = ""
                    sqlDonnees = ""
                    '******************************
                    ' si c'est une liste de valeurs
                    '******************************
                    If Not boolListeChamps Then
                        If bool_liste Or bool_liste_hierar Or bool_liste_service Or bool_liste_fonction Then
                            ' Colonne_Val # POURCENT # VALEUR_R    # 5 # 121;114;118 # AUX_R     ' pour Liste
                            ' 0 MenFLigCol          Colonne_Lib_Val#
                            ' 1 MenFType            POURCENT-TOTAL-VALEUR-SOMME-MOYENNE-ECART_TYPE#
                            ' 3 MenFSi              VALEUR VALEUR_SIGNIF VALEUR_R NONVALEUR_R#
                            '                       => MenFSi_Valeurs et MenFSi_Global
                            ' 4 MenFNbValeur        * (nb occurences)
                            ' 5 MenFListeValeurs    Si liste : Liste des items à afficher ou *
                            ' 6 Pour Entier et Listes :
                            '   MenFparRapport      par rapport à : TOUTES AUX_R
                            '**********************************************************************
                            ' Si c'est une liste de valeurs ou services ou fonctions,
                            '    il faut avoir toutes les valeurs
                            '    ou ne conserver que les valeurs à traiter
                            '**********************************************************************
                            If bool_liste Then
                                If MenFListeValeurs = "0" Then
                                    MenFListeValeurs = ""
                                    MenFNbValeur = "*"
                                    nbvaleurs = Repart_SelectionneTbEntite(0, "L", Liste_Num, "", "*", i)
                                Else
                                    If MenFListeValeurs <> "" Then
                                        MenFNbValeur = STR_GetNbchamp(MenFListeValeurs, ";")
                                    End If
                                    If MenFNbValeur = "*" Then
                                        nbvaleurs = Repart_SelectionneTbEntite(0, "L", Liste_Num, MenFListeValeurs, "*", i)
                                    Else
                                        nbvaleurs = Repart_SelectionneTbEntite(MenFNbValeur, "L", Liste_Num, MenFListeValeurs, "*", i)
                                    End If
                                End If
                            ElseIf bool_liste_hierar Then
                                If MenFListeValeurs = "0" Then
                                    MenFListeValeurs = ""
                                    MenFNbValeur = "*"
                                    nbvaleurs = Repart_SelectionneTbEntite(0, "H", Liste_Num, "", "*", i)
                                Else
                                    If MenFNbValeur = "*" Then
                                        nbvaleurs = Repart_SelectionneTbEntite(0, "H", Liste_Num, MenFListeValeurs, "*", i)
                                    Else
                                        nbvaleurs = Repart_SelectionneTbEntite(MenFNbValeur, "H", Liste_Num, MenFListeValeurs, "*", i)
                                    End If
                                End If
                            ElseIf bool_liste_service Then
                                If MenFListeValeurs = "0" Then
                                    MenFListeValeurs = ""
                                    MenFNbValeur = "*"
                                    nbvaleurs = Repart_SelectionneTbEntite(0, "S", 0, "", "*", i)
                                Else
                                    If MenFNbValeur = "*" Then
                                        nbvaleurs = Repart_SelectionneTbEntite(0, "S", 0, MenFListeValeurs, "*", i)
                                    Else
                                        nbvaleurs = Repart_SelectionneTbEntite(MenFNbValeur, "S", 0, MenFListeValeurs, "*", i)
                                    End If
                                End If
                            ElseIf bool_liste_fonction Then
                                If MenFListeValeurs = "0" Then
                                    MenFListeValeurs = ""
                                    MenFNbValeur = "*"
                                    nbvaleurs = Repart_SelectionneTbEntite(0, "F", 0, "", "*", i)
                                Else
                                    If MenFNbValeur = "*" Then
                                        nbvaleurs = Repart_SelectionneTbEntite(0, "F", 0, MenFListeValeurs, "*", i)
                                    Else
                                        nbvaleurs = Repart_SelectionneTbEntite(MenFNbValeur, "F", 0, MenFListeValeurs, "*", i)
                                    End If
                                End If
                            ElseIf bool_liste_date Then
                                MsgBox "ici"
                            End If
                        End If
                    End If
                    '**********************************************************
                    ' Trouver le filtre de ce champ pour chaque champ à traiter
                    '**********************************************************
                    i_tbl_RDOF = -1
                    For j = 0 To grdForm.Rows - 1
                        If grdForm.TextMatrix(j, GrdForm_FF_Num) = ff_num And grdForm.TextMatrix(j, GrdForm_FF_NumIndice) = ff_indice Then
                            ' c'est le bon filtre pour ce champ
                            i_tbl_RDOF = -1
                            For i_F = 0 To UBound(tbl_rdoF())
                                If tbl_rdoF(i_F).RDOF_num = ff_num And tbl_rdoF(i_F).RDOF_FormIndice = ff_indice Then
                                    i_tbl_RDOF = i_F
                                    Exit For
                                End If
                            Next i_F
                        End If
                    Next j
                    
                    If i_tbl_RDOF > -1 Then
                        '******************************************
                        ' Former la condition générale sur ce champ
                        '******************************************
                        'kk = 0
                        'For kk = 0 To UBound(tbl_fichExcel)
                        '    Debug.Print kk & " " & tbl_fichExcel(kk).CmdType & " " & tbl_fichExcel(kk).CmdChpNum & " " & tbl_fichExcel(kk).cmdTypeChp
                        'Next kk
                        i_tbl_fichExcel = i
                        If i_tbl_RDOF <> -1 Then
                            If Not tbl_rdoF(i_tbl_RDOF).RDOF_QuestionsFait Then
                                sret = FctPoserQuestion("YYY", ff_num, ff_indice, i_tbl_RDOF, i_tbl_fichExcel, bPlusDeQuestion)
                                If sret = "ANNULER" Then
                                    r_codeRet = P_ERREUR
                                    GoTo Lab_Annuler
                                End If
                            End If
                        End If
                        If p_ModePublication = "Param" Then
                            If p_dansGrid Then
                                If FaireRefresh Then PiloteExcelBis.Refresh
                            End If
                        Else
                            If FaireRefresh Then Publier.Refresh
                        End If
                            
                        ' constituer la condition complète : tbl_rdoF(j).RDOF_sql and ( conditions locales )
                        ' CndPourLiens => numfiltre # numchp # Condition1 § Condition2
                        'CndPourLiens = tbl_fichExcel(i).CmdFormNum & "#" & tbl_fichExcel(i).CmdChpNum
                        If Not p_bool_tbl_rdoL Then
                            CndTot = tbl_rdoF(i_tbl_RDOF).RDOF_sql
                            If tbl_rdoF(i_tbl_RDOF).RDOF_sql <> "" Then
                                For k = 0 To STR_GetNbchamp(tbl_rdoF(i_tbl_RDOF).RDOF_Q_RP, "§")
                                    s = STR_GetChamp(tbl_rdoF(i_tbl_RDOF).RDOF_Q_RP, "§", k)
                                    If s <> "" Then
                                        Call AjouterCndPourLiens("RDOF", i, tbl_rdoF(i_tbl_RDOF).RDOF_num, tbl_rdoF(i_tbl_RDOF).RDOF_FormNum, tbl_rdoF(i_tbl_RDOF).RDOF_QuestionsSQL, s, tbl_rdoF(i_tbl_RDOF).RDOF_QuestionsSQL)
                                    End If
                                Next k
                            End If
                        End If
                        '*************************************************
                        ' Traiter les CONDL (conditions locales du filtre)
                        '*************************************************
                        Dim OpL As String
                        Dim CndL As String
                        OpL = ""
                        CndL = ""
                        If p_bool_tbl_cond Then
                            On Error GoTo err_tab_CONDL
                            For k = 0 To UBound(tbl_cond())
                                If tbl_cond(k).CondType = "CONDL" Then
                                    If tbl_cond(k).CondNumFiltre > -1 Then
                                        If ff_num = tbl_cond(k).CondNumFiltre Then
                                            If ff_indice = tbl_cond(k).CondFormIndice Then
                                                If tbl_cond(k).CondLigneDansGrid > 0 Then ' sinon supprimée
                                                    s = STR_GetChamp(tbl_cond(k).CondOper, "¤", 3)
                                                    If s = "*" Or s = "" Then ' pour toutes les feuilles
                                                        CndL = CndL & OpL & "(" & tbl_cond(k).CondenSQL & ")"
                                                        If InStr(strEntete, tbl_cond(k).CondenFrancais) = 0 Then strEntete = strEntete & " ET [" & tbl_cond(k).CondenFrancais & "]"
                                                        OpL = " and "
                                                        kk = STR_GetChamp(tbl_cond(k).CondPasFrancais, ":", 1)
                                                        Call AjouterCndPourLiens("CONDL", i, kk, tbl_cond(k).CondNumFiltre, tbl_cond(k).CondenSQL, tbl_cond(k).CondPasFrancais, tbl_cond(k).CondenFrancais)
                                                    Else
                                                        If InStr(s, tbl_fichExcel(i).CmdFenNum & ";") > 0 Then
                                                            CndL = CndL & OpL & "(" & tbl_cond(k).CondenSQL & ")"
                                                            If InStr(strEntete, tbl_cond(k).CondenFrancais) = 0 Then strEntete = strEntete & " ET [" & tbl_cond(k).CondenFrancais & "]"
                                                            OpL = " and "
                                                            kk = STR_GetChamp(tbl_cond(k).CondPasFrancais, ":", 1)
                                                            Call AjouterCndPourLiens("CONDL", i, kk, tbl_cond(k).CondNumFiltre, tbl_cond(k).CondenSQL, tbl_cond(k).CondPasFrancais, tbl_cond(k).CondenFrancais)
                                                        End If
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If
                                End If
                            Next k
                        End If
err_tab_CONDL:
                        '*******************************************************************
                        ' Traiter les conditions locales du champ (i = indice du fich_excel)
                        '*******************************************************************
                        Dim OpC As String
                        Dim CndC As String
                        OpC = ""
                        CndC = ""
                        If tbl_fichExcel(i).CmdChpGridIndice = 0 Then
                            Faire_Load_GrdCondChp tbl_fichExcel(i).CmdChpNum, tbl_fichExcel(i).CmdChpIndice, i
                        End If
                        If p_bool_tbl_condCHP Then
                            On Error GoTo err_tab_CONDLC
                            For k = 0 To UBound(tbl_condChp())
                                If Mid(tbl_fichExcel(i).cmdTypeChp, 1, 6) <> "Liste=" Then
                                    If tbl_condChp(k).CondChpITabFichExcel = i Then
                                        If tbl_condChp(k).CondChpCndenSQL <> "" Then
                                            CndC = CndC & OpC & "(" & Replace(tbl_condChp(k).CondChpCndenSQL, "ù", "|") & ")"
                                            OpC = " and "
                                            Call AjouterCndPourLiens("CONDLC", i, val(tbl_condChp(k).CondChpCndChpNum), tbl_condChp(k).CondChpCndFormNum, tbl_condChp(k).CondChpCndenSQL, tbl_condChp(k).CondChpCndPasFrancais, tbl_condChp(k).CondChpCndenFrancais)
                                        End If
                                    End If
                                End If
                            Next k
                        End If
err_tab_CONDLC:
                        '***************************************
                        ' Conditions demandées au dernier moment
                        '***************************************
                        Cnd_DernierMoment = ""
                        If i_tbl_RDOF <> -1 Then
                            If tbl_rdoF(i_tbl_RDOF).RDOF_QuestionsFait Then
                                If tbl_rdoF(i_tbl_RDOF).RDOF_QuestionsSQL <> "" Then
                                    Cnd_DernierMoment = tbl_rdoF(i_tbl_RDOF).RDOF_QuestionsSQL
                                    Call AjouterCndPourLiens("RDOF", i, tbl_rdoF(i_tbl_RDOF).RDOF_num, tbl_rdoF(i_tbl_RDOF).RDOF_FormNum, tbl_rdoF(i_tbl_RDOF).RDOF_QuestionsSQL, tbl_rdoF(i_tbl_RDOF).RDOF_Q_RP, tbl_rdoF(i_tbl_RDOF).RDOF_Q_FR)
                                End If
                            End If
                        End If
                        If Not boolListeChamps And MenFSi <> "NOMBRE_TOTAL" Then
                            Sens = NewVoirSensDdon_Asc_Desc(tbl_rdoF(i_tbl_RDOF).RDOF_FormNumS, numfor_du_chp, cnd_jointure, table_jointure, tbl_fenExcel(F).FenNom & " " & tbl_fichExcel(i).CmdX & tbl_fichExcel(i).CmdY)
                            If Sens = "?" Then
                                MsgBox "Sens de la jointure indéterminé"
                            End If
                        End If
                        If numfor_du_chp = 0 Or tbl_fichExcel(i).CmdChpNum <= -10 Then
                            numfor_du_chp = STR_GetChamp(tbl_rdoF(i_tbl_RDOF).RDOF_FormNumS, "*", 1)
                        Else
                            sql = "select Forec_fornum from formetapechp where Forec_Num = " & tbl_fichExcel(i).CmdChpNum
                            Call Odbc_RecupVal(sql, numfor_du_chp)
                        End If
                        If Not boolListeChamps And MenFSi = "NOMBRE_TOTAL" Then
                            Sens = VoirSensDdon_Asc_Desc(tbl_rdoF(i_tbl_RDOF).RDOF_FormNumS, numfor_du_chp, cnd_jointure, table_jointure, tbl_fenExcel(F).FenNom & " " & tbl_fichExcel(i).CmdX & tbl_fichExcel(i).CmdY)
                            If Sens = "?" Then
                                MsgBox "Sens de la jointure indéterminé"
                            End If
                        End If
                        nomtable = "donnees_" & tbl_rdoF(i_tbl_RDOF).RDOF_FormNum
                        
                        '****************************
                        ' Gestion du type d'opérateur
                        '****************************
                        ' 2 MenFtype     POURCENT-TOTAL-VALEUR-SOMME-MOYENNE-ECART_TYPE#
                        '************************************************************************
                        'Avg (expression)
                        'count(*)   bigint number of input values
                        'count(expression) any bigint number of input values for which the value of expression is not null
                        'max(expression) any numeric, string, or date/time type same as argument type maximum value of expression across all input values
                        'min(expression) any numeric, string, or date/time type same as argument type minimum value of expression across all input values
                        'sum(expression) smallint, integer, bigint, real, double precision, numeric, or interval  bigint for smallint or integer arguments, numeric for bigint arguments, double precision for floating-point arguments, otherwise the same as the argument data type  sum of expression across all input values
                        'variance (expression)
                        '************************************************************************
                        lib = ChpLabel
                        On Error GoTo 0
                        
                        If boolListeChamps Then
                            GoTo LabFormerCondition
                        End If
                        If True Then
                            '**************************************************
                            ' CAS des autres types de champs que 'LISTE CHAMPS'
                            '**************************************************
                            ' Colonne_Val # POURCENT # VALEUR_R    # 5 # 121;114;118 # AUX_R     ' pour Liste
                            ' 0 MenFLigCol          Colonne_Lib_Val#
                            ' 1 MenFType            POURCENT-TOTAL-VALEUR-SOMME-MOYENNE-ECART_TYPE#
                            ' 3 MenFSi              VALEUR VALEUR_SIGNIF VALEUR_R NONVALEUR_R#
                            '                       => MenFSi_Valeurs et MenFSi_Global
                            ' 4 MenFNbValeur        * (nb occurences)
                            ' 5 MenFListeValeurs    Si liste : Liste des items à afficher ou *
                            ' 6 Pour Entier et Listes :
                            '   MenFparRapport      par rapport à : TOUTES AUX_R
                            '****************************************************
                            ' Ligne_Lib_Val#NOMBRE#VALEUR#*#TOUTES#
                            If MenFSi = "NOMBRE_TOTAL" Then
                                bool_liste = False
                                bool_liste_hierar = False
                                bool_liste_service = False
                                bool_liste_fonction = False
                            End If
                            If bool_liste Or bool_liste_hierar Or bool_liste_service Or bool_liste_fonction Then
                                If MenFSi_Valeurs Then
                                    sqlDonnees = "select [OPERATEUR] from " & nomtable & " [TABLE_JOINTURE] Where true [CND_JOINTURE] [CNDTOT] [CND_OPERATEUR] [CND_SIGNIF] [CND_R_NR] [CNDUNEVAL]"
                                    
                                    If MenFType = "NOMBRE" Then
                                        Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "NOMBRE", lib, Cnd_OperSql, OperSql)
                                    ElseIf MenFType = "POURCENT" Then
                                        Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "NOMBRE", lib, Cnd_OperSql, OperSql)
                                    Else
                                        MsgBox "Case ? sur " & ChpLabel
                                    End If
                                    
                                    If MenFSi = "VALEUR" Then   ' on veut toutes les valeurs
                                        sqlDonnees = Replace(sqlDonnees, "[OPERATEUR]", OperSql)
                                        sqlDonnees = Replace(sqlDonnees, "[CND_SIGNIF]", "")
                                        sqlDonnees = Replace(sqlDonnees, "[CND_OPERATEUR]", Cnd_OperSql)
                                    ElseIf MenFSi = "VALEUR_SIGNIF" Then   ' on veut les renseignées seulement
                                        sqlDonnees = Replace(sqlDonnees, "[OPERATEUR]", OperSql)
                                        s = " and ( " & ChpNom & " != '' and " & ChpNom & " IS NOT NULL )"
                                        sqlDonnees = Replace(sqlDonnees, "[CND_SIGNIF]", s)
                                        sqlDonnees = Replace(sqlDonnees, "[CND_OPERATEUR]", Cnd_OperSql)
                                    Else
                                        MsgBox "Case ? sur " & ChpLabel
                                    End If
                                ElseIf MenFSi_Global Then
                                    sqlDonnees = "select [OPERATEUR] from " & nomtable & " [TABLE_JOINTURE] Where true [CND_JOINTURE] [CNDTOT] [CND_OPERATEUR] [CND_SIGNIF] [CND_R_NR] [CNDUNEVAL]"
                                    If MenFType = "NOMBRE" Then
                                        Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "NOMBRE", lib, Cnd_OperSql, OperSql)
                                    ElseIf MenFType = "POURCENT" Then
                                        Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "NOMBRE", lib, Cnd_OperSql, OperSql)
                                    Else
                                        MsgBox "Case ? sur " & ChpLabel
                                    End If
                                    
                                    If MenFSi = "NONVALEUR_NR" Then   ' on veut le nombre de NON renseignées
                                        sqlDonnees = Replace(sqlDonnees, "[OPERATEUR]", OperSql)
                                        s = " and ( " & ChpNom & " = '' Or " & ChpNom & " IS NULL )"
                                        sqlDonnees = Replace(sqlDonnees, "[CND_SIGNIF]", s)
                                        sqlDonnees = Replace(sqlDonnees, "[CND_OPERATEUR]", Cnd_OperSql)
                                    ElseIf MenFSi = "NONVALEUR_R" Then   ' on veut le nombre de renseignées
                                        sqlDonnees = Replace(sqlDonnees, "[OPERATEUR]", OperSql)
                                        sqlDonnees = Replace(sqlDonnees, "[CND_SIGNIF]", "")
                                        sqlDonnees = Replace(sqlDonnees, "[CND_OPERATEUR]", Cnd_OperSql)
                                    Else
                                        MsgBox "Case ? sur " & ChpLabel
                                    End If
                                ElseIf MenFSi = "NOMBRE_TOTAL" Then
                                Else
                                    MsgBox "Case ? sur " & ChpLabel
                                End If
                            Else
                                sqlDonnees = "select [OPERATEUR] [OPERATEURFILS] from " & nomtable & " [TABLE_JOINTURE] Where true [CND_JOINTURE] [CNDTOT] [CND_OPERATEUR] [CND_SIGNIF] [CND_R_NR] [CNDUNEVAL]"
                                ZsqlDonnees = sqlDonnees
                                If MenFSi_Valeurs Then
                                    s = STR_GetChamp(MenForme, "#", 6)
                                    If InStr("STJMA", s) > 0 Then   ' c'est une date
                                        Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "DATE", lib, Cnd_OperSql, OperSql)
                                    Else
                                        Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "DISTINCT", lib, Cnd_OperSql, OperSql)
                                    End If
                                ElseIf MenFSi_Global Then
                                    If MenFType = "NOMBRE" Then
                                        Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "NOMBRE", lib, Cnd_OperSql, OperSql)
                                    ElseIf MenFType = "POURCENT" Then
                                        Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "SOMME", lib, Cnd_OperSql, OperSql)
                                    ElseIf MenFType = "ECART_TYPE" Then
                                        Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "ECART_TYPE", lib, Cnd_OperSql, OperSql)
                                    ElseIf MenFType = "MOYENNE" Then
                                        Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "MOYENNE", lib, Cnd_OperSql, OperSql)
                                    ElseIf MenFType = "SOMME" Then
                                        Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "SOMME", lib, Cnd_OperSql, OperSql)
                                    Else
                                        MsgBox "Case ? sur " & ChpLabel
                                    End If
                                End If
                                If MenFSi = "NONVALEUR_NR" Then   ' on veut le nombre de NON renseignées
                                    s = " and ( " & ChpNom & " = '' Or " & ChpNom & " IS NULL )"
                                    sqlDonnees = Replace(sqlDonnees, "[CND_SIGNIF]", s)
                                    sqlDonnees = Replace(sqlDonnees, "[CND_R_NR]", "")
                                    ZsqlDonnees = Replace(ZsqlDonnees, "[CND_SIGNIF]", s)
                                    ZsqlDonnees = Replace(ZsqlDonnees, "[CND_R_NR]", "")
                                ElseIf MenFSi = "NONVALEUR_R" Then   ' on veut le nombre renseignées
                                    s = " and ( " & ChpNom & " != '' and " & ChpNom & " IS NOT NULL )"
                                    sqlDonnees = Replace(sqlDonnees, "[CND_SIGNIF]", s)
                                    sqlDonnees = Replace(sqlDonnees, "[CND_R_NR]", "")
                                    ZsqlDonnees = Replace(ZsqlDonnees, "[CND_SIGNIF]", s)
                                    ZsqlDonnees = Replace(ZsqlDonnees, "[CND_R_NR]", "")
                                ElseIf MenFSi = "NOMBRE_TOTAL" Then   ' on veut le nombre de Fiches
                                    sqlDonnees = Replace(sqlDonnees, "[CND_SIGNIF]", "")
                                    sqlDonnees = Replace(sqlDonnees, "[CND_R_NR]", "")
                                    ZsqlDonnees = Replace(ZsqlDonnees, "[CND_SIGNIF]", "")
                                    ZsqlDonnees = Replace(ZsqlDonnees, "[CND_R_NR]", "")
                                ElseIf bool_entier Or bool_montant Then
                                    s = " and ( " & ChpNom & " != '' and " & ChpNom & " IS NOT NULL )"
                                    sqlDonnees = Replace(sqlDonnees, "[CND_SIGNIF]", s)
                                    sqlDonnees = Replace(sqlDonnees, "[CND_R_NR]", "")
                                    ZsqlDonnees = Replace(ZsqlDonnees, "[CND_SIGNIF]", s)
                                    ZsqlDonnees = Replace(ZsqlDonnees, "[CND_R_NR]", "")
                                ElseIf MenFSi = "VALEUR" Then
                                    sqlDonnees = Replace(sqlDonnees, "[CND_SIGNIF]", "")
                                    sqlDonnees = Replace(sqlDonnees, "[CND_R_NR]", "")
                                    ZsqlDonnees = Replace(ZsqlDonnees, "[CND_SIGNIF]", "")
                                    ZsqlDonnees = Replace(ZsqlDonnees, "[CND_R_NR]", "")
                                ElseIf MenFSi = "VALEUR_SIGNIF" Then
                                    s = " and ( " & ChpNom & " != '' and " & ChpNom & " IS NOT NULL )"
                                    sqlDonnees = Replace(sqlDonnees, "[CND_SIGNIF]", s)
                                    sqlDonnees = Replace(sqlDonnees, "[CND_R_NR]", "")
                                    ZsqlDonnees = Replace(ZsqlDonnees, "[CND_SIGNIF]", s)
                                    ZsqlDonnees = Replace(ZsqlDonnees, "[CND_R_NR]", "")
                                Else
                                    MsgBox "Case ? sur " & ChpLabel
                                End If
                                sqlDonnees = Replace(sqlDonnees, "[OPERATEUR]", OperSql)
                                sqlDonnees = Replace(sqlDonnees, "[OPERATEURFILS]", "")
                                sqlDonnees = Replace(sqlDonnees, "[CND_OPERATEUR]", Cnd_OperSql)
                            End If
                            
                            ' Si entier ou montant ET pourcentage ou moyenne => Par rapport à quoi ?
                            If MenFparRapport <> "" Then
                                If MenFType = "POURCENT" Or MenFType = "MOYENNE" Then
                                    If MenFparRapport = "TOUTES" Then
                                        sqlDonnees = Replace(sqlDonnees, "[CND_R_NR]", "")
                                    ElseIf MenFparRapport = "AUX_R" Then
                                        s = " and ( " & ChpNom & " != '' and " & ChpNom & " IS NOT NULL )"
                                        sqlDonnees = Replace(sqlDonnees, "[CND_R_NR]", s)
                                    Else
                                        MsgBox "Case ? sur " & ChpLabel
                                    End If
                                ElseIf MenFType = "NOMBRE" Then ' c'est une erreur
                                    MenFparRapport = ""
                                    sqlDonnees = Replace(sqlDonnees, "[CND_R_NR]", "")
                                Else
                                    MsgBox "Case ? sur " & ChpLabel
                                End If
                            Else
                                sqlDonnees = Replace(sqlDonnees, "[CND_R_NR]", "")
                            End If
                            '******************************************************
                            ' Former une condition générale syntaxiquement correcte
                            ' à partir de :
                            '   CndTot
                            '   CndL    conditions locales du filtre
                            '   CndC    conditions locales du champ
                            '   Cnd_DernierMoment
                            '******************************************************
LabFormerCondition:
                            If CndL <> "" Then
                                If CndTot = "" Then
                                    CndTot = CndL
                                Else
                                    CndTot = CndTot & " and " & CndL
                                End If
                            End If
                            If CndC <> "" Then
                                If CndTot = "" Then
                                    CndTot = CndC
                                Else
                                    CndTot = CndTot & " and " & CndC
                                End If
                            End If
                            If Cnd_DernierMoment <> "" Then
                                If CndTot = "" Then
                                    CndTot = Cnd_DernierMoment
                                Else
                                    CndTot = CndTot & " and " & Cnd_DernierMoment
                                End If
                            End If
                            
                            If CndTot = "" Then
                                CndTot = " and true "
                            Else
                                CndTot = " and " & CndTot
                            End If
                            
                            If boolListeChamps Then
                                GoTo LabCasChampListe
                            Else
                                MenFormeListe = ""
                            End If
                        
                            '*****************************************************
                            ' Si en pourcentage ou moyenne => Par rapport à quoi ?
                            '*****************************************************
                            sqlDonneesTotal = ""
                            If MenFparRapport <> "" Then
                                sqlDonneesTotal = "select [OPERATEUR] from " & nomtable & " [TABLE_JOINTURE] Where true [CND_JOINTURE] [CND_OPERATEUR] [CNDTOT] [CND_SIGNIF] [CND_R_NR]"
                                If MenFType = "POURCENT" Or MenFType = "MOYENNE" Then
                                    If bool_liste Or bool_liste_hierar Or bool_liste_service Or bool_liste_fonction Then
                                        Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "NOMBRE", s, Cnd_OperSqlT, OperSqlT)
                                    Else
                                        Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "SOMME", s, Cnd_OperSqlT, OperSqlT)
                                    End If
                                    If MenFparRapport = "TOUTES" Then
                                        ' il faut donc une requête pour le nombre total
                                        sqlDonneesTotal = Replace(sqlDonneesTotal, "[OPERATEUR]", OperSqlT)
                                        sqlDonneesTotal = Replace(sqlDonneesTotal, "[CNDTOT]", CndTot)
                                        sqlDonneesTotal = Replace(sqlDonneesTotal, "[CND_R_NR]", "")
                                        sqlDonneesTotal = Replace(sqlDonneesTotal, "[CND_SIGNIF]", "")
                                        sqlDonneesTotal = Replace(sqlDonneesTotal, "[CND_OPERATEUR]", Cnd_OperSqlT)
                                        'MsgBox "sqlDonneesTotal=" & sqlDonneesTotal
                                    ElseIf MenFparRapport = "AUX_R" Then
                                        ' il faut donc une requête pour le nombre total
                                        sqlDonneesTotal = Replace(sqlDonneesTotal, "[OPERATEUR]", OperSqlT)
                                        sqlDonneesTotal = Replace(sqlDonneesTotal, "[CNDTOT]", CndTot)
                                        s = " and ( " & ChpNom & " != '' and " & ChpNom & " IS NOT NULL )"
                                        sqlDonneesTotal = Replace(sqlDonneesTotal, "[CND_R_NR]", s)
                                        sqlDonneesTotal = Replace(sqlDonneesTotal, "[CND_SIGNIF]", "")
                                        sqlDonneesTotal = Replace(sqlDonneesTotal, "[CND_OPERATEUR]", Cnd_OperSqlT)
                                    Else
                                        MsgBox "Case ? sur " & ChpLabel
                                    End If
                                Else
                                    MsgBox "Case ? sur " & ChpLabel
                                End If
                            End If
                            If sqlDonneesTotal <> "" Then
                                sqlDonneesTotal = Replace(sqlDonneesTotal, "[TABLE_JOINTURE]", table_jointure)
                                If InStr(cnd_jointure, "|") > 0 Then
                                    laS1 = Replace(sqlDonneesTotal, "[CND_JOINTURE]", " And " & STR_GetChamp(cnd_jointure, "|", 0))
                                    laS2 = Replace(sqlDonneesTotal, "[CND_JOINTURE]", " And " & STR_GetChamp(cnd_jointure, "|", 1))
                                    sqlDonneesTotal = laS1 & " Union All " & laS2
                                Else
                                    sqlDonneesTotal = Replace(sqlDonneesTotal, "[CND_JOINTURE]", cnd_jointure)
                                End If
                                If Odbc_SelectV(sqlDonneesTotal, rsDonneesTotal) = P_ERREUR Then
                                    lib = lib & " : Erreur SQLTotal=" & sqlDonneesTotal
                                    ' On ne peut pas traiter
                                    GoTo Next_Chp
                                Else
                                    ' Mise en forme du résultat
                                    valTotal = 0
                                    If rsDonneesTotal.EOF Or IsNull(rsDonneesTotal(0).Value) Then
                                        valTotal = 0
                                    Else
                                        While Not rsDonneesTotal.EOF
                                            If Not IsNull(rsDonneesTotal(0).Value) Then
                                                valTotal = rsDonneesTotal(0).Value
                                            End If
                                            rsDonneesTotal.MoveNext
                                        Wend
                                    End If
                                End If
                            End If
                            
                            '*****************************************************
                            ' Lire les valeurs et voir lesquelles sont à conserver
                            '*****************************************************
                            ' si besoin lire d'abord le total
                            '*****************************************************
                            If tbl_fichExcel(i).CmdChpSQL <> "" Then
                                bool_entier = False
                            End If
                            If bool_entier Or bool_montant Or bool_Calcul Then
                                bCumuler = False
                                sqlDonnees = Replace(sqlDonnees, "[TABLE_JOINTURE]", table_jointure)
                                If InStr(cnd_jointure, "|") > 0 Then
                                    laS1 = Replace(sqlDonnees, "[CND_JOINTURE]", " And " & STR_GetChamp(cnd_jointure, "|", 0))
                                    laS2 = Replace(sqlDonnees, "[CND_JOINTURE]", " And " & STR_GetChamp(cnd_jointure, "|", 1))
                                    sqlDonnees = laS1 & " Union All " & laS2
                                Else
                                    sqlDonnees = Replace(sqlDonnees, "[CND_JOINTURE]", cnd_jointure)
                                End If
                                sqlDonnees = Replace(sqlDonnees, "[CNDUNEVAL]", "")
                                sqlDonnees = Replace(sqlDonnees, "[CNDTOT]", CndTot)
                                If Odbc_SelectV(sqlDonnees, rsDonnees) = P_ERREUR Then
                                    lib = lib & " : Erreur SQL=" & laS & " en " & FctStrColDest(leX) & leY
                                    MsgBox lib
                                    Call FctTrace(lib)
                                    BoolMettreErreur = True
                                    ValResultNB = "?"
                                    GoTo Next_Chp
                                End If
                                rsDonneesFait = True
                                zX = leX
                                zY = leY
                                z = 0
                                ReDim Preserve tbDistinctValeur(3, z)
                                ZsqlDonnees = Replace(ZsqlDonnees, "[TABLE_JOINTURE]", table_jointure)
                                ZsqlDonnees = Replace(ZsqlDonnees, "[CND_JOINTURE]", cnd_jointure)
                                ZsqlDonnees = Replace(ZsqlDonnees, "[CNDTOT]", CndTot)
                                ZsqlDonnees = Replace(ZsqlDonnees, "[OPERATEUR]", "")
                                If MenFType = "NOMBRE" Then
                                    Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "NOMBRE", Cnd_OperSqlT, Cnd_OperSql, OperSql)
                                ElseIf MenFType = "POURCENT" Then
                                    Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "SOMME", Cnd_OperSqlT, Cnd_OperSql, OperSql)
                                ElseIf MenFType = "ECART_TYPE" Then
                                    Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "ECART_TYPE", Cnd_OperSqlT, Cnd_OperSql, OperSql)
                                ElseIf MenFType = "MOYENNE" Then
                                    Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "MOYENNE", Cnd_OperSqlT, Cnd_OperSql, OperSql)
                                ElseIf MenFType = "SOMME" Then
                                    Call FaitCndOperateur(ChpNom, MenFSi_Valeurs, "SOMME", Cnd_OperSqlT, Cnd_OperSql, OperSql)
                                ElseIf MenFType = "NOMBRE" Then
                                Else
                                    MsgBox "Case ? sur " & ChpLabel
                                End If
                                ZsqlDonnees = Replace(ZsqlDonnees, "[CND_OPERATEUR]", Cnd_OperSql)
                                ZsqlDonnees = Replace(ZsqlDonnees, "[OPERATEURFILS]", OperSql)
                                ValResultNB = ""
                                valTotal = ""
                                While Not rsDonnees.EOF
                                    If IsNull(rsDonnees(0).Value) Then
                                        rsDonnees.MoveNext
                                        GoTo ValeurSuivante
                                    End If
                                    If Mid(MenFLigCol, 1, 7) = "Colonne" Then
                                        If zY = LaRowMax Then
                                            bCumuler = True
                                            ReDim Preserve tbDistinctValeur(3, z)
                                        End If
                                    ElseIf Mid(MenFLigCol, 1, 5) = "Ligne" Then
                                        If zX = LaColMax Then
                                            bCumuler = True
                                            ReDim Preserve tbDistinctValeur(3, z)
                                        End If
                                    End If
                                    ValResultNB = rsDonnees(0).Value
                                    If MenFSi_Valeurs Then
                                        If ChpNom <> "" Then
                                            ZZsqlDonnees = Replace(ZsqlDonnees, "[CNDUNEVAL]", " and upper(" & ChpNom & ")='" & UCase(rsDonnees(0).Value)) & "'"
                                        End If
                                        If Odbc_SelectV(ZZsqlDonnees, rsZ) <> P_ERREUR Then
                                            If Not bCumuler Then
                                                ReDim Preserve tbDistinctValeur(3, z)
                                                tbDistinctValeur(1, z) = ValResultNB
                                                tbDistinctValeur(2, z) = val(rsZ(0).Value)
                                                tbDistinctValeur(3, z) = ZZsqlDonnees
                                                z = z + 1
                                            Else
                                                tbDistinctValeur(1, z) = "Cumul"
                                                tbDistinctValeur(2, z) = val(tbDistinctValeur(2, z)) + val(rsZ(0).Value)
                                                tbDistinctValeur(3, z) = ZZsqlDonnees
                                            End If
                                            'If valTotal = "" Then valTotal = 0
                                            'valTotal = valTotal + val(rsZ(0).Value)
                                        End If
                                    Else
                                        ReDim Preserve tbDistinctValeur(3, z)
                                        tbDistinctValeur(1, z) = ""
                                        tbDistinctValeur(2, z) = val(rsDonnees(0).Value)
                                        tbDistinctValeur(3, z) = sqlDonnees
                                        valTotal = val(rsDonnees(0).Value)
                                        z = z + 1
                                    End If
                                    rsDonnees.MoveNext
                                    zY = zY + 1
                                    zX = zX + 1
ValeurSuivante:
                                Wend
                                If MenFSi_Global Then
                                    If MenFType = "SOMME" Then
                                        ValResultNB = valTotal
                                        GoTo Lab_Mettre_Resultat_Unique
                                    ElseIf MenFType = "NOMBRE" Then
                                        ValResultNB = valTotal
                                        GoTo Lab_Mettre_Resultat_Unique
                                    ElseIf MenFType = "ECART_TYPE" Then
                                        ValResultNB = valTotal
                                        GoTo Lab_Mettre_Resultat_Unique
                                    ElseIf MenFType = "MOYENNE" Then
                                        ValResultNB = valTotal
                                        GoTo Lab_Mettre_Resultat_Unique
                                    End If
                                End If
                                If z > 0 Then
                                    pourcentTotal = 0
                                    For z = 0 To UBound(tbDistinctValeur, 2)
                                        ' les placer
                                        If MenFType = "POURCENT" Then
                                            If valTotal > 0 Then
                                                sval = (val(tbDistinctValeur(2, z)) / val(valTotal))
                                            Else
                                                sval = 0
                                            End If
                                            sval = Format(sval, "#0.##")
                                            pourcentTotal = pourcentTotal + sval
                                        ElseIf MenFType = "MOYENNE" Then
                                            If valTotal > 0 Then
                                                sval = val(tbDistinctValeur(2, z)) / val(valTotal)
                                            Else
                                                sval = 0
                                            End If
                                            sval = Format(sval, "#0.##")
                                        ElseIf MenFType = "NOMBRE" Then
                                            sval = val(tbDistinctValeur(2, z))
                                            sval = Format(sval, "#0")
                                            'pourcentTotal = pourcentTotal + sval
                                        Else
                                            sval = Format(val(tbDistinctValeur(2, z)), "#0.00")
                                            'pourcentTotal = pourcentTotal + sval
                                        End If
                                        If Mid(sval, Len(sval), 1) = "," Then sval = Mid(sval, 1, Len(sval) - 1)
                                        If p_Excel_Decimal_Separator = "" Then Call P_Exc_DecimalSeparator
                                        sval = Replace(sval, ",", p_Excel_Decimal_Separator)
                                        sval = Replace(sval, ".", p_Excel_Decimal_Separator)
                                        LblHelp.Visible = True
                                        lib = tbDistinctValeur(1, z)
                                        laS = tbDistinctValeur(3, z)
                                        If Mid(MenFLigCol, 1, 5) = "Ligne" Then
                                            scoordFin = FctStrColDest(leX) & "_" & (leY + 1)
                                        ElseIf Mid(MenFLigCol, 1, 7) = "Colonne" Then
                                            scoordFin = FctStrColDest(leX + 1) & "_" & leY
                                        End If
                                        scoordFin = "$" & STR_GetChamp(scoordFin, "_", 0) & "$" & STR_GetChamp(scoordFin, "_", 1)
                                        
                                        Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leX, leY, MenFLigCol, lib, sval, F, bool_liste, laS, 0, bEpingle)
                                    Next z
                            
                                    ' Voir si Graphique
                                    If p_dansExcel Then
                                        ' Voir si ce graphique existe
                                        ' si oui, modifier son datasource
                                        If Exc_obj.ActiveSheet.Shapes.Count > 0 Then
                                            If VoirSiChartExiste("Activate", "", g_numfeuille, i, sret) >= 0 Then
                                                'MsgBox scoordDebut & " " & scoordFin
                                                'scoordDebut = "$" & STR_GetChamp(scoordDebut, "_", 0) & "$" & STR_GetChamp(scoordDebut, "_", 1)
                                                If scoordFin = "" Then scoordFin = scoordDebut
                                                Exc_obj.ActiveWorkbook.ActiveChart.SetSourceData (Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(F).FenNom).Range(scoordDebut & ":" & scoordFin))
                                            End If
                                        End If
                                    End If
                                End If
                            ElseIf bool_liste Or bool_liste_hierar Or bool_liste_service Or bool_liste_fonction Or bool_liste_date Then
                                GoTo LabPourRepartition
                                'If sqlVal <> "" Then
                                '    estRelié = False
                                '    If bool_liste_service Then
                                '        'GoTo LabPourService
                                '    End If
                                '    If bool_liste_hierar Then
                                '        'GoTo LabPourService     'LabPourHierarchie
                                '    End If
                                '    If bool_liste Then
                                '        For iX = 0 To UBound(tbl_fichExcel)
                                '            If tbl_fichExcel(iX).CmdChpRelierà <> "" Then
                                '                iY = Relié_à(tbl_fichExcel(iX).CmdChpRelierà)
                                '                s = tbl_fichExcel(iX).CmdChpNum
                                '                If iY = I And tbl_fichExcel(iX).CmdChpNum > -1 Then
                                '                    GoTo LabPourListes
                                '                End If
                                '            End If
                                '        Next iX
                                '        'GoTo LabPourListes
                                '    End If
                                '    '**************************************************************
                                '    ' Lire les valeurs (listes) et voir lesquelles sont à conserver
                                '    '**************************************************************
'LabTrait_sans_declinaison:
                                '    If Odbc_SelectV(sqlVal, rsVal) = P_ERREUR Then
                                '        Exit Sub
                                '    End If
                                '    If MenFNbValeur = "*" Then
                                '        rsVal.MoveLast
                                '        rsVal.MoveFirst
                                '        nbvaleurs = rsVal.RowCount
                                '    Else
                                '        If MenFListeValeurs = "TOUTES" Then
                                '            rsVal.MoveLast
                                '            rsVal.MoveFirst
                                '            nbvaleurs = rsVal.RowCount
                                '        Else
                                '            nbvaleurs = 0
                                '            While Not rsVal.EOF
                                '                ' voir si c'est une valeur qui nous concerne
                                '                For II = 0 To STR_GetNbchamp(MenFListeValeurs, ";")
                                '                    If STR_GetChamp(MenFListeValeurs, ";", II) <> "" Then
                                '                        If bool_liste Then nombasechp = "vc_num"
                                '                        If bool_liste_hierar Then nombasechp = "hvc_num"
                                '                        If bool_liste_fonction Then nombasechp = "ft_num"
                                '                        If bool_liste_service Then
                                '                            If STR_GetChamp(STR_GetChamp(MenFListeValeurs, ";", II), "=", 0) = "S" & rsVal("srv_num") Then
                                '                                nbvaleurs = nbvaleurs + 1
                                '                                Exit For
                                '                            End If
                                '                        End If
                                '                    End If
                                '                Next II
                                '                rsVal.MoveNext
                                '            Wend
                                '            rsVal.MoveFirst
                                '        End If
                                '        If nbvaleurs > MenFNbValeur Then
                                '            nbvaleurs = MenFNbValeur
                                '        End If
                                '    End If
                                'End If
                            Else
                                nbvaleurs = 1
                            End If
                            GoTo LabTraitNormal1
LabPourRepartition:
                            If MenFSi = "NONVALEUR_NR" Then   ' on veut le nombre de NON renseignées
                                If bool_liste_service Then
                                    àMettre = FctVoirSiPeutMettre(MenFLigCol, LeYMax, leY, LaRowMax, LeXMax, leX, LaColMax)
                                    If Not àMettre Then GoTo Trop
                                    sqlDonnees = Replace(sqlDonnees, "[TABLE_JOINTURE]", table_jointure)
                                    sqlDonnees = Replace(sqlDonnees, "[CND_JOINTURE]", cnd_jointure)
                                    sqlDonnees = Replace(sqlDonnees, "[CNDUNEVAL]", "")
                                    sqlDonnees = Replace(sqlDonnees, "[CNDTOT]", CndTot)
                                    If Odbc_SelectV(sqlDonnees, rsDonnees) = P_ERREUR Then
                                        lib = lib & " : Erreur SQL=" & laS
                                        ValResultNB = "?"
                                        GoTo Next_Chp
                                    Else
                                        ' Mise en forme du résultat
                                        If Not rsDonnees.EOF Then
                                            ValResultNB = rsDonnees(0).Value
                                        End If
                                    End If
                                    ValResultNB = Format(ValResultNB, "#0.00")
                                    If Mid(ValResultNB, Len(ValResultNB), 1) = "," Then ValResultNB = Mid(ValResultNB, 1, Len(ValResultNB) - 1)
                                    GoTo Lab_Mettre_Resultat_Unique
                                End If
                            End If

                            If tbl_fichExcel(i).CmdChpNum < -10 Then '   champ nombre de fiches
                            Else
                                Call Odbc_RecupVal("select forec_type, forec_fctvalid from formetapechp where forec_num=" & tbl_fichExcel(i).CmdChpNum, le_forectype, le_forecvalid)
                                le_forecNum = tbl_fichExcel(i).CmdChpNum
                                If le_forecvalid = "%NUMSERVICE" Then
                                    le_forectype = "NUMSERVICE"
                                ElseIf le_forecvalid = "%NUMFCT" Then
                                    le_forectype = "NUMFCT"
                                ElseIf le_forectype = "HIERARCHIE" Then
                                    le_forectype = "HIERARCHIE"
                                ElseIf InStr(le_forecvalid, "%DATE") > 0 Then
                                    le_forectype = "DATE"
                                End If
                            End If
                            Dim EntType As String, CndEnt As String
                            Dim OrderEnt As String
                            Dim nbChpReliés As Integer
                            Dim DateDeb As String, DateFin As String
                            Dim sD As String
                            Dim sX As String
                            
                            Dim iValeur As Integer
                            Dim paddListe As String
                            iValeur = 0
                            strMenForme = ""
                            strSQL = ""
                            strListeChp = ""
                            strIX = ""
                            bEpingle = True
                            ValResult = 0
                            ValResultNB = 0
                            paddListe = ""
                            nbval = 0
                            estRelié = False
                            nbChpReliés = 0
                            OrderEnt = ""
                            P_Faire_tbListeVals = True
                            P_UB_tbListeVals = 0
                            If (bool_liste Or bool_liste_service Or bool_liste_fonction Or bool_liste_hierar Or bool_liste_date) Then
                                Dim nbOccur As Integer
                                laS = sqlDonnees
                                laS = Replace(laS, strNomchpCourt, strNomChp)
                                If i = 25 Then
                                    i = i
                                End If
                                For iX = 0 To UBound(tbl_fichExcel)
                                    If tbl_fichExcel(iX).CmdType = "CHP" And tbl_fichExcel(iX).CmdChpRelierà <> "" Then
                                        iY = Relié_à(tbl_fichExcel(iX).CmdChpRelierà)
                                        s = tbl_fichExcel(iX).CmdChpNum
                                        If iY = i And tbl_fichExcel(iX).CmdChpNum > -1 Then
                                            Call Odbc_RecupVal("select forec_nom,forec_valeurs_possibles, forec_fornum,forec_type,forec_fctvalid from formetapechp where forec_num=" & tbl_fichExcel(iX).CmdChpNum, s, sNbVal, le_forec_fornum, s_forectype, s_forecfctvalid)
                                            If s_forecfctvalid = "%NUMSERVICE" Then
                                                s_forectype = "NUMSERVICE"
                                                EntType = "S"
                                                CndEnt = Repart_MenFormeCndEntite(nbOccur, EntType, 0, iX, "*")
                                            ElseIf s_forectype = "HIERARCHIE" Then
                                                s_forectype = "HIERARCHIE"
                                                EntType = "H"
                                                CndEnt = Repart_MenFormeCndEntite(nbOccur, EntType, sNbVal, iX, "*")
                                            ElseIf InStr(s_forecfctvalid, "%DATE") > 0 Then
                                                s_forectype = "DATE"
                                                EntType = "D"
                                                ' récupérer les dates Début et Fin
                                                sD = InStr(1, CndTot, "to_date")
                                                If sD = 0 Then
                                                    DateDeb = "01/01/2000"
                                                    DateFin = Date
                                                    If p_TraitPublier = "P" Then
                                                        Call MsgBox("Vous devriez ajouter une condition sur la date" & vbCrLf & "Début : " & DateDeb & " Fin : " & DateFin)
                                                    End If
                                                Else
                                                    sD = InStr(sD, CndTot, ">")
                                                    DateDeb = Mid(CndTot, sD)
                                                    DateDeb = STR_GetChamp(DateDeb, "And", 0)
                                                    DateDeb = Replace(DateDeb, ">", "")
                                                    DateDeb = Replace(DateDeb, "=", "")
                                                    DateDeb = Replace(DateDeb, "'", "")
                                                    DateDeb = Replace(DateDeb, " ", "")
                                                    DateDeb = Mid(DateDeb, 9, 2) & "/" & Mid(DateDeb, 6, 2) & "/" & Mid(DateDeb, 1, 4)
                                                    sD = InStr(sD, CndTot, "to_date")
                                                    If sD = 0 Then
                                                        DateFin = Date
                                                        If p_TraitPublier = "P" Then
                                                            Call MsgBox("Vous devriez ajouter une condition sur la date" & vbCrLf & "Début : " & DateDeb & " Fin : " & DateFin)
                                                        End If
                                                    Else
                                                        sD = InStr(sD, CndTot, "<")
                                                        DateFin = Mid(CndTot, sD)
                                                        DateFin = STR_GetChamp(DateFin, "And", 0)
                                                        DateFin = Replace(DateFin, "<", "")
                                                        DateFin = Replace(DateFin, "=", "")
                                                        DateFin = Replace(DateFin, "'", "")
                                                        DateFin = Replace(DateFin, " ", "")
                                                        DateFin = Mid(DateFin, 9, 2) & "/" & Mid(DateFin, 6, 2) & "/" & Mid(DateFin, 1, 4)
                                                    End If
                                                End If
                                                sX = tbl_fichExcel(iX).CmdMenFormeChp
                                                sX = STR_GetChamp(sX, "#", 6)
                                                sNbVal = DateDeb & ";" & DateFin & ";" & sX
                                                CndEnt = Repart_MenFormeCndEntite(nbOccur, EntType, sNbVal, iX, "*")
                                                OrderEnt = "donnees_" & le_forec_fornum & "." & s
                                            ElseIf s_forecfctvalid = "%NUMFCT" Then
                                                s_forectype = "FONCTION"
                                                EntType = "F"
                                                CndEnt = Repart_MenFormeCndEntite(nbOccur, EntType, 0, iX, "*")
                                            ElseIf s_forectype = "RADIO" Or s_forectype = "CHECK" Or s_forectype = "SELECT" Then
                                                EntType = "L"
                                                CndEnt = Repart_MenFormeCndEntite(nbOccur, EntType, sNbVal, iX, "*")
                                            Else
                                                MsgBox "Champ Relié de type " & s_forectype & " !!!"
                                                GoTo LabNextIXS
                                            End If
                                            
                                            estRelié = True
                                            nbChpReliés = nbChpReliés + 1
                                            strSQL = strSQL & IIf(strSQL = "", "", " OR ") & CndEnt
                                            strNomChp = strNomChp & ", donnees_" & le_forec_fornum & "." & s
                                            strListeChp = strListeChp & "|" & tbl_fichExcel(iX).CmdChpNum
                                            strMenForme = strMenForme & "|" & tbl_fichExcel(iX).CmdMenFormeChp
                                            strIX = strIX & "|" & iX
                                        End If
                                    End If
LabNextIXS:
                                Next iX
                                laS = Replace(laS, "COUNT(*)", strNomChp)
                                
                                ' Voir si restriction sur ce champ
                                Dim StrCndUneVal As String
                                If strSQL <> "" Then
                                    laS = Replace(laS, "[CNDUNEVAL]", " and (" & strSQL & ")")
                                Else
                                    laS = Replace(laS, "[CNDUNEVAL]", " ")
                                End If
                                laS = Replace(laS, "[TABLE_JOINTURE]", table_jointure)
                                If InStr(cnd_jointure, "|") > 0 Then
                                    laS1 = Replace(laS, "[CND_JOINTURE]", " And " & STR_GetChamp(cnd_jointure, "|", 0))
                                    laS2 = Replace(laS, "[CND_JOINTURE]", " And " & STR_GetChamp(cnd_jointure, "|", 1))
                                    laS = laS1 & " Union All " & laS2
                                Else
                                    laS = Replace(laS, "[CND_JOINTURE]", cnd_jointure)
                                End If
                                CndTot = Trim(CndTot)
                                ' traitement de MenFSi (Valeur significatives)
                                Dim Rel_ForecNom As String
                                Dim Rel_MenForme As String
                                Dim Rel_ForecNum As String
                                Dim Rel_MenFSi As String
                                Dim Rel_MenFNbValeur As String
                                Dim Rel_MenFListeValeurs As String
                                Dim Rel_SQL As String
                                Dim Rel_Val As String
                                Dim n As Integer
                                Dim CndRelVal As String
                                If Mid(UCase(CndTot), 1, 3) = "AND" Then
                                    laS = Replace(laS, "[CNDTOT]", CndTot)
                                Else
                                    laS = Replace(laS, "[CNDTOT]", " and " & CndTot)
                                End If
                                
                                Dim EntNum As Integer
                                Dim EntNiveau As Integer
                                Dim EntStr As String
                                
                                ' Partie Gauche : SQL pour ne conserver que les "Entités" Retenues
                                Dim chp_Forec_FctValid As String
                                Dim Entite_ForecType As String, Entite_ForecFctValid As String
                                Dim Entite_ForecNom As String
                                Dim Entite_ListeNum As String
                                Dim tbResEnt()
                                Dim laSBis As String
                                Dim SovBar As Integer
                                Dim SovBarString As String
                                P_Faire_tbListeVals = False

                                Call Odbc_RecupVal("select forec_nom, forec_type, forec_fctvalid, forec_valeurs_possibles from formetapechp where forec_num=" & le_forecNum, Entite_ForecNom, Entite_ForecType, Entite_ForecFctValid, Entite_ListeNum)
                                If Entite_ForecFctValid = "%NUMSERVICE" Then
                                    Entite_ForecType = "NUMSERVICE"
                                    EntType = "S"
                                    CndEnt = Repart_MenFormeCndEntite(nbOccur, EntType, 0, i, "*")
                                ElseIf Entite_ForecType = "HIERARCHIE" Then
                                    Entite_ForecType = "HIERARCHIE"
                                    EntType = "H"
                                    CndEnt = Repart_MenFormeCndEntite(nbOccur, EntType, Entite_ListeNum, i, "*")
                                ElseIf Entite_ForecFctValid = "%NUMFCT" Then
                                    Entite_ForecType = "FONCTION"
                                    EntType = "F"
                                    CndEnt = Repart_MenFormeCndEntite(nbOccur, EntType, 0, i, "*")
                                ElseIf InStr(Entite_ForecFctValid, "%DATE") > 0 Then
                                    If ChpNom <> "" Then
                                        laS = Replace(laS, "from", " as " & ChpNom & " from")
                                    Else
                                        laS = Replace(laS, "from", " as nombre_" & i & " from")
                                    End If
                                    laSBis = ""
                                    Dim cndD As String, cndD_DebFin As String, cndD_Deb As String, cndD_Fin As String
                                    Dim nbUnion As Integer, sUnion As String
                                    Dim ListeNumD As String
                                    Dim pos As Integer
                                    nbUnion = STR_GetNbchamp(laS, "Union All")
                                    For kk = 0 To nbUnion - 1
                                        'sUnion = STR_GetChamp(laS, "Union All", kk)
                                        n = InStr(laS, "Union All")
                                        If n = 0 Then
                                            sUnion = laS
                                        Else
                                            If kk = 0 Then
                                                sUnion = left$(laS, n - 1)
                                            Else
                                                sUnion = Mid$(laS, n + Len("Union All"))
                                            End If
                                        End If
                                        If sUnion <> "" Then
                                            cndD = STR_GetChamp(sUnion, "from", 1)
                                            cndD_DebFin = "min(to_date(" & strNomChp & ",'DD/MM/YYYY')), max(to_date(" & strNomChp & ",'DD/MM/YYYY'))"
                                            sUnion = "select " & cndD_DebFin & " from " & cndD
                                            sUnion = Replace(sUnion, "  ", " ")
                                            sUnion = Replace(sUnion, "and true", "")
                                            sUnion = Replace(sUnion, "  ", " ")
                                            sUnion = Replace(sUnion, "  ", " ")
                                            sUnion = Replace(sUnion, "  ", " ")
                                            sUnion = Replace(sUnion, "Where and", "Where")
                                            sUnion = Replace(sUnion, "Where and", "Where")
                                            sUnion = Replace(sUnion, "Where And", "Where")
                                            sUnion = Replace(sUnion, "Where and", "Where")
                                            laSBis = laSBis & IIf(laSBis = "", "", " Union All ") & sUnion
                                        End If
                                    Next kk
                                    Call Odbc_RecupVal(laSBis, cndD_Deb, cndD_Fin)
                                    Entite_ForecType = "DATE"
                                    EntType = "D"
                                    ListeNumD = cndD_Deb & ";" & cndD_Fin & ";" & STR_GetChamp(tbl_fichExcel(i).CmdMenFormeChp, "#", 6)
                                    CndEnt = Repart_MenFormeCndEntite(nbOccur, EntType, ListeNumD, i, "*")
                                Else
                                    EntType = "L"
                                    CndEnt = Repart_MenFormeCndEntite(nbOccur, EntType, Entite_ListeNum, i, "*")
                                End If
                                If CndEnt <> "" Then
                                    laS = laS & " And " & CndEnt
                                End If
                                laS = Replace(laS, "  ", " ")
                                laS = Replace(laS, "and true", "")
                                laS = Replace(laS, "Where true", "Where")
                                laS = Replace(laS, "  ", " ")
                                laS = Replace(laS, "  ", " ")
                                laS = Replace(laS, "  ", " ")
                                laS = Replace(laS, "Where and", "Where")
                                laS = Replace(laS, "Where and", "Where")
                                laS = Replace(laS, "Where And", "Where")
                                laS = Replace(laS, "Where and", "Where")
                                s = LblSimulFeuille.Caption
                                LblSimulFeuille.Caption = "Appel SQL"
                                If Odbc_SelectV(laS, rsDonnees) = P_ERREUR Then
                                    lib = lib & " : Erreur SQL=" & laS
                                    MsgBox lib
                                    GoTo Next_Chp
                                End If
                                'If rsDonnees.EOF Then
                                '    Debug.Print "Vide" & " " & laS
                                'Else
                                '    rsDonnees.MoveLast
                                '    rsDonnees.MoveFirst
                                '    Debug.Print rsDonnees.RowCount & " " & laS
                                'End If
                                rsDonneesFait = True
                                LblSimulFeuille.Caption = s
                                SovBar = laForm.PgBarChp.Value
                                SovBarString = LblSimulFeuille.Caption
                                Dim b_rsDonnees_Vide As Boolean
                                b_rsDonnees_Vide = False
                                If rsDonnees.EOF Then
                                    b_rsDonnees_Vide = True
                                    GoTo LabVider
                                End If
                                
                                Dim cr As Integer
                                If EntType = "D" Then
                                    Liste_Num = ListeNumD
                                End If
                                cr = FaitResultRepartition(Liste_Num, laForm, rsDonnees, strListeChp, strMenForme, le_forecNum, i)
                                If cr = P_ERREUR Then
                                    GoTo Apres_Lab_Close
                                End If
                                ' Si c'est une liste => remettre dans l'ordre
                                If EntType = "L" Then
                                    iX = Repart_Chercher_Entite("L", Liste_Num, i)
                                    Erase New_tb_Entite
                                    ReDim Preserve New_tb_Entite(0)
                                    New_tb_Entite(UBound(New_tb_Entite)) = P_tb_Entite(0) ' Total
                                    Dim EntOrdre As String
                                    Dim encore As Boolean
                                    Dim Yest As Boolean
                                    Dim Ya0 As Boolean
                                    Dim UbInit As Integer
                                    encore = True
                                    EntOrdre = 0
                                    UbInit = UBound(P_tb_Entite)
                                    Ya0 = False
                                    For iY = 1 To UBound(P_tb_Entite())
                                        If P_tb_Entite(iY).NumEntite = 0 Then
                                            Ya0 = True
                                            Exit For
                                        End If
                                    Next iY
                                    While encore
                                        For iM = 0 To UBound(tbl_LesListes_Entites(iX).EntPEntites)
                                            If tbl_LesListes_Entites(iX).EntPEntites(iM).EntFOrdre = EntOrdre Then
                                                Yest = False
                                                For iY = 1 To UBound(P_tb_Entite())
                                                    If P_tb_Entite(iY).NumEntite = tbl_LesListes_Entites(iX).EntPEntites(iM).EntFNum Then
                                                        Yest = True
                                                        Exit For
                                                    End If
                                                Next iY
                                                If Yest Then
                                                    ReDim Preserve New_tb_Entite(UBound(New_tb_Entite) + 1)
                                                    New_tb_Entite(UBound(New_tb_Entite)) = P_tb_Entite(iY)
                                                    Exit For
                                                End If
                                            End If
                                        Next iM
                                        EntOrdre = EntOrdre + 1
                                        If Ya0 Then
                                            If UBound(New_tb_Entite) = UBound(P_tb_Entite) - 1 Then
                                                For iY = 1 To UBound(P_tb_Entite())
                                                    If P_tb_Entite(iY).NumEntite = 0 Then
                                                        ReDim Preserve New_tb_Entite(UBound(New_tb_Entite) + 1)
                                                        New_tb_Entite(UBound(New_tb_Entite)) = P_tb_Entite(iY)
                                                        Exit For
                                                    End If
                                                Next iY
                                            End If
                                        End If
                                        If UBound(New_tb_Entite) = UBound(P_tb_Entite) Then
                                            encore = False
                                        End If
                                    Wend
                                    Erase P_tb_Entite
                                    For iY = 0 To UBound(New_tb_Entite())
                                        ReDim Preserve P_tb_Entite(iY)
                                        P_tb_Entite(iY) = New_tb_Entite(iY)
                                    Next iY
                                End If
                                ' si MenFSi_Valeurs = false => Cumuler
                                Dim XCalc As Double
                                If Not MenFSi_Valeurs Then
                                    XCalc = 0
                                    For iM = 1 To UBound(P_tb_Entite)
                                        XCalc = XCalc + P_tb_Entite(iM).nombre
                                    Next iM
                                    P_tb_Entite(0).nombre = XCalc
                                End If

                                If MenFType = "POURCENT" Then
                                    If valTotal > 0 Then
                                        For iM = 1 To UBound(P_tb_Entite)
                                            XCalc = P_tb_Entite(iM).nombre / valTotal * 100
                                            P_tb_Entite(iM).nombre = Round(XCalc, 3)
                                        Next iM
                                    End If
                                Else
                                    valTotal = P_tb_Entite(0).nombre
                                End If
                                
                                ' Pour chaque ligne d'Entité => ligne des valeurs
                                LeXMax = grdCell(F).Cols
                                LeYMax = grdCell(F).Rows
                                If p_Excel_Decimal_Separator = "" Then Call P_Exc_DecimalSeparator
                                niveauMax = -2
                                For iM = 0 To UBound(P_tb_Entite)
                                    If P_tb_Entite(iM).niveau > niveauMax Then
                                        niveauMax = P_tb_Entite(iM).niveau
                                    End If
                                Next iM
                                
                                On Error GoTo 0
                                Erase New_tb_Entite
                                ReDim Preserve New_tb_Entite(0)
                                New_tb_Entite(UBound(New_tb_Entite)) = P_tb_Entite(0) ' Total
                                For iM = 1 To UBound(P_tb_Entite)
                                    ' trouver sur ce niveau
                                    If P_tb_Entite(iM).EntNumPere = 0 Then
                                        ' trouver ses fils
                                        ReDim Preserve New_tb_Entite(UBound(New_tb_Entite) + 1)
                                        New_tb_Entite(UBound(New_tb_Entite)) = P_tb_Entite(iM)
                                        If EntType = "S" Or EntType = "H" Then
                                            If New_tb_Entite(UBound(New_tb_Entite)).NumEntite > 0 Then
                                                Call ResTbEntiteTrouverFils(iM, 0)
                                            End If
                                        End If
                                    End If
                                Next iM
                                iM = iM
                                'For iM = 0 To UBound(New_tb_Entite)
                                '    s = ""
                                '    For j = 2 To New_tb_Entite(iM).niveau
                                '        s = s & "-- "
                                '    Next j
                                '    Debug.Print s & " Niveau:" & New_tb_Entite(iM).niveau & " NiveauSH:" & New_tb_Entite(iM).NiveauSH & " Lib:" & New_tb_Entite(iM).LibEntite & " Num:" & New_tb_Entite(iM).NumEntite & " Pere:" & New_tb_Entite(iM).EntNumPere & " Nb:" & New_tb_Entite(iM).nombre
                                '    If P_bool_tb_Entite_ya_valeurs Then
                                '        iTotal = 0
                                '        If iM > 0 Then
                                '            For iX = 0 To UBound(New_tb_Entite(iM).valeurs)
                                '                Debug.Print s & "  " & iX & " nb:" & New_tb_Entite(iM).valeurs(iX).nb & " valeur:" & New_tb_Entite(iM).valeurs(iX).valeur & " obj:" & New_tb_Entite(iM).valeurs(iX).numobj
                                '                iTotal = iTotal + New_tb_Entite(iM).valeurs(iX).nb
                                '            Next iX
                                '            Debug.Print s & "  Total:" & iTotal
                                '        End If
                                '    End If
                                'Next iM
                                
                                bEpingle = True
                                leYdebut = leY
                                ' ligne de titre des valeurs
                                ' à faire pour chaque champ relié
                                Dim iChpRelié As Integer
                                If P_bool_tbColonnes Then
                                    numCol = 0
                                    ' quels niveaux ?
                                    For iChpRelié = 1 To nbChpReliés
                                        For iM = 0 To UBound(P_total_colonnes)
                                            If P_total_colonnes(iM).chpnum = STR_GetChamp(strListeChp, "|", iChpRelié) Then
                                                If P_total_colonnes(iM).valeur = STR_GetChamp(P_total_colonnes(iM).valtot, ";", STR_GetNbchamp(P_total_colonnes(iM).valtot, ";") - 1) Then  ' niveau le plus bas
                                                    If Mid(P_total_colonnes(iM).valeur, 1, 4) = "<NR>" Then
                                                    Else
                                                        If P_total_colonnes(iM).leX = 0 Then
                                                            numCol = numCol + 1
                                                            P_total_colonnes(iM).leX = numCol
                                                        End If
                                                    End If
                                                End If
                                            End If
                                        Next iM
                                    Next iChpRelié
                                    'For iM = 0 To UBound(P_total_colonnes)
                                    '    Debug.Print iM & " coord:" & P_total_colonnes(iM).leX & P_total_colonnes(iM).leY & " " & P_total_colonnes(iM).lib & " (" & P_total_colonnes(iM).valeur & ") nbtot:" & P_total_colonnes(iM).nbtot & " niv:" & P_total_colonnes(iM).Niveau
                                    'Next iM
                                    ' mettre les NR
                                    For iM = 0 To UBound(P_total_colonnes)
                                        If P_total_colonnes(iM).valeur = STR_GetChamp(P_total_colonnes(iM).valtot, ";", STR_GetNbchamp(P_total_colonnes(iM).valtot, ";") - 1) Then  ' niveau le plus bas
                                            If Mid(P_total_colonnes(iM).valeur, 1, 4) = "<NR>" Then
                                                If P_total_colonnes(iM).leX = 0 Then
                                                    numCol = numCol + 1
                                                    P_total_colonnes(iM).leX = numCol
                                                End If
                                            End If
                                        End If
                                    Next iM
                                End If
                                iM = iM
                                'For iM = 0 To UBound(P_total_colonnes)
                                '    Debug.Print iM & " coord:" & P_total_colonnes(iM).leX & P_total_colonnes(iM).leY & " " & P_total_colonnes(iM).lib & " (" & P_total_colonnes(iM).valeur & ") nbtot:" & P_total_colonnes(iM).nbtot & " niv:" & P_total_colonnes(iM).Niveau
                                'Next iM
                                
                                ' Vider
LabVider:
                                Dim enleverPicture As Boolean
                                p_bfaire_RowColChange = False
                                leYplus = leYdebut
                                X_Debut = tbl_fichExcel(i).CmdX_Debut
                                Y_Debut = tbl_fichExcel(i).CmdY_Debut
                                If strListeChp = "" And bool_liste_date Then
                                    leYdebut = UBound(P_tb_Entite)
                                    MenFSi_Valeurs = True
                                End If
                                If X_Debut = "" Or Y_Debut = "" Then
                                    GoTo PasVider
                                End If
                                If estRelié Then
                                    Y_Debut = Y_Debut - 1
                                    If Y_Debut < 2 Then
                                        MsgBox "Les champs reliés doivent être au moins en ligne 3"
                                        Exit Function
                                    End If
                                End If
                                X_Fin = tbl_fichExcel(i).CmdX_Fin
                                If X_Fin = "" Then X_Fin = X_Debut
                                Y_Fin = tbl_fichExcel(i).CmdY_Fin
                                If Y_Fin = "" Then Y_Fin = Y_Debut
                                If p_dansExcel Then
                                    GoTo PasVider
                                End If
                                For iX = X_Debut To X_Fin
                                    For iY = Y_Debut To Y_Fin
                                        If p_dansGrid Then
                                        ' ne pas effacer la picture du champ
                                            If iX <= LaColMax And iY <= LaRowMax Then
                                                PiloteExcelBis.grdCell(F).row = iY
                                                PiloteExcelBis.grdCell(F).col = iX
                                                PiloteExcelBis.grdCell(F).TextMatrix(iY, iX) = ""
                                                If iY = tbl_fichExcel(i).CmdY And iX = FctIntColdest(tbl_fichExcel(i).CmdX) Then
                                                    If b_rsDonnees_Vide Then
                                                        PiloteExcelBis.grdCell(F).TextMatrix(iY, iX) = "     0"  '"     VIDE"
                                                    End If
                                                Else
                                                    enleverPicture = True
                                                    If PiloteExcelBis.grdCell(F).CellPicture = 0 Then
                                                    ElseIf PiloteExcelBis.grdCell(F).CellPicture = PiloteExcelBis.imglst.ListImages(IMG_BOULEBC).Picture Then
                                                        enleverPicture = False
                                                    ElseIf PiloteExcelBis.grdCell(F).CellPicture = PiloteExcelBis.imglst.ListImages(IMG_BOULEBF).Picture Then
                                                        enleverPicture = False
                                                    ElseIf PiloteExcelBis.grdCell(F).CellPicture = PiloteExcelBis.imglst.ListImages(IMG_BOULEBC_PLUS).Picture Then
                                                        enleverPicture = False
                                                    ElseIf PiloteExcelBis.grdCell(F).CellPicture = PiloteExcelBis.imglst.ListImages(IMG_BOULEBF_PLUS).Picture Then
                                                        enleverPicture = False
                                                    End If
                                                    If enleverPicture Then
                                                        Set PiloteExcelBis.grdCell(F).CellPicture = Nothing
                                                    End If
                                                End If
                                            End If
                                        End If
                                        If p_dansExcel Then
                                            NomCellDest = FctFaitNomCellDest(iX, iY)
                                            exc_sheet.Range(NomCellDest).Value = ""
                                        End If
                                    Next iY
                                Next iX
                                p_bfaire_RowColChange = True
PasVider:
                                If b_rsDonnees_Vide Then
                                    GoTo Next_Chp
                                End If
                                'Remplir
                                Dim sTypeDate As String
                                Dim sOrdre As String
                                Dim iNew As Integer
                                Dim iMin As Integer
                                iMin = -1
                                iNew = 0
                                If OrderEnt <> "" Then
                                    ' remettre en bon ordre
                                    Erase P_total_colonnes_Tmp
                                    sOrdre = "_XXXXXXXX"
LabOrdre:
                                    iMin = -1
                                    For iM = 0 To UBound(P_total_colonnes)
                                        If P_total_colonnes(iM).lib <> "_YYYYYYYY" Then
                                            s = P_total_colonnes(iM).lib
                                            If s < sOrdre Then
                                                sOrdre = s
                                                iMin = iM
                                            End If
                                        End If
                                    Next iM
                                    If iMin > -1 Then
                                        ReDim Preserve P_total_colonnes_Tmp(iNew)
                                        P_total_colonnes_Tmp(iNew) = P_total_colonnes(iMin)
                                        P_total_colonnes_Tmp(iNew).leX = iNew + 1
                                        iNew = iNew + 1
                                        P_total_colonnes(iMin).lib = "_YYYYYYYY"
                                        sOrdre = "_XXXXXXXX"
                                        GoTo LabOrdre
                                    End If
                                    Erase P_total_colonnes
                                    For iM = 0 To UBound(P_total_colonnes_Tmp)
                                        ReDim Preserve P_total_colonnes(iM)
                                        P_total_colonnes(iM) = P_total_colonnes_Tmp(iM)
                                    Next iM
                                End If
                                Dim TypeDate As String
                                Dim FirstDayOfWeek As Integer
                                TypeDate = ""
                                If P_bool_tbColonnes Then
                                    For iM = 0 To UBound(P_total_colonnes)
                                        Call Odbc_RecupVal("select forec_valeurs_possibles,forec_fctvalid from formetapechp where forec_num=" & P_total_colonnes(iM).chpnum, s, chp_Forec_FctValid)
                                        If InStr(chp_Forec_FctValid, "DATE") > 0 Then
                                            s = P_total_colonnes(iM).valeur
                                            sTypeDate = STR_GetChamp(s, "_", 1)
                                            TypeDate = sTypeDate
                                            If sTypeDate = "J" Then
                                                FirstDayOfWeek = 2
                                                s = WeekdayName(STR_GetChamp(s, "_", FirstDayOfWeek))
                                                P_total_colonnes(iM).libPere = STR_GetChamp(P_total_colonnes(iM).valeur, "_", 0)
                                            ElseIf sTypeDate = "S" Then
                                                P_total_colonnes(iM).libPere = STR_GetChamp(s, "_", 0)
                                            ElseIf sTypeDate = "M" Then
                                                P_total_colonnes(iM).libPere = STR_GetChamp(s, "_", 0)
                                            ElseIf sTypeDate = "T" Then
                                                P_total_colonnes(iM).libPere = STR_GetChamp(s, "_", 0)
                                            ElseIf sTypeDate = "A" Then
                                                P_total_colonnes(iM).libPere = ""
                                            End If
                                            P_total_colonnes(iM).lib = s
                                        Else
                                            Call Odbc_RecupVal("select lvc_nom from lstvalchp where lvc_num=" & s, s)
                                            P_total_colonnes(iM).libPere = s
                                        End If
                                    Next iM
                                End If
                                leYplus = leYdebut
                                ' Nombre total
                                Dim str_CND As String
                                leXplus = leX
                                If nbOccur = 1 Then
                                    ' on prend le dernier niveau
                                    lib = New_tb_Entite(UBound(New_tb_Entite)).LibEntite
                                    sval = New_tb_Entite(UBound(New_tb_Entite)).nombre
                                    bEpingle = True
                                    MenForme = STR_GetChamp(MenForme, "#", 0)
                                    str_CND = faitLstCnd(i)
                                    Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leX, leY, MenForme, lib, sval, F, bool_liste, str_CND, 0, bEpingle)
                                    tbl_fichExcel(i).CmdX_Fin = leX
                                    tbl_fichExcel(i).CmdY_Fin = leY
                                    GoTo Apres_Lab_Close
                                End If
                                Dim XHG As Integer, YHG As Integer, XBD As Integer, YBD As Integer
                                X_Debut = leXplus
                                If nbChpReliés > 0 Then
                                    Y_Debut = leYplus - 2
                                Else
                                    Y_Debut = leYplus
                                End If
                                X_Fin = X_Debut
                                Y_Fin = Y_Debut
                                XHG = leXplus
                                YHG = leYplus - 2
                                
                                lib = ""
                                If Not MenFSi_Valeurs Then
                                    leX = FctIntColdest(tbl_fichExcel(i).CmdX)
                                    leY = tbl_fichExcel(i).CmdY
                                    'laS = ""
                                    bEpingle = True
                                    If MenFType = "POURCENT" Then
                                        If valTotal = 0 Then
                                            lib = "Div. par 0"
                                        Else
                                            XCalc = New_tb_Entite(0).nombre / valTotal * 100
                                            lib = Round(XCalc, 3)
                                        ' lib = New_tb_Entite(0).nombre / valTotal * 100
                                        End If
                                    Else
                                        lib = New_tb_Entite(0).nombre
                                    End If
                                    str_CND = faitLstCnd(i)
                                    Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leX, leY, "Simple", lib, "", F, bool_liste, str_CND, 0, bEpingle)
                                    GoTo Apres_Lab_Close
                                End If
                                
                                If MenFType <> "POURCENT" Then
                                    lib = New_tb_Entite(0).nombre
                                End If
                                If estRelié Then
                                    Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leXplus + 1, leYplus - 2, "Simple", "Total", "", F, bool_liste, laS, 0, bEpingle)
                                    If MenFType <> "POURCENT" Then
                                        Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leXplus + 1, leYplus - 1, "Simple", lib, "", F, bool_liste, laS, 0, bEpingle)
                                    End If
                                End If
                                Dim iVert As Integer
                                iVert = 0
                                XBD = 0
                                YBD = 0
                                Dim leXNormal As Integer, leYNormal As Integer
                                MenForme = STR_GetChamp(MenForme, "#", 0)
                                ' met le nombre total => on enlève car cache le reste
                                If Not estRelié Then
                                    leXNormal = leX
                                    leYNormal = leY
                                '    Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leX, leY - 1, "Simple", "Total", "", F, bool_liste, laS, 0, bEpingle)
                                '    If MenFType <> "POURCENT" Then
                                '        Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leX + 1, leY - 1, "Simple", lib, "", F, bool_liste, laS, 0, bEpingle)
                                '    End If
                                End If
                                'For iM = 0 To UBound(P_total_colonnes)
                                '    Debug.Print "cols=" & P_total_colonnes(iM).nbCols & " tot=" & P_total_colonnes(iM).nbtot & " x=" & P_total_colonnes(iM).leX & " y=" & P_total_colonnes(iM).leY & " nb=" & P_total_colonnes(iM).nbCols & " nbtot=" & P_total_colonnes(iM).nbtot & " lib=" & P_total_colonnes(iM).lib & " une_vc=" & P_total_colonnes(iM).une_vc & " valeur=" & P_total_colonnes(iM).valeur
                                'Next iM
                                'For iM = 0 To UBound(New_tb_Entite)
                                '    Debug.Print New_tb_Entite(iM).LibEntite & " niv=" & New_tb_Entite(iM).Niveau
                                '    If iM > 0 Then
                                '        For iX = 0 To UBound(New_tb_Entite(iM).valeurs)
                                '            Debug.Print "       valeur=" & New_tb_Entite(iM).valeurs(iX).valeur & " nb=" & New_tb_Entite(iM).valeurs(iX).nb & " numchp=" & New_tb_Entite(iM).valeurs(iX).numChp
                                '        Next iX
                                '    End If
                                'Next iM
                                
                                'For iM = 0 To UBound(New_tb_Entite)
                                '    Debug.Print New_tb_Entite(iM).LibEntite & " niv=" & New_tb_Entite(iM).niveau & " nivSH=" & New_tb_Entite(iM).NiveauSH
                                '    If iM > 0 Then
                                '        For iX = 0 To UBound(New_tb_Entite(iM).valeurs)
                                '            Debug.Print "       valeur=" & New_tb_Entite(iM).valeurs(iX).valeur & " nb=" & New_tb_Entite(iM).valeurs(iX).nb & " numchp=" & New_tb_Entite(iM).valeurs(iX).numChp
                                '        Next iX
                                '    End If
                                'Next iM
                                
                                iM = iM
                                Dim niveau_demandé As String
                                Dim niveau_exact As String
                                Dim Type_Niveau As String
                                niveau_demandé = Mid(MenFNiveau, 1, 1)
                                niveau_exact = Mid(MenFNiveau, 2, 1)
                                Type_Niveau = Mid(MenFNiveau, 3, 1)
                                
                                If Type_Niveau = "" Then
                                    niveau_demandé = "0"
                                End If
                                
                                Dim garder As Boolean
                                For iM = 1 To UBound(New_tb_Entite)
                                    leXplus = leX
                                    If p_dansExcel Or leX < LeXMax Then
                                        If p_dansExcel Or leYdebut + iVert < LeYMax Then
                                            garder = False
                                            If MenFNiveau = "" Or niveau_demandé = "0" Then
                                                garder = True
                                            ElseIf Type_Niveau = "S" Then
                                                If (niveau_exact = "N" And New_tb_Entite(iM).NiveauSH <= niveau_demandé) Then
                                                    garder = True
                                                ElseIf (niveau_exact = "O" And New_tb_Entite(iM).NiveauSH = niveau_demandé) Then
                                                    garder = True
                                                End If
                                            Else
                                                If (niveau_exact = "N" And New_tb_Entite(iM).niveau <= niveau_demandé) Then
                                                    garder = True
                                                ElseIf (niveau_exact = "O" And New_tb_Entite(iM).niveau = niveau_demandé) Then
                                                    garder = True
                                                End If
                                            End If
                                            If garder Then
                                                'Debug.Print New_tb_Entite(iM).niveau & " " & New_tb_Entite(iM).LibEntite
                                                iVert = iVert + 1
                                                lib = New_tb_Entite(iM).LibEntite
                                                sval = New_tb_Entite(iM).nombre
                                                lib = Space((New_tb_Entite(iM).niveau - 1) * 2) & lib
                                                ' Mettre le service
                                                New_tb_Entite(iM).lstCnd = faitLstCnd(i)
                                                Dim str_FR As String, str_SQL As String
                                                Call FaitConditionChamp(New_tb_Entite(iM).Pour_Cnd_RP, str_SQL, str_FR)
                                                New_tb_Entite(iM).Pour_Cnd_RP = New_tb_Entite(iM).Pour_Cnd_RP & "¤¤¤"
                                                New_tb_Entite(iM).Pour_Cnd_RP = reformer_BCR(New_tb_Entite(iM).NumFiltre, New_tb_Entite(iM).Pour_Cnd_RP)
                                                New_tb_Entite(iM).lstCnd = New_tb_Entite(iM).lstCnd & New_tb_Entite(iM).Pour_Cnd_RP & "¤(" & New_tb_Entite(iM).PourSQL & ")"
                                                laS = New_tb_Entite(iM).lstCnd
                                                If MenFType = "POURCENT" Then
                                                    If p_dansGrid Then
                                                        sval = sval ' (sval * 100) & " %"
                                                    Else
                                                        sval = sval ' / 100
                                                    End If
                                                End If
                                                If estRelié Then
                                                    Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leXplus, leYdebut + iVert - 1, "Simple", lib, "", F, bool_liste, "", 0, bEpingle)
                                                    Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leXplus + 1, leYdebut + iVert - 1, "Simple", sval, "", F, bool_liste, laS, 0, bEpingle)
                                                Else
                                                    If InStr(MenForme, "Colonne") > 0 Then
                                                        If MenForme = "Colonne_Lib_Val" Then
                                                            tbl_fichExcel(i).CmdX_Fin = leXNormal + 1
                                                            tbl_fichExcel(i).CmdY_Fin = leYNormal
                                                        Else
                                                            tbl_fichExcel(i).CmdX_Fin = leXNormal
                                                            tbl_fichExcel(i).CmdY_Fin = leYNormal
                                                        End If
                                                    End If
                                                    If InStr(MenForme, "Ligne") > 0 Then
                                                        If MenForme = "Ligne_Lib_Val" Then
                                                            tbl_fichExcel(i).CmdX_Fin = leXNormal
                                                            tbl_fichExcel(i).CmdY_Fin = leYNormal + 1
                                                        Else
                                                            tbl_fichExcel(i).CmdX_Fin = leXNormal
                                                            tbl_fichExcel(i).CmdY_Fin = leYNormal
                                                        End If
                                                    End If
                                                    str_CND = faitLstCnd(i)
                                                    Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leXNormal, leYNormal, MenForme, lib, sval, F, bool_liste, str_CND, 0, bEpingle)
                                                End If
                                                X_Fin = IIf(X_Fin < leXplus + 1, leXplus + 1, X_Fin)
                                                Y_Fin = IIf(Y_Fin < leYdebut + iVert - 1, leYdebut + iVert - 1, Y_Fin)
                                                YBD = leYdebut + iVert - 1
                                                bEpingle = False
                                                laForm.PgBarChp.Value = IIf(laForm.PgBarChp.Value < laForm.PgBarChp.max, laForm.PgBarChp.Value + 1, 1)
                                                If P_bool_tbColonnes Then
                                                    leXplus = leX + 2
                                                    ' mettre les valeurs
                                                    If New_tb_Entite(iM).nombre = 0 Then
                                                        GoTo Lab_Next_iZ
                                                    End If
                                                    For iZ = 0 To UBound(New_tb_Entite(iM).valeurs)
                                                        'Debug.Print "Valeur=" & New_tb_serv(iM).valeurs(iZ).valeur
                                                        For iY = 0 To UBound(P_total_colonnes)
                                                            laForm.PgBarChp.Value = IIf(laForm.PgBarChp.Value < laForm.PgBarChp.max, laForm.PgBarChp.Value + 1, 1)
                                                            ' on ne s'occupe que des lignes terminales
                                                            If P_total_colonnes(iY).valeur = STR_GetChamp(P_total_colonnes(iY).valtot, ";", STR_GetNbchamp(P_total_colonnes(iY).valtot, ";") - 1) Then  ' niveau le plus bas
                                                                sval = P_total_colonnes(iY).valtot
                                                                If New_tb_Entite(iM).valeurs(iZ).valeur = sval Then
                                                                    iCol = 0
                                                                    For iK = 0 To UBound(P_total_colonnes)
                                                                        If P_total_colonnes(iK).valtot = sval And P_total_colonnes(iK).leX > 0 Then
                                                                            iCol = P_total_colonnes(iK).leX - 1
                                                                            Exit For
                                                                        End If
                                                                    Next iK
                                                                    For iL = 0 To STR_GetNbchamp(sval, ";")
                                                                        s = STR_GetChamp(sval, ";", iL)
                                                                        If s <> "" Then
                                                                            For iK = 0 To UBound(P_total_colonnes)
                                                                                If P_total_colonnes(iK).valeur = s Then
                                                                                    'leYLabel = leYdebut - niveauMax + P_total_colonnes(iK).Niveau - 1
                                                                                    leYLabel = leYdebut - 2
                                                                                    lib = P_total_colonnes(iK).libPere
                                                                                    If lib <> "" Then
                                                                                        Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leXplus + iCol, leYLabel - 1, "Simple", lib, "", F, bool_liste, "", 0, False)
                                                                                    End If
                                                                                    If Mid(P_total_colonnes(iK).valeur, 1, 4) = "<NR>" Then
                                                                                        lib = "<NR>"    ' P_total_colonnes(iK).Valeur
                                                                                    Else
                                                                                        lib = P_total_colonnes(iK).lib
                                                                                        If InStr(s, "_J_") > 0 Then
                                                                                            lib = lib
                                                                                        ElseIf InStr(s, "_S_") > 0 Then
                                                                                            lib = "Sem." & STR_GetChamp(lib, "_", 2)
                                                                                        ElseIf InStr(s, "_M_") > 0 Then
                                                                                            lib = FaitStrMois(STR_GetChamp(lib, "_", 2))
                                                                                        ElseIf InStr(s, "_T_") > 0 Then
                                                                                            lib = "Trimestre " & STR_GetChamp(lib, "_", 2)
                                                                                        ElseIf InStr(s, "_A_") > 0 Then
                                                                                            lib = STR_GetChamp(lib, "_", 2)
                                                                                        End If
                                                                                    End If
                                                                                    Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leXplus + iCol, leYLabel, "Simple", lib, "", F, bool_liste, "", 0, False)
                                                                                    lib = "      " & P_total_colonnes(iK).nbtot
                                                                                    Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leXplus + iCol, leYLabel + 1, "Simple", lib, "", F, bool_liste, "", 0, False)
                                                                                    If XBD < leXplus + iCol Then
                                                                                        XBD = leXplus + iCol
                                                                                    End If
                                                                                    Exit For
                                                                                End If
                                                                            Next iK
                                                                        End If
                                                                    Next iL
                                                                    lib = New_tb_Entite(iM).valeurs(iZ).nb
                                                                    If iZ = 0 And iM = 1 Then bEpingle = True
                                                                    s = New_tb_Entite(iM).valeurs(iZ).PourSQL
                                                                    If s <> "" Then
                                                                        s = s & " " & CndTot
                                                                        If Not p_estV4 Then
                                                                            's = Replace
                                                                            '   ' {
                                                                            '   # @
                                                                        End If
                                                                    End If
                                                                    Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leXplus + iCol, leYplus + iVert - 1, "Simple", lib, "", F, bool_liste, s, 0, bEpingle)
                                                                    bEpingle = False
                                                                End If
                                                            End If
                                                        Next iY
                                                    Next iZ
Lab_Next_iZ:
                                                End If
                                            End If
                                        Else
                                            bPrevenir = True
                                        End If
                                    Else
                                        bPrevenir = True
                                    End If
                                Next iM
                                tbl_fichExcel(i).CmdX_Debut = X_Debut
                                tbl_fichExcel(i).CmdY_Debut = Y_Debut
                                If estRelié Then
                                    tbl_fichExcel(i).CmdX_Fin = XBD
                                    tbl_fichExcel(i).CmdY_Fin = YBD
                                End If
                                
                                If p_dansExcel Then
                                    If estRelié Then
                                        Exc_wrk.Sheets(F).Activate
                                        ' remplir d'abord
                                        Call Remplir_XLS(F, i)  ' (p_Simul_IFen, i)
                                        Call MenF_Repartition(i, TypeDate, laForm, estRelié, XHG, YHG, XBD, YBD)
                                    Else
                                        ' Voir si ce graphique existe
                                        ' si oui, modifier son datasource
                                        If Exc_obj.ActiveSheet.Shapes.Count > 0 Then
                                            If VoirSiChartExiste("Activate", "", g_numfeuille, i, sret) >= 0 Then
                                                Call MajGraphSourceData(i)
                                            End If
                                        End If
                                    End If
                                End If
                                ' prévenir si tout n'y est pas
                                If bPrevenir Then
                                    If P_bool_tbColonnes Then
                                        MsgBox "Pour avoir tous les résultats, votre feuille devrait comporter au moins " & Chr(13) & Chr(10) & leX + 1 + UBound(P_total_colonnes) & " colonnes et " & leYdebut + iM - 1 & " lignes"
                                    Else
                                        MsgBox "Pour avoir tous les résultats, votre feuille devrait comporter au moins " & Chr(13) & Chr(10) & leX + 1 & " colonnes et " & leYdebut + iM - 1 & " lignes"
                                    End If
                                End If
                                laForm.PgBarChp.Value = SovBar
                                LblSimulFeuille.Caption = SovBarString

                                GoTo Apres_Lab_Close
                            End If
                            
LabTraitNormal1:
                            '***********************************
                            ' Pour toutes les valeurs à afficher
                            '***********************************
                            If MenFSi = "NONVALEUR_NR" Then   ' on veut le nombre de NON renseignées
                                If bool_liste Or bool_liste_hierar Or bool_liste_service Or bool_liste_fonction Then
                                    àMettre = FctVoirSiPeutMettre(MenFLigCol, LeYMax, leY, LaRowMax, LeXMax, leX, LaColMax)
                                    If Not àMettre Then GoTo Trop
                                    sqlDonnees = Replace(sqlDonnees, "[TABLE_JOINTURE]", table_jointure)
                                    sqlDonnees = Replace(sqlDonnees, "[CND_JOINTURE]", cnd_jointure)
                                    sqlDonnees = Replace(sqlDonnees, "[CNDUNEVAL]", "")
                                    sqlDonnees = Replace(sqlDonnees, "[CNDTOT]", CndTot)
                                    If Odbc_SelectV(sqlDonnees, rsDonnees) = P_ERREUR Then
                                        lib = lib & " : Erreur SQL=" & laS
                                        ValResultNB = "?"
                                        rsDonnees.Close
                                        GoTo Next_Chp
                                    Else
                                        ' Mise en forme du résultat
                                        If Not rsDonnees.EOF Then
                                            ValResultNB = rsDonnees(0).Value
                                        End If
                                    End If
                                    ValResultNB = Format(ValResultNB, "#0.00")
                                    If Mid(ValResultNB, Len(ValResultNB), 1) = "," Then ValResultNB = Mid(ValResultNB, 1, Len(ValResultNB) - 1)
                                    GoTo Lab_Mettre_Resultat_Unique
                                End If
                            End If
                            
                            iValeur = 0
                            bEpingle = True
                            ValResult = 0
                            ValResultNB = 0
                            paddListe = ""
                            Dim iMenF As Integer
                            Dim nbPadd As String
                            If MenFSi_Valeurs And bool_liste_service Then
                                bFinBoucle = False
                                MenFListeValeurs = Replace(MenFListeValeurs, "TOUTES;", "")
                                For iMenF = 0 To STR_GetNbchamp(MenFListeValeurs, ";")
LabRetService:
                                    If STR_GetChamp(MenFListeValeurs, ";", iMenF) <> "" Then
                                        rsVal.MoveFirst
                                        While Not rsVal.EOF
                                            If STR_GetChamp(STR_GetChamp(MenFListeValeurs, ";", iMenF), "=", 0) = "S" & rsVal("srv_num") Then
                                                nbPadd = STR_GetChamp(STR_GetChamp(MenFListeValeurs, ";", iMenF), "=", 1)
                                                nbPadd = nbPadd * 4
                                                paddListe = Mid("                             ", 1, nbPadd)
                                                GoTo Lab_aGarder
                                            End If
                                            rsVal.MoveNext
                                        Wend
                                    End If
                                Next iMenF
                                bFinBoucle = True
                                ValResult = ValResultNB
                                If MenFSi_Valeurs Then
                                    GoTo Lab_Close
                                Else
                                    GoTo LabLeMettre
                                End If
                            End If
                            If MenFSi_Valeurs And bool_liste_hierar Then
                                For iMenF = 0 To STR_GetNbchamp(MenFListeValeurs, ";")
                                bFinBoucle = False
                                MenFListeValeurs = Replace(MenFListeValeurs, "TOUTES;", "")
LabRetHierar:
                                    If STR_GetChamp(MenFListeValeurs, ";", iMenF) <> "" Then
                                        rsVal.MoveFirst
                                        While Not rsVal.EOF
                                            If STR_GetChamp(STR_GetChamp(MenFListeValeurs, ";", iMenF), "=", 0) = "M" & rsVal("hvc_num") Then
                                                nbPadd = STR_GetChamp(STR_GetChamp(MenFListeValeurs, ";", iMenF), "=", 1)
                                                nbPadd = nbPadd * 4
                                                paddListe = Mid("                                 ", 1, nbPadd)
                                                GoTo Lab_aGarder
                                            End If
                                            rsVal.MoveNext
                                        Wend
                                    End If
                                Next iMenF
                                bFinBoucle = True
                                ValResult = ValResultNB
                                If MenFSi_Valeurs Then
                                    GoTo Lab_Close
                                Else
                                    GoTo LabLeMettre
                                End If
                            End If
                            Dim iVal As Integer
                            For iVal = 1 To nbvaleurs
                                If iVal > nbvaleurs Then Exit For
                                If FaireRefresh Then
                                    LblSimulFeuille.Caption = "Feuille " & tbl_fenExcel(F).FenNom & " : Champ : " & i & "/" & UBound(tbl_fichExcel()) & " ( " & FctStrColDest(leX) & leY & " )"
                                    LblSimulFeuille.Refresh
                                End If
                                DoEvents
                                If bool_liste Or bool_liste_hierar Or bool_liste_service Or bool_liste_fonction Then
                                    If MenFListeValeurs = "TOUTES" Then
                                        aGarder = True
                                    Else
                                        aGarder = False
                                        ' voir si c'est une valeur qui nous concerne
                                        paddListe = ""
                                        For II = 0 To STR_GetNbchamp(MenFListeValeurs, ";")
                                            If STR_GetChamp(MenFListeValeurs, ";", II) <> "" Then
                                                If bool_liste Then
                                                    If STR_GetChamp(MenFListeValeurs, ";", II) = rsVal("vc_num") Then
                                                        aGarder = True
                                                        Exit For
                                                    End If
                                                ElseIf bool_liste_service Then
                                                    If STR_GetChamp(STR_GetChamp(MenFListeValeurs, ";", II), "=", 0) = "S" & rsVal("srv_num") Then
                                                        paddListe = Mid("-----", 1, STR_GetChamp(STR_GetChamp(MenFListeValeurs, ";", II), "=", 1))
                                                        aGarder = True
                                                        Exit For
                                                    End If
                                                ElseIf bool_liste_fonction Then
                                                    If STR_GetChamp(MenFListeValeurs, ";", II) = "F" & rsVal("ft_num") Then
                                                        aGarder = True
                                                        Exit For
                                                    End If
                                                ElseIf bool_liste_hierar Then
                                                    If STR_GetChamp(STR_GetChamp(MenFListeValeurs, ";", II), "=", 0) = "M" & rsVal("hvc_num") Then
                                                        paddListe = Mid("-----", 1, STR_GetChamp(STR_GetChamp(MenFListeValeurs, ";", II), "=", 1))
                                                        aGarder = True
                                                        Exit For
                                                    End If
                                                End If
                                            End If
                                        Next II
                                    End If
                                Else        ' entier ou autre
                                    aGarder = True
                                End If
                                
                                If aGarder Then
Lab_aGarder:
                                    CndUneVal = ""
                                    If bool_liste Then
                                        CndUneVal = ChpNom & " like '%V" & rsVal("vc_num") & ";%'"
                                        lib = rsVal("vc_lib")
                                    ElseIf bool_liste_service Then
                                        CndUneVal = "(" & ChpNom & " like '" & rsVal("srv_num") & "#%'"
                                        sqlValNoeud = CndUneVal & ")"
                                        numNoeud = rsVal("srv_num")
                                        nb = STR_GetNbchamp(lib, ";")
                                        For II = 0 To nb - 1
                                            s = STR_GetChamp(lib, ";", II)
                                            CndUneVal = CndUneVal & " or " & ChpNom & " like '" & Mid$(s, 2) & "#%'"
                                        Next II
                                        CndUneVal = CndUneVal & ")"
                                        If MenFSi_Valeurs Then
                                            lib = paddListe & " " & rsVal("srv_nom")
                                        Else
                                            lib = libSiGlobal
                                            If numSdebut = 0 Then
                                                CndUneVal = "(" & ChpNom & " != '')"
                                            End If
                                        End If
                                    ElseIf bool_liste_fonction Then
                                        CndUneVal = ChpNom & " like '" & rsVal("ft_num") & "#%'"
                                        lib = rsVal("ft_libelle")
                                    ElseIf bool_liste_hierar Then
                                        CndUneVal = "(" & ChpNom & " like '%M" & rsVal("hvc_num") & ";ù%'"
                                        sqlValNoeud = CndUneVal & ")"
                                        numNoeud = rsVal("hvc_num")
                                        nb = STR_GetNbchamp(lib, ";")
                                        For II = 0 To nb - 1
                                            s = STR_GetChamp(lib, ";", II)
                                            CndUneVal = CndUneVal & " or " & ChpNom & " like '%" & s & ";|'"
                                        Next II
                                        CndUneVal = CndUneVal & ")"
                                        If MenFSi_Valeurs Then
                                            lib = paddListe & " " & rsVal("hvc_nom")
                                        Else
                                            lib = libSiGlobal
                                            If numSdebut = 0 Then
                                                CndUneVal = "(" & ChpNom & " != '')"
                                            End If
                                        End If
                                    End If
                                    '****************************
                                    ' On peut traiter ce résultat
                                    '****************************
                                    
                                    '***********************************
                                    ' Voir si on a la place de la mettre
                                    '***********************************
                                    àMettre = FctVoirSiPeutMettre(MenFLigCol, LeYMax, leY, LaRowMax, LeXMax, leX, LaColMax)
                                    If Not àMettre Then
                                        GoTo Trop
                                    End If

                                    '********************************************
                                    ' Récupérer le résultat et le mettre en forme
                                    '********************************************
                                    laS = Replace(sqlDonnees, "[CNDTOT]", CndTot)
                                    If bool_liste Or bool_liste_hierar Or bool_liste_service Or bool_liste_fonction Then
                                        laS = Replace(laS, "[CNDUNEVAL]", " and " & CndUneVal)
                                        laS = Replace(laS, "[TABLE_JOINTURE]", table_jointure)
                                        laS = Replace(laS, "[CND_JOINTURE]", cnd_jointure)
                                        laS = Replace(laS, "  ", " ")
                                        laS = Replace(laS, "and true", "")
                                        laS = Replace(laS, "Where true", "Where")
                                        laS = Replace(laS, "  ", " ")
                                        laS = Replace(laS, "  ", " ")
                                        laS = Replace(laS, "  ", " ")
                                        laS = Replace(laS, "Where and", "Where")
                                        If Odbc_SelectV(laS, rsDonnees) = P_ERREUR Then
                                            lib = lib & " : Erreur SQL=" & laS
                                            MsgBox lib
                                            GoTo Next_Chp
                                        Else
                                            ' Mise en forme du résultat
                                            If Not rsDonnees.EOF Then
                                                ValResult = rsDonnees(0).Value
                                            End If
                                        End If
                                        If bool_liste_hierar And MenFSi_Valeurs Then
                                            ' Voir le nombre pour le noeud
                                            laS = Replace(laS, CndUneVal, sqlValNoeud)
                                            If Odbc_RecupVal(laS, valResultNoeud) <> P_ERREUR Then
                                                If valResultNoeud > 0 Then
                                                    lib = lib & " (" & valResultNoeud & ")"
                                                End If
                                            End If
                                        End If
                                        If bool_liste_service And MenFSi_Valeurs Then
                                            ' Voir le nombre pour le noeud
                                            MsgBox "ici"
                                            laS = Replace(laS, CndUneVal, sqlValNoeud)
                                            If Odbc_RecupVal(laS, valResultNoeud) <> P_ERREUR Then
                                                If valResultNoeud > 0 Then
                                                    lib = lib & " (" & valResultNoeud & ")"
                                                End If
                                            End If
                                        End If
                                        If MenFSi_Valeurs Then
                                            ' pour une liste cette valeur est à garder
                                            ' selon significative ou dépassement du nombre d'occurences
                                            If MenFSi = "VALEUR_SIGNIF" Then
                                                If rsDonnees.EOF Then
                                                    àMettre = False
                                                ElseIf rsDonnees(0).Value = 0 Then
                                                    àMettre = False
                                                    ' on décrémente iVal de 1
                                                    iVal = iVal - 1
                                                End If
                                            End If
                                        ElseIf MenFSi_Global Then
                                            If rsDonnees.EOF Then
                                                àMettre = False
                                            End If
                                        End If
                                        If àMettre Then
                                            If MenFSi_Global Then
                                                If bool_liste_service Then
                                                    ValResultNB = val(ValResultNB) + rsDonnees(0).Value
                                                    àMettre = True
                                                ElseIf bool_liste_hierar Then
                                                    ValResultNB = val(ValResultNB) + rsDonnees(0).Value
                                                    àMettre = True
                                                Else
                                                    ValResultNB = val(ValResultNB) + rsDonnees(0).Value
                                                    àMettre = False
                                                End If
                                            ElseIf MenFNbValeur <> "*" Then
                                                If MenFSi = "VALEUR_SIGNIF" Then
                                                    If rsDonnees.EOF Then
                                                        àMettre = False
                                                    End If
                                                ElseIf iValeur > val(MenFNbValeur) Then
                                                    GoTo Trop
                                                End If
                                            End If
                                        End If
                                    Else
                                        laS = Replace(laS, "[TABLE_JOINTURE]", table_jointure)
                                        If InStr(cnd_jointure, "|") > 0 Then
                                            laS1 = Replace(laS, "[CND_JOINTURE]", " And " & STR_GetChamp(cnd_jointure, "|", 0))
                                            laS2 = Replace(laS, "[CND_JOINTURE]", " And " & STR_GetChamp(cnd_jointure, "|", 1))
                                            laS = laS1 & " Union All " & laS2
                                        Else
                                            laS = Replace(laS, "[CND_JOINTURE]", cnd_jointure)
                                        End If
                                        laS = Replace(laS, "[CNDUNEVAL]", "")
LabCasSQL:
                                        If tbl_fichExcel(i).CmdChpSQL <> "" Then
                                            cndSQL = Replace(tbl_fichExcel(i).CmdChpSQL, "SQL=", "")
                                            CndTot = Trim(CndTot)
                                            If Mid(CndTot, 1, 3) = "and" Then
                                                CndTot = "true " & CndTot
                                            End If
                                            If InStr(UCase(cndSQL), "WHERE") = 0 Then
                                                laS = cndSQL & " where " & CndTot
                                            Else
                                                laS = cndSQL & " and " & CndTot
                                            End If
                                        End If
                                        'If i = 68 Then
                                        '    Debug.Print laS
                                        'End If
                                        If Odbc_SelectV(laS, rsDonnees) = P_ERREUR Then
                                            lib = lib & " : Erreur SQL=" & laS
                                        Else
                                            rsDonneesFait = True
                                            ' Mise en forme du résultat
                                            If Not rsDonnees.EOF Then
                                                If IsNull(rsDonnees(0).Value) Then
                                                    ValResultNB = 0
                                                Else
                                                    ValResultNB = rsDonnees(0).Value
                                                End If
                                                If tbl_fichExcel(i).CmdChpSQL = "" Then
                                                    GoTo Lab_Mettre_Resultat_Unique
                                                Else
                                                    ValResult = ValResultNB
                                                End If
                                            End If
                                        End If
                                    End If
                                    
                                    If àMettre Then
LabLeMettre:
                                        iValeur = iValeur + 1
                                        sval = ValResult
                                        
                                        If p_Excel_Decimal_Separator = "" Then Call P_Exc_DecimalSeparator
                                        If tbl_fichExcel(i).CmdChpSQL <> "" Then
                                        ElseIf MenFType = "POURCENT" Then
                                            If valTotal > 0 Then
                                                sval = ValResult / valTotal
                                            Else
                                                sval = 0
                                            End If
                                            sval = Format(sval, "#0.##")
                                        ElseIf MenFType = "NOMBRE" Then
                                            sval = val(ValResult)
                                            sval = Format(sval, "#0")
                                        Else
                                            sval = Format(sval, "#0.00")
                                        End If
                                        If Mid(sval, Len(sval), 1) = "," Then sval = Mid(sval, 1, Len(sval) - 1)
                                        
                                        sval = Replace(sval, ",", p_Excel_Decimal_Separator)
                                        sval = Replace(sval, ".", p_Excel_Decimal_Separator)
                                        
                                        p_MenFLigCol = MenFLigCol
                                        If boolListeChamps Then
                                            p_ChpType = "ListeChamp"
                                        Else
                                            p_ChpType = "Champ"
                                        End If
                                        If MenFSi_Global Then
                                            If bool_liste_service Or bool_liste_hierar Then
                                                GoTo LabMettre
                                            End If
                                            ' on ne fait que cumuler
                                        Else
LabMettre:
                                            LblHelp.Visible = True
                                            If Mid(MenFLigCol, 1, 5) = "Ligne" Then
                                                scoordFin = FctStrColDest(leX) & "_" & (leY + 1)
                                            ElseIf Mid(MenFLigCol, 1, 7) = "Colonne" Then
                                                scoordFin = FctStrColDest(leX + 1) & "_" & leY
                                            End If
                                            scoordFin = "$" & STR_GetChamp(scoordFin, "_", 0) & "$" & STR_GetChamp(scoordFin, "_", 1)
                                            Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leX, leY, MenFLigCol, lib, sval, F, bool_liste, laS, 0, bEpingle)
                                            bEpingle = False
                                        End If
                                    End If
                        
                                    If leX >= Len(Public_Alpha) Then GoTo Trop
                                End If
                                If bool_liste Or bool_liste_hierar Or bool_liste_service Or bool_liste_fonction Then
                                    If rsVal.EOF Then
                                        Exit For
                                    End If
                                    If bool_liste_service Then
                                        If MenFSi_Global Then   ' terminé
                                            GoTo Lab_Close
                                        Else
                                            If Not bFinBoucle Then
                                                iMenF = iMenF + 1
                                                GoTo LabRetService
                                            Else    ' terminé
                                                GoTo Lab_Close
                                            End If
                                        End If
                                    End If
                                    If bool_liste_hierar Then
                                        If MenFSi_Global Then   ' terminé
                                            GoTo Lab_Close
                                        Else
                                            If Not bFinBoucle Then
                                                iMenF = iMenF + 1
                                                GoTo LabRetHierar
                                            Else    ' terminé
                                                GoTo Lab_Close
                                            End If
                                        End If
                                    End If
                                    rsVal.MoveNext
                                    If rsVal.EOF Then Exit For
                                End If
                            Next iVal
Lab_Mettre_Resultat_Unique:

                            If MenFSi_Global Or MenFSi = "NOMBRE_TOTAL" Then
                                bEpingle = True
                                lib = ChpLabel
                                If tbl_fichExcel(i).CmdChpSQL <> "" Then
                                ElseIf MenFType = "POURCENT" Then
                                    If valTotal > 0 Then
                                        sval = val(ValResultNB) / val(valTotal)
                                    Else
                                        sval = 0
                                    End If
                                    sval = Format(sval, "#0.##")
                                ElseIf MenFType = "MOYENNE" Then
                                    sval = ValResultNB
                                    sval = Format(sval, "#0.##")
                                ElseIf MenFType = "ECART_TYPE" Then
                                    sval = ValResultNB
                                    sval = Format(sval, "#0.##")
                                ElseIf MenFType = "NOMBRE" Then
                                    sval = val(ValResultNB)
                                    sval = Format(sval, "#0")
                                Else
                                    If strLstSpécial = "%ENTIER" Then
                                        sval = val(ValResultNB)
                                        sval = Format(sval, "#0")
                                    Else
                                        sval = Format(val(ValResultNB), "#0.00")
                                    End If
                                End If
                                If sval <> "" Then
                                    If Mid(sval, Len(sval), 1) = "," Then sval = Mid(sval, 1, Len(sval) - 1)
                                End If
                                If p_Excel_Decimal_Separator = "" Then Call P_Exc_DecimalSeparator
                                sval = Replace(sval, ",", p_Excel_Decimal_Separator)
                                sval = Replace(sval, ".", p_Excel_Decimal_Separator)
                                
                                laS = Replace(sqlDonnees, "[CNDTOT]", CndTot)
                                If bool_liste Or bool_liste_hierar Or bool_liste_service Or bool_liste_fonction Then
                                    If MenFSi = "NONVALEUR_R" Or MenFSi = "NONVALEUR_NR" Then
                                        laS = Replace(laS, "[CNDUNEVAL]", "")
                                    End If
                                End If
                                
                                LblHelp.Visible = True
                                If Mid(MenFLigCol, 1, 5) = "Ligne" Then
                                    scoordFin = FctStrColDest(leX) & "_" & (leY + 1)
                                ElseIf Mid(MenFLigCol, 1, 7) = "Colonne" Then
                                    scoordFin = FctStrColDest(leX + 1) & "_" & leY
                                End If
                                scoordFin = "$" & STR_GetChamp(scoordFin, "_", 0) & "$" & STR_GetChamp(scoordFin, "_", 1)
                                laS = Replace(laS, "[TABLE_JOINTURE]", table_jointure)
                                laS = Replace(laS, "[CND_JOINTURE]", cnd_jointure)
                                Dim str_RP As String
                                str_CND = faitLstCnd(i)
                                Call P_SimulMettreChamp(p_dansGrid, p_dansExcel, i, leX, leY, MenFLigCol, lib, sval, F, bool_liste, str_CND, 0, bEpingle)
                            End If
LabExcel:
                            ' Voir si Graphique
                            If p_dansExcel Then
                                ' Voir si ce graphique existe
                                ' si oui, modifier son datasource
                                If Exc_obj.ActiveSheet.Shapes.Count > 0 Then
                                    If VoirSiChartExiste("Activate", "", g_numfeuille, i, sret) >= 0 Then
                                        If scoordFin = "" Then scoordFin = scoordDebut
                                        Exc_obj.ActiveWorkbook.ActiveChart.SetSourceData (Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(F).FenNom).Range(scoordDebut & ":" & scoordFin))
                                    End If
                                End If
                            End If
                        Else
LabCasChampListe:
                            '**************************************
                            ' CAS d'un champ de type 'LISTE CHAMPS'
                            '  => la condition générale suffit
                            '**************************************
                            ' on ne le fait pas en simul écran d'une fenêtre complète
                            If p_dansGrid And v_Trait <> "Une" Then
                                GoTo LabFinCas
                            End If
                            If CndTot = "" Then
                                sqlDonnees = "select [CHAMP] from " & nomtable & " [TABLE_JOINTURE] Where true [CND_JOINTURE]"
                                numfor = tbl_rdoF(i_tbl_RDOF).RDOF_FormNum
                            Else
                                sqlDonnees = "select [CHAMP] from " & nomtable & " [TABLE_JOINTURE] Where true [CND_JOINTURE]" & CndTot
                                numfor = tbl_rdoF(i_tbl_RDOF).RDOF_FormNum
                            End If
                            ListeChamps = Mid(tbl_fichExcel(i).cmdTypeChp, 7)
                            If InStr(ListeChamps, "New") > 0 Then
                                MenFormeListe = "NewFenêtre"
                            ElseIf InStr(ListeChamps, "Ici") > 0 Then
                                MenFormeListe = "MêmeFenêtre"
                            Else
                                MenFormeListe = "NewFenêtre"
                            End If
                            ListeChamps = Replace(ListeChamps, "New", "")
                            ListeChamps = Replace(ListeChamps, "Ici", "")
                            nbChamps = STR_GetNbchamp(ListeChamps, ";")
                            
                            ' contrôle des colonnes
                            Dim strChp As String
                            Dim opChp As String
                            strChp = "Donnees_" & fornumG & ".don_num" & " as " & "D_" & fornumG & "_don_num"
                            If fornumD > 0 Then strChp = strChp & ", Donnees_" & fornumD & ".don_num" & " as " & "D_" & fornumD & "_don_num"
                            opChp = ", "
                            i2 = 0
                            s = ""
                            For i1 = 0 To nbChamps
                                UnChamp = STR_GetChamp(ListeChamps, ";", i2)
                                If UnChamp <> "" Then
                                    UnChamp = STR_GetChamp(UnChamp, ":", 0)
                                    i2 = i2 + 1
                                    If Odbc_RecupVal("select forec_nom, forec_fornum from formetapechp where forec_num=" & UnChamp, strNomChp, numfor) = P_ERREUR Then
                                        MsgBox "Erreur"
                                    Else
                                        s = s & IIf(s <> "", ";", "") & numfor & "." & UnChamp
                                        strChp = strChp & opChp & "Donnees_" & numfor & "." & strNomChp & " as " & "D_" & numfor & "_" & strNomChp
                                    End If
                                End If
                            Next i1
                            ListeChamps = s
                            sqlDonnees = Replace(sqlDonnees, "[CHAMP]", strChp)
                            sqlDonnees = Replace(sqlDonnees, "[TABLE_JOINTURE]", table_jointure)
                            
                            If InStr(cnd_jointure, "|") > 0 Then
                                laS1 = Replace(sqlDonnees, "[CND_JOINTURE]", " And " & STR_GetChamp(cnd_jointure, "|", 0))
                                laS2 = Replace(sqlDonnees, "[CND_JOINTURE]", " And " & STR_GetChamp(cnd_jointure, "|", 1))
                                sqlDonnees = laS1 & " Union All " & laS2
                            Else
                                sqlDonnees = Replace(sqlDonnees, "[CND_JOINTURE]", cnd_jointure)
                            End If
                            s = LblSimulFeuille.Caption
                            LblSimulFeuille.Caption = "Appel SQL"
                            If Odbc_SelectV(sqlDonnees, rsResult) = P_ERREUR Then
                                GoTo Next_Chp
                            End If
                            LblSimulFeuille.Caption = s
                            
                            ' contrôle des lignes
                            If ListeOldRequeteSQL <> "" And ListeOldRequeteSQL = sqlDonnees Then
                                ' ListeOldNbRows déja initialisé
                            Else
                                If Not rsResult.EOF Then
                                    rsResult.MoveLast
                                    rsResult.MoveFirst
                                    ListeOldRequeteSQL = sqlDonnees
                                    ListeOldNbRows = rsResult.RowCount
                                Else
                                    ListeOldRequeteSQL = sqlDonnees
                                    ListeOldNbRows = 0
                                End If
                            End If
                            ' dans nouvelle fenêtre
                            If p_dansExcel Then
                                p_FaireHyperLienListeChamp = True
                            End If
                            p_FaireHyperLienListeChamp = True
                            If MenFormeListe = "NewFenêtre" Or (Not p_dansExcel) Then
                                ' créer une fenêtre et la renommer (sauf si existe déjà)
                                lib = "Det_" & tbl_fenExcel(F).FenNom & "_"  '& tbl_fichExcel(I).CmdChpNum
                                lib = Mid(lib, 1, 25)
                                lib = lib & tbl_fichExcel(i).CmdX & tbl_fichExcel(i).CmdY
                                p_LeIndexFenetreExcel = -1
                                If p_dansExcel Then
                                    For k = 1 To Exc_wrk.Sheets.Count
                                        If Exc_wrk.Sheets(k).Name = lib Then
                                            p_LeIndexFenetreExcel = k
                                        End If
                                    Next k
                                    If p_LeIndexFenetreExcel = -1 Then
                                        Exc_wrk.Sheets.Add After:=Exc_wrk.Sheets(Exc_wrk.Sheets.Count)
                                        Exc_wrk.Sheets(Exc_wrk.Sheets.Count).Name = lib
                                        p_LeIndexFenetreExcel = Exc_wrk.Sheets.Count
                                    End If
                                
                                    p_LeX_PourHyperlienG = FctIntColdest(tbl_fichExcel(i).CmdX)
                                    p_LeX_PourHyperlienD = FctIntColdest(tbl_fichExcel(i).CmdX) + nbChamps
                                    p_LeY_PourHyperlien = tbl_fichExcel(i).CmdY
                                    p_LeIndexFeuille_PourHyperlien = F
                                    
                                    Set exc_sheet = Exc_wrk.Sheets(p_LeIndexFenetreExcel)
                                    exc_sheet.Activate
                                Else
                                    ' dans grid detail uniquement
                                End If
                                
                                LeXInit = 1
                                LeYInit = 1
                                leX = LeXInit
                                leY = LeYInit
                                ListeLeXMax = LeXInit + i2 - 1
                                ListeLeYMax = LeYInit + ListeOldNbRows
                                p_LeXMaxPourGrdCell = ListeLeXMax
                                p_LeYMaxPourGrdCell = ListeLeYMax
                                If ListeLeXMax > LaColMax Then p_LeXMaxPourGrdCell = LaColMax
                                If ListeLeYMax > LaRowMax Then p_LeYMaxPourGrdCell = LaRowMax
                            End If
                            
                            If MenFormeListe = "MêmeFenêtre" Then
                                ' Même fenêtre
                                LeXInit = leX
                                ListeLeXMax = LeXInit + i2 - 1
                                LeYInit = leY
                                ListeLeYMax = LeYInit + ListeOldNbRows
                                p_LeXMaxPourGrdCell = ListeLeXMax
                                p_LeYMaxPourGrdCell = ListeLeYMax
                                If ListeLeXMax > LaColMax Then p_LeXMaxPourGrdCell = LaColMax
                                If ListeLeYMax > LaRowMax Then p_LeYMaxPourGrdCell = LaRowMax
                            End If
                            If fornumD > 0 Then ListeLeXMax = ListeLeXMax + 1
TEST:
                            ' ligne de titre
                            Me.PgBar.Visible = True
                            If nbChamps = 0 Then GoTo Next_Chp
                            Me.PgBar.max = nbChamps
                            Me.PgBar.Value = 0
                            p_LeTypeTitreOuChamp = "T"
                            If p_TraitPublier = "G" Then
                                p_FaireHyperLienListeChamp = IIf(Publier.ChkHyperlien.Value, True, False)
                            End If
                            p_MettreCommentListeChamp = False
                            leX = IIf(p_FaireHyperLienListeChamp, LeXInit + 1, LeXInit)
                            If Not p_dansExcel Then
                                If p_FaireHyperLienListeChamp Then
                                    PrmListeDetail.grdCell.Cols = nbChamps + 1
                                Else
                                    PrmListeDetail.grdCell.Cols = nbChamps
                                End If
                                PrmListeDetail.numforG = fornumG
                                PrmListeDetail.numforD = fornumD
                                If p_FaireHyperLienListeChamp And fornumG > 0 And fornumD > 0 Then PrmListeDetail.grdCell.Cols = nbChamps + 2
                                PrmListeDetail.grdCell.Rows = 1
                            End If
                            Dim largeurColonne As String
                            laS = ""
                            For i1 = 0 To nbChamps
                                UnChamp = STR_GetChamp(ListeChamps, ";", i1)
                                UnChamp = STR_GetChamp(UnChamp, ".", 1)
                                
                                Me.PgBar.Value = i1
                                If UnChamp <> "" Then
                                    laVal = P_RecupereNomChamp(UnChamp, "label")
                                    LblHelp.Visible = True
                                    If p_dansExcel Then
                                        If STR_GetChamp(STR_GetChamp(ListeChamps, ";", i1), ".", 0) = fornumG Then
                                            s = slibG & "-"
                                        ElseIf STR_GetChamp(STR_GetChamp(ListeChamps, ";", i1), ".", 0) = fornumD Then
                                            s = slibD & "-"
                                        End If
                                        If fornumD = 0 Then s = ""
                                        Call P_SimulMettreChamp(True, True, i, leX, leY, MenFormeListe, lib, s & FctNomChp(val(UnChamp)), F, bool_liste, "", val(UnChamp), IIf(iValeur = 0, True, False))
                                    Else
                                        If STR_GetChamp(STR_GetChamp(ListeChamps, ";", i1), ".", 0) = fornumG Then
                                            PrmListeDetail.grdCell.row = 0
                                            PrmListeDetail.grdCell.col = IIf(p_FaireHyperLienListeChamp, i1 + 1, i1)
                                            PrmListeDetail.grdCell.CellBackColor = &HFF0000     ' bleu foncé
                                        ElseIf STR_GetChamp(STR_GetChamp(ListeChamps, ";", i1), ".", 0) = fornumD Then
                                            PrmListeDetail.grdCell.row = 0
                                            PrmListeDetail.grdCell.col = IIf(p_FaireHyperLienListeChamp, i1 + 1, i1)
                                            PrmListeDetail.grdCell.CellBackColor = &H8080FF        ' rouge
                                        End If
                                        If p_FaireHyperLienListeChamp Then
                                            PrmListeDetail.grdCell.TextMatrix(0, i1 + 1) = laVal
                                        Else
                                            PrmListeDetail.grdCell.TextMatrix(0, i1) = laVal
                                        End If
                                    End If
                                End If
                            Next i1
                            bFinListeQuestionPosée = False
                            If Not p_dansExcel Then
                                'PrmListeDetail.Show 1
                                leY = 0
                                LeXInit = 0
                                PrmListeDetail.grdCell.Rows = rsResult.RowCount + 1
                            End If
                            p_LeTypeTitreOuChamp = "C"
                            leY = leY + 1
                            
                            If rsResult.EOF Then
                                Me.PgBar.max = 1
                            Else
                                Me.PgBar.max = rsResult.RowCount * (i1)
                            End If
                            Me.PgBar.Value = 0
                            
                            Erase p_tbl_detail()
                            While Not rsResult.EOF
                                ' Ajout du don_num avec lien en LeXInit-1
                                '   LaVal = rsResult("don_num").Value
                                If p_FaireHyperLienListeChamp Then
                                    laVal = rsResult("D_" & fornumG & "_don_num").Value
                                    leX = LeXInit
                                    PrmListeDetail.iG = leX
                                    LblHelp.Visible = True
                                    If p_dansExcel Then
                                        Call P_SimulMettreChamp(True, True, i, leX, leY, MenFormeListe, lib, laVal & "|" & fornumG, F, bool_liste, "DON_NUM", 0, IIf(iValeur = 0, True, False))
                                    Else
                                        PrmListeDetail.grdCell.row = leY
                                        PrmListeDetail.grdCell.col = 0
                                        PrmListeDetail.grdCell.CellBackColor = &HFF0000     ' bleu foncé
                                        PrmListeDetail.grdCell.TextMatrix(leY, 0) = laVal
                                        ReDim Preserve p_tbl_detail(leY)
                                        p_bool_tbl_detail = True
                                        p_tbl_detail(leY).donnumG = laVal
                                        p_tbl_detail(leY).fornumG = fornumG
                                    End If
                                    ListeLeXMax = ListeLeXMax + 1
                                End If
                                leX = IIf(p_FaireHyperLienListeChamp, LeXInit + 1, LeXInit)
                                For i1 = 0 To nbChamps
                                    Me.PgBar.Value = Me.PgBar.Value + 1
                                    UnChamp = STR_GetChamp(ListeChamps, ";", i1)
                                    UnChamp = STR_GetChamp(UnChamp, ".", 1)
                                    If UnChamp <> "" Then
                                        laVal = Fct_Transforme(val(UnChamp), rsResult)
                                        LblHelp.Visible = True
                                        If p_dansExcel Then
                                            Call P_SimulMettreChamp(True, True, i, leX, leY, MenFormeListe, lib, laVal, F, bool_liste, "", val(UnChamp), IIf(iValeur = 0, True, False))
                                        Else
                                            If STR_GetChamp(STR_GetChamp(ListeChamps, ";", i1), ".", 0) = fornumG Then
                                                PrmListeDetail.grdCell.row = leY
                                                PrmListeDetail.grdCell.col = leX
                                                PrmListeDetail.grdCell.CellBackColor = &HFFC0C0        ' bleu clair
                                            ElseIf STR_GetChamp(STR_GetChamp(ListeChamps, ";", i1), ".", 0) = fornumD Then
                                                PrmListeDetail.grdCell.row = leY
                                                PrmListeDetail.grdCell.col = leX
                                                PrmListeDetail.grdCell.CellBackColor = &HC0C0FF           ' rose
                                            End If
                                            PrmListeDetail.grdCell.TextMatrix(leY, leX) = laVal
                                            leX = leX + 1
                                        End If
                                    End If
                                    If leX > ListeLeXMax Then
                                        GoTo Next_Enreg
                                    End If
                                Next i1
                                
                                If p_FaireHyperLienListeChamp Then
                                    If fornumD > 0 Then
                                        ' Ajout du don_num avec lien en LeXInit-1
                                        laVal = rsResult("D_" & fornumD & "_don_num")
                                        PrmListeDetail.iD = leX
                                        LblHelp.Visible = True
                                        If p_dansExcel Then
                                            Call P_SimulMettreChamp(True, True, i, leX, leY, MenFormeListe, lib, laVal & "|" & fornumD, F, bool_liste, "DON_NUM", 0, IIf(iValeur = 0, True, False))
                                        Else
                                            PrmListeDetail.grdCell.row = leY
                                            PrmListeDetail.grdCell.col = leX
                                            PrmListeDetail.grdCell.CellBackColor = &H8080FF        ' rouge
                                            PrmListeDetail.grdCell.TextMatrix(leY, leX) = laVal
                                            p_tbl_detail(leY).donnumD = laVal
                                            p_tbl_detail(leY).fornumD = fornumD
                                        End If
                                        ListeLeXMax = ListeLeXMax + 1
                                    End If
                                End If
Next_Enreg:
                                rsResult.MoveNext
                                leY = leY + 1
                                If leY > ListeLeYMax Then
                                    GoTo Fini
                                End If
                                'LblSimulFeuille.Caption = "Feuille " & tbl_fenExcel(F).FenNom & " : Champ : " & i & "/" & UBound(tbl_fichExcel()) & " " & Me.PgBar.Value & "/" & Me.PgBar.max
                                LblSimulFeuille.Caption = "Feuille " & tbl_fenExcel(F).FenNom & " : ligne : " & leY & "/" & rsResult.RowCount
                                If p_dansGrid Then
                                    If leY = 100 Then
                                        If Not bFinListeQuestionPosée Then
                                            If MsgBox(leY & " lignes chargées sur " & rsResult.RowCount & Chr(13) & Chr(10) & "Voulez vous continuer", vbYesNo + vbDefaultButton1, "Chargement") <> vbYes Then
                                                GoTo LabFinListe
                                            End If
                                            bFinListeQuestionPosée = True
                                        End If
                                    End If
                                End If
                            Wend
LabFinListe:
                            Me.PgBar.Visible = False
                            Me.PgBarChp.Visible = False
                            Me.PgBarFeuille.Visible = False
                            Me.LblHelp.Visible = False

                            If Not p_dansExcel Then
                                Dim frmD As Form
                                Dim sSQL As String
                                Dim laWhere As String
                                Dim TitreForm As String
                                
                                Set frmD = PrmListeDetail
                                sSQL = sqlDonnees
                                If InStr(UCase(sSQL), "WHERE") > 0 Then
                                    laWhere = Mid(sSQL, InStr(UCase(sSQL), "WHERE"))
                                Else
                                    laWhere = " true "
                                End If
                                laWhere = Replace(UCase(laWhere), "WHERE", "")
                                Call Odbc_RecupVal("select FOR_Lib from formulaire where FOR_Num=" & fornumG, TitreForm)
                                
                                If fornumD > 0 Then
                                    Call Odbc_RecupVal("select FOR_Lib from formulaire where FOR_Num=" & fornumD, s)
                                    TitreForm = TitreForm & " - " & s
                                End If
                                
                                If ListeOldNbRows > 0 Then
                                    Call PrmListeDetail.AppelFrm(tbl_rdoF(i_tbl_RDOF).RDOF_FormNum, tbl_rdoF(i_tbl_RDOF).RDOF_num, laWhere, TitreForm)
                                    Set frmD = Nothing
                                Else
                                    MsgBox "Aucune donnée trouvée"
                                    GoTo Fini
                                End If
                                leY = 1
                                
                                GoTo Next_Chp

                            End If
Trop:
Fini:
                            ' Lien vers la nouvelle feuille
                            If MenFormeListe = "NewFenêtre" Then
                                strX = tbl_fichExcel(i).CmdX
                                leX = FctIntColdest(strX)
                                leY = tbl_fichExcel(i).CmdY
                                NomCellDest = strX & leY
                                ' se mettre sur la bonne feuille : p_LeIndexFenetreExcel
                                k = tbl_fichExcel(i).CmdFenNum
                                Exc_wrk.Sheets(k).Activate
                                LibLienDétail = "( " & tbl_fenExcel(tbl_fichExcel(i).CmdFenNum).FenNom & " " & strX & leY & " )"
                                Exc_wrk.Sheets(k).Range(NomCellDest).Value = p_LibLienDétail & " " & LibLienDétail
                                s = "'" & Exc_wrk.Sheets(p_LeIndexFenetreExcel).Name & "'!A1"
                                Set LesLinks = Exc_wrk.Sheets(k).Hyperlinks
                                LesLinks.Add Anchor:=Exc_wrk.Sheets(k).Cells(leY, leX), Address:="", SubAddress:=s
                            End If
                            Me.PgBar.Visible = False
                            GoTo Next_Chp
                        End If
LabFinCas:
                    End If
Lab_Close:
                    If bool_liste Or bool_liste_hierar Or bool_liste_service Or bool_liste_fonction Then
                        On Error Resume Next
                        Call RsClose(rsVal)
                        If bool_liste_hierar And nomtable_tempo <> "" Then
                            Call Odbc_Cnx.Execute("drop table " & nomtable_tempo)
                        End If
                    End If
Apres_Lab_Close:
                    If v_Trait = "Une" Then GoTo Lab_Une_Simul_04
                End If
            End If
Next_Chp:
            DoEvents
            If rsDonneesFait Then
                On Error Resume Next
                rsDonnees.Close
            End If
            If BoolMettreErreur Then
                Call FctTrace("**********************************************")
                p_Mode_FctTrace = anc_p_Mode_FctTrace
            End If
            If p_ModePublication = "" Then
                p_ModePublication = "Param"
            End If
            If p_ModePublication = "Param" Then
                On Error Resume Next
                If p_dansGrid Then
                    If FaireRefresh And tbl_fenExcel(F).FenLoad Then
                        grdCell(F).Refresh
                    End If
                End If
            End If
            Call FctTrace("FIN Champ : F " & tbl_fichExcel(i).CmdFenNum & " I=" & i & " Y=" & tbl_fichExcel(i).CmdY & " X=" & tbl_fichExcel(i).CmdX)
        Next i
Continu_2:
        Call FctTrace("Continu_2")
        
        If p_ModePublication = "Publier" Then
            Publier.grdFeuille.row = F - 1
            Publier.grdFeuille.col = 0
            Set Publier.grdFeuille.CellPicture = Publier.ImageListS.ListImages(7).Picture
        ElseIf p_ModePublication = "Param" Then
            Dim FicTmp As String, sChemin As String, FicOutHTML As String, FicOut As String
            Dim nomrep_serv As String, HTTP_LibErr As String
            Call MetFrmHTML_Visible
        End If
LabNextF:
        Call FctTrace("Fin Feuille " & F)
        DoEvents
        Me.Refresh
        iPourRefresh = 0
        If v_Trait = "Feuille" Then GoTo Lab_Une_Simul_04
    Next F
Lab_Une_Simul_04:
    If p_dansExcel Then
        Exc_obj.Visible = True
        On Error Resume Next
        Exc_obj.ActiveWorkbook.Save
    End If
    Call FctTrace("Lab_Une_Simul_04")
    p_BoolMettreComment = False
    ' mettre l'entête
    SimulationFaite = True
    Me.LblSimulFeuille.Visible = False
Lab_Annuler:
    Call FctTrace("Lab_Annuler")
    laForm.PgBarFeuille.Visible = False
    laForm.PgBarChp.Visible = False
    LblSimulFeuille.Visible = False
    cmd(CMD_MODE_CHAMP).Visible = False
    cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
    cmd(CMD_MODE_SIMUL).Visible = False
    cmd(CMD_MODE_LIEN).Visible = False
    cmd(CMD_MODE_POLICE).Visible = False
    cmd(CMD_MODE_FORMULE).Visible = False
    p_bfaire_RowColChange = True
    ' remettre visible la feuille initiale
    If iGdrCellVisible > 0 Then
        grdCell(iGdrCellVisible).Visible = True
    End If
    
    If p_dansExcel Then
        cmd(CMD_TMP_VERS_MODELE).Visible = True
    End If
    Call FctTrace("Fin Excel_Simulation")
'*******************************************************************************
'*******************************************************************************
'*******************************************************************************
End Function

Private Function FaitStrMois(ByVal laVal)
    If laVal = "01" Then
        FaitStrMois = "Janv."
    ElseIf laVal = "02" Then
        FaitStrMois = "Fevr."
    ElseIf laVal = "03" Then
        FaitStrMois = "Mars"
    ElseIf laVal = "04" Then
        FaitStrMois = "Avril"
    ElseIf laVal = "05" Then
        FaitStrMois = "Mai"
    ElseIf laVal = "06" Then
        FaitStrMois = "Juin"
    ElseIf laVal = "07" Then
        FaitStrMois = "Juil."
    ElseIf laVal = "08" Then
        FaitStrMois = "Août"
    ElseIf laVal = "09" Then
        FaitStrMois = "Sept."
    ElseIf laVal = "10" Then
        FaitStrMois = "Oct."
    ElseIf laVal = "11" Then
        FaitStrMois = "Nov."
    ElseIf laVal = "12" Then
        FaitStrMois = "Déc."
    End If
End Function

Function MajGraphSourceData(ByVal i_TbExcel)
    Dim MenF As String
    Dim leXD As String, leYD As String, leXF As String, leYF As String
    Dim s As String
    Dim s1 As String
    Dim scoordDebut As String, scoordFin As String
    Dim FenNom As String
    Dim laXValues As String
    Dim sTypeChart As Variant
    Dim ret As Integer
    Dim xl As Variant
    Dim sret As String
    Dim orientation As Integer
    Dim values As String
    Dim xvalues As String
    
    ret = VoirSiChartExiste("Type", sTypeChart, g_numfeuille, i_TbExcel, sret)
    
    FenNom = Exc_obj.ActiveWorkbook.ActiveSheet.Name
    MenF = tbl_fichExcel(i_TbExcel).CmdMenFormeChp
    leXD = tbl_fichExcel(i_TbExcel).CmdX
    leYD = tbl_fichExcel(i_TbExcel).CmdY
    leXF = FctStrColDest(tbl_fichExcel(i_TbExcel).CmdX_Fin)
    leYF = tbl_fichExcel(i_TbExcel).CmdY_Fin
    s = STR_GetChamp(MenF, "#", 0)
    
    If s = "Colonne_Val" Then
        values = "='" & FenNom & "'!$" & leXF & "$" & leYD & ":$" & leXF & "$" & leYF
    ElseIf s = "Colonne_Lib" Then
        ' pas de valeur
        Exit Function
    ElseIf s = "Colonne_Lib_Val" Then
        xvalues = "='" & FenNom & "'!$" & leXD & "$" & leYD & ":$" & leXD & "$" & leYF
        values = "='" & FenNom & "'!$" & leXF & "$" & leYD & ":$" & leXF & "$" & leYF
    ElseIf s = "Ligne_Val" Then
        values = "='" & FenNom & "'!$" & leXD & "$" & leYD & ":$" & leXF & "$" & leYF
    ElseIf s = "Ligne_Lib" Then
        ' pas de valeur
        Exit Function
    ElseIf s = "Ligne_Lib_Val" Then
        xvalues = "='" & FenNom & "'!$" & leXD & "$" & leYD & ":$" & leXF & "$" & leYD
        values = "='" & FenNom & "'!$" & leXD & "$" & leYF & ":$" & leXF & "$" & leYF
    End If
    
    Exc_obj.ActiveWorkbook.ActiveChart.SeriesCollection(1).values = values
    If xvalues <> "" Then
        Exc_obj.ActiveWorkbook.ActiveChart.SeriesCollection(1).xvalues = xvalues
    End If
End Function

Function MenF_Repartition(ByVal i_TbExcel As Integer, TypeDate As String, laForm As Form, ByVal estRelié As Boolean, ByVal XHG, ByVal YHG, ByVal XBD, ByVal YBD)
    ' Encadrer
    Dim leRange As Range
    Dim sRange As String
    Dim LaSerie As Series
    Dim LesSeries As SeriesCollection
    Dim iR As Integer
    Dim jR As Integer
    Dim sCell As String
    Dim strF As String
    Dim strP As String
    Dim stitre As String
    Dim iSerie As Integer
    Dim sD As String, sF As String
    Dim ret As Integer
    Dim sret As String
    Dim iG As Integer
    Dim XMax As Integer
    
    LblSimulFeuille.Caption = "Graphique de la Répartition"
LabDebut:
    For iR = 1 To Exc_wrk.Sheets.Count
        If Exc_wrk.Sheets(iR).Name = Exc_wrk.ActiveSheet.Name Then
            ret = VoirSiChartExiste("C", "", iR, i_TbExcel, sret)
        End If
    Next iR
    If ret = -1 Then
        ' le créer
        iR = tbl_fichExcel(i_TbExcel).CmdFenNum
        ret = FctCreerGraphique("C", 0, iR, "H", iR, i_TbExcel)
    End If
    iG = -1
    If ret = -1 Then    ' pas créé
        Exit Function
    Else ' si existe on l'utilise si mode publication
        iG = ret
        Exc_wrk.ActiveSheet.Shapes(iG).Visible = False
    End If
    
    laForm.PgBarChp.Value = 0
    XMax = XBD
    'Exc_obj.Visible = False
    '' fusionner les cellules du haut
    'sRange = Mid(Public_Alpha, XHG + 2, 1) & YHG - 1 & ":" & Mid(Public_Alpha, XHG + 2, 1) & YHG - 1
    's = Exc_wrk.ActiveSheet.Range(sRange).Value
    'sD = Mid(Public_Alpha, XHG + 2, 1) & YHG - 1
    'For iR = XHG + 2 To XBD
    '    sRange = Mid(Public_Alpha, iR, 1) & YHG - 1 & ":" & Mid(Public_Alpha, iR, 1) & YHG - 1
    '    s = Exc_wrk.ActiveSheet.Range(sRange).Value
    '    If s <> sD Then
    '    End If
    'Next iR
    For iR = XHG + 2 To XBD
        laForm.PgBarChp.Value = IIf(laForm.PgBarChp.Value < laForm.PgBarChp.max, laForm.PgBarChp.Value + 1, 1)
        sRange = FctStrColDest(iR) & YHG & ":" & FctStrColDest(iR) & YHG
        Call Encadrer(sRange, 2)
        Set leRange = Exc_wrk.ActiveSheet.Range(sRange)
        leRange.WrapText = True
        leRange.Font.FontStyle = "Gras italique"
        leRange.Font.Bold = True
        sRange = FctStrColDest(iR) & YHG + 1 & ":" & FctStrColDest(iR) & YHG + 1
        Set leRange = Exc_wrk.ActiveSheet.Range(sRange)
        leRange.Font.FontStyle = "Gras italique"
        leRange.Font.Bold = True
        leRange.Font.Color = 255
    Next iR
    For iR = YHG + 1 To YBD
        laForm.PgBarChp.Value = IIf(laForm.PgBarChp.Value < laForm.PgBarChp.max, laForm.PgBarChp.Value + 1, 1)
        sRange = FctStrColDest(XHG) & iR & ":" & FctStrColDest(XHG) & iR
        Call Encadrer(sRange, 2)
        sRange = FctStrColDest(XHG + 1) & iR & ":" & FctStrColDest(XHG + 1) & iR
        Set leRange = Exc_wrk.ActiveSheet.Range(sRange)
        leRange.Font.FontStyle = "Gras italique"
        leRange.Font.Bold = True
        leRange.Font.Color = 255
    Next iR
    ' encadrer chaque case => long
    'For jR = XHG + 1 To XBD
    '    For iR = YHG + 1 To YBD
    '        laForm.PgBarChp.Value = IIf(laForm.PgBarChp.Value < laForm.PgBarChp.max, laForm.PgBarChp.Value + 1, 1)
    '        sRange = Mid(Public_Alpha, jR, 1) & iR & ":" & Mid(Public_Alpha, jR, 1) & iR
    '        Call Encadrer(sRange, 2)
    '    Next iR
    'Next jR
    sRange = FctStrColDest(XHG) & YHG & ":" & FctStrColDest(XHG + 1) & YHG
    Call Encadrer(sRange, 3)
    If estRelié Then
        XMax = XBD
        If XMax > Len(Public_Alpha) Then
            XMax = Len(Public_Alpha)
        End If
        sRange = FctStrColDest(XHG + 2) & YHG & ":" & FctStrColDest(XMax) & YHG
        Call Encadrer(sRange, 3)
        sRange = FctStrColDest(XHG) & YHG + 1 & ":" & FctStrColDest(XHG + 1) & YBD
        Call Encadrer(sRange, 3)
        sRange = FctStrColDest(XHG + 2) & YHG + 1 & ":" & FctStrColDest(XMax) & YBD
        Call Encadrer(sRange, 3)
        sRange = FctStrColDest(XHG) & YHG + 1 & ":" & FctStrColDest(XHG) & YBD
        Call Encadrer(sRange, 3)
        sRange = FctStrColDest(XHG) & YHG + 1 & ":" & FctStrColDest(XMax) & YHG + 1
        Call Encadrer(sRange, 3)
    Else
        XMax = XBD
        If XMax > Len(Public_Alpha) Then
            XMax = Len(Public_Alpha)
        End If
        Call Encadrer(sRange, 3)
        sRange = FctStrColDest(XHG) & YHG + 1 & ":" & FctStrColDest(XHG) & YBD
        Call Encadrer(sRange, 3)
        sRange = FctStrColDest(XHG + 1) & YHG + 1 & ":" & FctStrColDest(XHG + 1) & YBD
        Call Encadrer(sRange, 3)
    End If
    If estRelié Then
        For iR = XHG + 2 To XMax
            sRange = FctStrColDest(iR) & YHG - 1 & ":" & FctStrColDest(iR) & YHG - 1
            Call Encadrer(sRange, 3)
        Next iR
    End If
    ' Graphiques : calcul des plages
    Dim Niveau1 As Integer
    Dim laS As String
    Dim iNiv As Integer
    Dim leSpace As String
    Dim iCar As Integer
    Dim nbB As Integer
    Dim n As Integer
    For iNiv = 0 To 10
        n = 0
        For iR = YHG + 2 To YBD
            sRange = FctStrColDest(XHG) & iR & ":" & FctStrColDest(XHG) & iR
            laS = Exc_wrk.ActiveSheet.Range(sRange).Value
            nbB = 0
            For iCar = 1 To 10
                ' compter le nombre de Blanc
                If Mid(laS, iCar, 1) = " " Then
                    nbB = nbB + 1
                Else
                    Exit For
                End If
            Next iCar
            If nbB = iNiv Then
                n = n + 1
            End If
        Next iR
        If n > 1 Then
            Niveau1 = iNiv
            Exit For
        End If
    Next iNiv
    On Error GoTo Erreur
    LblSimulFeuille.Caption = "Graphique : mise en forme "
    For iR = YHG + 2 To YBD
        Set leRange = Exc_wrk.ActiveSheet.Range(FctStrColDest(XHG) & iR)
        sCell = leRange.Value
        stitre = leRange.Value
        If Mid(stitre, 1, Niveau1) = Space(Niveau1) And Mid(stitre, Niveau1 + 1, 1) <> " " Then
            sRange = FctStrColDest(XHG) & iR & ":" & FctStrColDest(XMax) & iR
            Exc_wrk.ActiveSheet.Range(sRange).Borders(xlEdgeTop).weight = 3
            laForm.PgBarChp.Value = IIf(laForm.PgBarChp.Value < laForm.PgBarChp.max, laForm.PgBarChp.Value + 1, 1)
            sRange = FctStrColDest(XHG) & iR & ":" & FctStrColDest(XMax) & iR
            Set leRange = Exc_wrk.ActiveSheet.Range(sRange)
            leRange.Font.FontStyle = "Gras italique"
            leRange.Font.Size = "10"
            leRange.Font.Bold = True
            leRange.Interior.Color = 12835293
            If jR <> XHG + 1 Then
                leRange.Font.Color = 12611584
            End If
        End If
    Next iR
    
    Exc_obj.Visible = True
    If p_VersionExcel > "2003" Then
        LblSimulFeuille.Caption = "Graphique données de la Répartition"
        Exc_wrk.ActiveSheet.Shapes(iG).Visible = True
        Exc_wrk.ActiveSheet.Shapes(iG).Select
        For iR = 1 To Exc_wrk.ActiveChart.SeriesCollection.Count
            Exc_wrk.ActiveChart.SeriesCollection(1).Delete
        Next iR
        If TypeDate = "" Then
            Exc_wrk.ActiveChart.ChartType = xl3DColumn
        Else
            Exc_wrk.ActiveChart.ChartType = xlLineMarkers    ' xlLineMarkersStacked
        End If
        strF = Exc_wrk.ActiveSheet.Name
        iSerie = 1
        Dim Retenue As Boolean
        If TypeDate <> "" Then
            Exc_wrk.ActiveChart.HasLegend = True
        End If
        For jR = YHG + 2 To YBD ' lignes
            sRange = FctStrColDest(XHG) & jR & ":" & FctStrColDest(XHG) & jR
            stitre = Exc_wrk.ActiveSheet.Range(sRange).Value
            laForm.PgBarChp.Value = IIf(laForm.PgBarChp.Value < laForm.PgBarChp.max, laForm.PgBarChp.Value + 1, 1)
            If Mid(stitre, 1, Niveau1) = Space(Niveau1) And Mid(stitre, Niveau1 + 1, 1) <> " " Then
                Exc_wrk.ActiveChart.SeriesCollection.NewSeries
                sCell = FctStrColDest(XHG + 2) & jR & ":" & FctStrColDest(XMax) & jR
                sRange = FctStrColDest(XHG) & jR
                Exc_wrk.ActiveChart.SeriesCollection(Exc_wrk.ActiveChart.SeriesCollection.Count).Name = stitre
                strP = "='" & strF & "'!" & sCell
                Set LesSeries = Exc_wrk.ActiveChart.SeriesCollection
                Set LaSerie = LesSeries(iSerie)
                LaSerie.values = strP
                iSerie = iSerie + 1
            End If
        Next jR
        If TypeDate = "" Then
            On Error Resume Next
            Exc_wrk.ActiveChart.HasLegend = True
            Exc_wrk.ActiveChart.Axes(xlSeries).Delete
        End If
        If estRelié Then
            If TypeDate <> "" Then
                sCell = FctStrColDest(XHG + 2) & YHG & ":" & FctStrColDest(XMax) & YHG
            Else
                sCell = FctStrColDest(XHG + 2) & YHG & ":" & FctStrColDest(XMax) & YHG
            End If
            strP = "='" & strF & "'!" & sCell
            Exc_wrk.ActiveChart.SeriesCollection(1).xvalues = strP
        Else
            Exc_wrk.ActiveChart.Axes(xlCategory).Delete
        End If
    End If
    Exit Function
Erreur:
    MsgBox Error$
End Function

Private Function Relié_à(ByVal sRelié_à As String)
    Dim sF As String, sX As String, sY As String
    Dim i As Integer
    
    sF = STR_GetChamp(sRelié_à, ";", 0)
    sX = STR_GetChamp(sRelié_à, ";", 1)
    sY = STR_GetChamp(sRelié_à, ";", 2)
    For i = 0 To UBound(tbl_fichExcel)
        If tbl_fichExcel(i).CmdType = "CHP" = sF Then
            If tbl_fichExcel(i).CmdFenNum = sF Then
                If tbl_fichExcel(i).CmdX = sX Then
                    If tbl_fichExcel(i).CmdY = sY Then
                        Exit For
                    End If
                End If
            End If
        End If
    Next i
    If i > UBound(tbl_fichExcel) Then
        Relié_à = -1
    Else
        Relié_à = i
    End If
End Function

Private Function Encadrer(ByVal sRange As String, ByVal weight As Integer)
    Dim leRange As Range
    Dim laSheet As Sheets
    Dim nomSheet As String
    
    On Error Resume Next
    nomSheet = Exc_wrk.ActiveSheet.Name
    Exc_wrk.Sheets(nomSheet).Activate
    Set leRange = Exc_wrk.ActiveSheet.Range(sRange)
    leRange.Borders(xlEdgeLeft).weight = weight
    leRange.Borders(xlEdgeTop).weight = weight
    leRange.Borders(xlEdgeBottom).weight = weight
    leRange.Borders(xlEdgeRight).weight = weight
End Function

Private Function FaitResultRepartition(ByVal Liste_Num As Variant, ByVal laForm As Form, ByVal rs, ByVal listeChp, ByVal strMenForme As String, ByVal le_forecNum, ByVal iChpNum As Integer)
    Dim nbDonnees As Integer
    Dim CndEntite As String
    Dim Cnd_RP As String
    Dim premEntite As Boolean
    Dim ChpNomEntite As String
    Dim ValEntite As String
    Dim Entite_ForecType As String
    Dim Entite_ForecFctValid As String
    Dim EntiteNum As String
    Dim Entite_Type As String
    Dim EntiteNumPere As String
    Dim NewEntiteNumPere As String
    Dim New_UBP_tb_Entite As Integer
    Dim EntiteLib As String
    Dim EntiteLibCourt As String
    Dim DonVal As String, DonUneVal As String, DonSep1 As String, DonSep2 As String
    Dim iVal As Integer
    Dim DonNum As Long
    Dim DonNom As String, DonType As String
    Dim encoreVal As Boolean
    Dim encore As Boolean
    Dim dejaEntite As Boolean
    Dim iEntite As Integer
    Dim New_iEntite As Integer
    Dim iDonnees As Integer
    Dim tbUnChp(5)
    Dim CumulPereFait As Boolean
    Dim numchp As Integer, nomChp As Integer, TypeChp As Integer, ValChp As Integer
    Dim Lvc_Num As Integer
    Dim tbChp() As Variant
    Dim NiveauEntite As Integer
    Dim s As String, forec_type As String, forec_fctvalid As String, forec_nom As String
    Dim forec_LvcNum As String
    Dim UBP_tb_Entite As Integer, UBtbEntite As Integer, UBtbVal As Integer, nbiter As Integer, iIter As Integer
    Dim bFaireCumul As Boolean
    Dim strChpVal As String
    Dim iChpVal As Integer, ValOK As Boolean
    Dim DateRepart As Integer
    Dim sdater As String
    Dim sAnnée As String
    Dim EntNiveauSH As String
    Dim i As Integer
    Dim j As Integer
    Dim UBLst As Integer
    Dim idon As Integer
    
    numchp = 0
    nomChp = 1
    TypeChp = 2
    ValChp = 3
    DateRepart = 4
    Lvc_Num = 5
    
    'niveauMax = 0
    'nbDonnees = 0
    Erase tbChp
    For iDonnees = 0 To STR_GetNbchamp(listeChp, "|")
        s = STR_GetChamp(listeChp, "|", iDonnees)
        If s <> "" Then
            nbDonnees = nbDonnees + 1
            ReDim Preserve tbChp(5, nbDonnees)
            tbChp(numchp, nbDonnees) = s
            Call Odbc_RecupVal("select forec_type, forec_fctvalid, forec_nom, forec_valeurs_possibles from formetapechp where forec_num=" & s, forec_type, forec_fctvalid, forec_nom, forec_LvcNum)
            If forec_fctvalid = "%NUMSERVICE" Then
                forec_type = "NUMSERVICE"
            ElseIf InStr(forec_fctvalid, "%DATE") > 0 Then
                forec_type = "DATE"
                s = STR_GetChamp(strMenForme, "|", iDonnees)
                s = STR_GetChamp(s, "#", 6)
                tbChp(DateRepart, nbDonnees) = s
            End If
            tbChp(TypeChp, nbDonnees) = forec_type
            tbChp(nomChp, nbDonnees) = forec_nom
            tbChp(ValChp, nbDonnees) = ""
            tbChp(Lvc_Num, nbDonnees) = forec_LvcNum
        End If
    Next iDonnees
    
    Erase P_tb_Entite
    Erase P_total_colonnes
    P_bool_tbColonnes = False
    
    Call FaitNiveauTotalE
    UBP_tb_Entite = 0
        
    If rs.EOF Then
        Exit Function
    End If
    ChpNomEntite = rs(0).Name
    premEntite = True
    
    ' P_tb_Entite(0) est le nombre total
    
    Call Odbc_RecupVal("select forec_type, forec_fctvalid from formetapechp where forec_num=" & le_forecNum, Entite_ForecType, Entite_ForecFctValid)
    If Entite_ForecFctValid = "%NUMSERVICE" Then
        Entite_ForecType = "NUMSERVICE"
        Entite_Type = "S"
    ElseIf Entite_ForecType = "HIERARCHIE" Then
        Entite_ForecType = "HIERARCHIE"
        Entite_Type = "H"
    ElseIf Entite_ForecFctValid = "%NUMFCT" Then
        Entite_ForecType = "NUMFCT"
        Entite_Type = "F"
    ElseIf InStr(Entite_ForecFctValid, "%DATE") > 0 Then
        Entite_ForecType = "DATE"
        Entite_Type = "D"
    Else    ' Liste
        Entite_ForecType = "LISTE"
        Entite_Type = "L"
        ' Mettre toutes les valeurs retenues
        UBLst = Repart_Chercher_Entite(Entite_Type, Liste_Num, iChpNum)
        If UBLst = -1 Then
            MsgBox "Entité non trouvée"
            FaitResultRepartition = P_ERREUR
            Exit Function
        End If
        For i = 0 To UBound(tbl_LesListes_Entites(UBLst).EntPEntites)
            If tbl_LesListes_Entites(UBLst).EntPEntites(i).EntFRetenue Then
                premEntite = False
                UBP_tb_Entite = UBP_tb_Entite + 1
                ReDim Preserve P_tb_Entite(UBP_tb_Entite)
                EntiteNum = tbl_LesListes_Entites(UBLst).EntPEntites(i).EntFNum
                P_tb_Entite(UBP_tb_Entite).NumEntite = EntiteNum
                Call Odbc_RecupVal("Select vc_lib, vc_libcourt from valchp where vc_num=" & EntiteNum, EntiteLib, EntiteLibCourt)
                EntiteLib = IIf(EntiteLibCourt <> "", EntiteLibCourt, EntiteLib)
                CndEntite = ChpNomEntite & " like '%V" & P_tb_Entite(UBP_tb_Entite).NumEntite & ";%'"
                P_tb_Entite(UBP_tb_Entite).PourSQL = CndEntite
                Cnd_RP = "CHP:" & tbl_fichExcel(iChpNum).CmdChpNum & ":" & ChpNomEntite & "¤OP:=¤VAL:" & P_tb_Entite(UBP_tb_Entite).NumEntite   ' CHP:1361:e1_domaine¤OP:EG¤VAL:1123¤*
                P_tb_Entite(UBP_tb_Entite).Pour_Cnd_RP = Cnd_RP
                P_tb_Entite(UBP_tb_Entite).NumFiltre = tbl_fichExcel(iChpNum).CmdFormNum
                P_tb_Entite(UBP_tb_Entite).LibEntite = EntiteLib
                P_tb_Entite(UBP_tb_Entite).EntNumPere = 0
                P_tb_Entite(UBP_tb_Entite).NiveauSH = 1
                P_tb_Entite(UBP_tb_Entite).est_donnée = True
                P_tb_Entite(UBP_tb_Entite).nombre = 0
            End If
        Next i
    End If
    laForm.PgBarChp.Value = 0
    While Not rs.EOF    ' pour chaque ligne
        idon = idon + 1
        laForm.PgBarChp.Value = IIf(laForm.PgBarChp.Value < laForm.PgBarChp.max, laForm.PgBarChp.Value + 1, 1)
        ' Renseigner l'entité
        ' valeur de l'entité
        'Debug.Print rs(ChpNomEntite).Value & " " & laForm.PgBarChp.Value
        If IsNull(rs(ChpNomEntite).Value) Then
            ValEntite = ""
        Else
            ValEntite = rs(ChpNomEntite).Value
        End If
'Debug.Print idon & " " & ValEntite
'If idon = 568 Or idon = 5848 Then
'    MsgBox "ici"
'End If
        If IsNull(ValEntite) Or ValEntite = "" Then
            ValEntite = "<NR>"
            ' nbiter = nbiter + 1
            nbiter = 1
        Else
            nbiter = 0
            If Entite_ForecType = "NUMSERVICE" Then
                nbiter = 1
            ElseIf Entite_ForecType = "NUMFCT" Then
                nbiter = 1
            ElseIf Entite_ForecType = "DATE" Then
                nbiter = 1
            ElseIf Entite_ForecType = "HIERARCHIE" Then
                ValEntite = ReformerValH(ValEntite)
                For iIter = 0 To STR_GetNbchamp(ValEntite, "|")
                    s = STR_GetChamp(ValEntite, "|", iIter)
                    If s <> "" Then
                        nbiter = nbiter + 1
                    End If
                Next iIter
            ElseIf Entite_ForecType = "LISTE" Then
                For iIter = 0 To STR_GetNbchamp(ValEntite, ";")
                    s = STR_GetChamp(ValEntite, ";", iIter)
                    If s <> "" Then
                        nbiter = nbiter + 1
                    End If
                Next iIter
            End If
        End If
        bFaireCumul = True
        For iIter = 0 To nbiter - 1
            ' Valeur de l'entité
            If Mid(ValEntite, 1, 4) = "<NR>" Then
                EntiteNum = 0
                EntiteLib = ValEntite   ' "<NR>"
            Else
                If Entite_ForecType = "NUMSERVICE" Or Entite_ForecType = "NUMFCT" Then
                    If InStr(ValEntite, "#") > 0 Then
                        EntiteNum = STR_GetChamp(ValEntite, "#", 0)
                        EntiteLib = STR_GetChamp(ValEntite, "#", 1)
                    Else
                        EntiteNum = -1
                        EntiteLib = "Saisis Manuellement"
                    End If
                ElseIf Entite_ForecType = "HIERARCHIE" Then
                    s = STR_GetChamp(ValEntite, "|", iIter)
                    If s <> "" Then
                        s = STR_GetChamp(s, ";", STR_GetNbchamp(s, ";") - 1)
                        EntiteNum = Replace(s, "M", "")
                        EntiteLib = "HIERARCHIE"
                    Else
                        GoTo LabNextIter
                    End If
                ElseIf Entite_ForecType = "DATE" Then
                    EntiteNum = ValEntite
                    EntiteLib = ChpNomEntite
                ElseIf Entite_ForecType = "LISTE" Then
                    s = STR_GetChamp(ValEntite, ";", iIter)
                    If s <> "" Then
                        EntiteNum = Replace(s, "V", "")
                        EntiteLib = "LISTE"
                    Else
                        GoTo LabNextIter
                    End If
                End If
            End If
            ' Cumuler pour cette entité : SI RETENUE
            UBLst = Repart_Chercher_Entite(Entite_Type, Liste_Num, iChpNum)
            If UBLst = -1 Then
                MsgBox "Entité non trouvée"
                FaitResultRepartition = P_ERREUR
                Exit Function
            End If
            If ValEntite = "<NR>" Then
                GoTo LabRetenue
            End If
            If Entite_Type = "D" Then
                EntiteNum = Repart_TrsfDate(EntiteNum, Liste_Num)
            End If
            For i = 0 To UBound(tbl_LesListes_Entites(UBLst).EntPEntites)
                If tbl_LesListes_Entites(UBLst).EntPEntites(i).EntFNum = EntiteNum Then
                    If tbl_LesListes_Entites(UBLst).EntPEntites(i).EntFRetenue Then
                        GoTo LabRetenue
                    Else
                        GoTo LabNextIter
                    End If
                End If
            Next i
            GoTo LabNextIter
LabRetenue:
            If premEntite Then
                dejaEntite = False
                premEntite = False
            Else
                dejaEntite = False
                UBP_tb_Entite = UBound(P_tb_Entite)
                For iEntite = 1 To UBP_tb_Entite
                    If EntiteNum = P_tb_Entite(iEntite).NumEntite Then
                        dejaEntite = True
                        Exit For
                    End If
                Next iEntite
            End If
            If dejaEntite Then  ' on cumule
                If listeChp = "" Or nbiter = 1 Then
                    P_tb_Entite(iEntite).nombre = P_tb_Entite(iEntite).nombre + 1
                    EntiteNumPere = P_tb_Entite(iEntite).EntNumPere
                    If bFaireCumul Then
                        P_tb_Entite(0).nombre = P_tb_Entite(0).nombre + 1   ' nombre total de fiches
                    End If
                    'Debug.Print "Repart " & P_tb_Entite(UBP_tb_Entite).LibEntite & " => " & P_tb_Entite(UBP_tb_Entite).nombre
                End If
            Else
                UBP_tb_Entite = UBP_tb_Entite + 1
                ReDim Preserve P_tb_Entite(UBP_tb_Entite)
                P_tb_Entite(UBP_tb_Entite).NumEntite = EntiteNum
                
                EntNiveauSH = ""
                Dim Cnd As String
                If EntiteNum = -1 Then  ' Saisie manuelle
                    EntiteLib = "Saisie manuelle"
                    EntiteNumPere = 0
                ElseIf Entite_ForecType = "HIERARCHIE" Then
Debug.Print EntiteNum
                    Call Odbc_RecupVal("Select hvc_nom, hvc_numpere from hierarvalchp where hvc_num=" & EntiteNum, EntiteLib, EntiteNumPere)
                    CndEntite = ChpNomEntite & " like '%M" & P_tb_Entite(UBP_tb_Entite).NumEntite & ";%'"
                    Cnd = "CHP:" & le_forecNum & ":" & ChpNomEntite & "¤OP:EG¤VAL:" & P_tb_Entite(UBP_tb_Entite).NumEntite & "¤"
                    EntNiveauSH = FaitEntiteHierNiveauSH(EntiteNum, 1)
                ElseIf Entite_ForecType = "NUMFCT" Then
                    EntiteNumPere = 0
                    CndEntite = ChpNomEntite & " like '%" & P_tb_Entite(UBP_tb_Entite).NumEntite & "#%'"
                    Cnd = "CHP:" & le_forecNum & ":" & ChpNomEntite & "¤OP:EG¤VAL:" & P_tb_Entite(UBP_tb_Entite).NumEntite & "¤"
                ElseIf Entite_ForecType = "NUMSERVICE" Then
                    Call Odbc_RecupVal("Select srv_nom, srv_numpere, srv_nivsnum from service where srv_num=" & EntiteNum, EntiteLib, EntiteNumPere, EntNiveauSH)
                    CndEntite = ChpNomEntite & " like '%" & P_tb_Entite(UBP_tb_Entite).NumEntite & "#%'"
                    Cnd = "CHP:" & le_forecNum & ":" & ChpNomEntite & "¤OP:EG¤VAL:" & P_tb_Entite(UBP_tb_Entite).NumEntite & "¤"
                ElseIf Entite_ForecType = "LISTE" Then
                    If EntiteNum = 0 Then ' non renseignée
                        EntiteLib = "<NR>"
                    Else
                        Call Odbc_RecupVal("Select vc_lib, vc_libcourt from valchp where vc_num=" & EntiteNum, EntiteLib, EntiteLibCourt)
                        EntiteLib = IIf(EntiteLibCourt <> "", EntiteLibCourt, EntiteLib)
                        CndEntite = ChpNomEntite & " like '%V" & P_tb_Entite(UBP_tb_Entite).NumEntite & ";%'"
                    End If
                    Cnd = "CHP:" & le_forecNum & ":" & ChpNomEntite & "¤OP:EG¤VAL:" & P_tb_Entite(UBP_tb_Entite).NumEntite & "¤"
                    EntiteNumPere = 0
                ElseIf Entite_ForecType = "DATE" Then
                    s = STR_GetChamp(Liste_Num, ";", 2)
                    If s = "S" Then
                        EntiteLib = TrsfDateToString(ValEntite, s)
                    ElseIf s = "M" Then
                        EntiteLib = TrsfDateToString(ValEntite, s)
                    ElseIf s = "J" Then
                        EntiteLib = TrsfDateToString(ValEntite, s)
                    ElseIf s = "T" Then
                        EntiteLib = TrsfDateToString(ValEntite, s)
                    ElseIf s = "A" Then
                        EntiteLib = TrsfDateToString(ValEntite, s)
                    Else
                        EntiteLib = "??? " & EntiteNum
                    End If
                    EntiteNumPere = 0
                    'CndEntite = ChpNomEntite & " = '" & P_tb_Entite(UBP_tb_Entite).NumEntite & ";%'"
                    Cnd = "CHP:" & le_forecNum & ":" & ChpNomEntite & "¤OP:EG¤VAL:" & P_tb_Entite(UBP_tb_Entite).NumEntite & "¤"
                End If
                If EntiteNum = 0 Then
                    CndEntite = "(" & ChpNomEntite & "='' Or " & ChpNomEntite & " IS NULL)"
                End If
                
                P_tb_Entite(UBP_tb_Entite).PourSQL = CndEntite
                ' HERVE
                P_tb_Entite(UBP_tb_Entite).lstCnd = faitLstCnd(le_forecNum)
                P_tb_Entite(UBP_tb_Entite).lstCnd = P_tb_Entite(UBP_tb_Entite).lstCnd & Cnd & "¤¤"
                P_tb_Entite(UBP_tb_Entite).lstCnd = P_tb_Entite(UBP_tb_Entite).lstCnd & "(" & P_tb_Entite(UBP_tb_Entite).PourSQL & ")"
                P_tb_Entite(UBP_tb_Entite).NumFiltre = tbl_fichExcel(iChpNum).CmdFormNum
                P_tb_Entite(UBP_tb_Entite).LibEntite = EntiteLib
                P_tb_Entite(UBP_tb_Entite).EntNumPere = EntiteNumPere
                P_tb_Entite(UBP_tb_Entite).NiveauSH = EntNiveauSH
                P_tb_Entite(UBP_tb_Entite).est_donnée = True
                
                P_tb_Entite(UBP_tb_Entite).nombre = 1
                iEntite = UBP_tb_Entite
                If bFaireCumul Then
                    P_tb_Entite(0).nombre = P_tb_Entite(0).nombre + 1  ' nombre total de fiches
                End If
                'Debug.Print "Repart " & P_tb_Entite(UBP_tb_Entite).LibEntite & " => " & P_tb_Entite(UBP_tb_Entite).nombre
                ' Si Service ou Hiérarchie => cumuler dans les pères
            End If
            
            If nbDonnees = 0 Then
                ReDim P_tb_Une_Entite(0)
LabEncore:
                P_tb_Une_Entite(0) = P_tb_Entite(iEntite)
                bFaireCumul = True
                DonUneVal = ""
                If EntiteNum <> -1 Then
                    New_iEntite = MajEntitePere(bFaireCumul, iEntite, ChpNomEntite, Entite_ForecType, DonUneVal, tbUnChp, iChpNum)
                End If
                If P_tb_Entite(New_iEntite).EntNumPere > 0 Then
                    iEntite = New_iEntite
                    GoTo LabEncore
                End If
            Else
                ' Renseigner pour chaque données
                CumulPereFait = False
                For iDonnees = 1 To nbDonnees
                    DonVal = rs(tbChp(nomChp, iDonnees)) & ""
                    If DonVal = "" Then
                        DonVal = "<NR>" & tbChp(numchp, iDonnees)
                    End If
                    ' voir si valeur à retenir
                    ValOK = False
                    If Mid(DonVal, 1, 4) = "<NR>" Then
                        ValOK = True
                    ElseIf P_UB_tbListeVals = 0 Then ' Toutes à retenir
                        ValOK = True
                    ElseIf tbChp(TypeChp, iDonnees) = "DATE" Then
                        ValOK = True
                    Else
                        For iChpVal = 0 To P_UB_tbListeVals - 1
                            If tbChp(Lvc_Num, iDonnees) = P_tbListeVals(iChpVal).ListeNum Then
                                If P_tbListeVals(iChpVal).VC_Num = "*" Then
                                    ValOK = True
                                    Exit For
                                Else
                                    strChpVal = P_tbListeVals(iChpVal).VC_Num & ";"
                                    If strChpVal = DonVal Then
                                        ValOK = True
                                        Exit For
                                    End If
                                End If
                            End If
                        Next iChpVal
                    End If
                    If Not ValOK Then
                        GoTo LabNextIDonnees
                    End If
                    DonNom = tbChp(nomChp, iDonnees)
                    DonType = tbChp(TypeChp, iDonnees)
                    DonNum = tbChp(numchp, iDonnees)
                    tbUnChp(1) = DonNom
                    tbUnChp(2) = DonType
                    tbUnChp(3) = DonNum
                    iVal = 0
                    encoreVal = True
                    While encoreVal
                        If DonType = "NUMSERVICE" Then
                            MsgBox "a faire"
                        ElseIf DonType = "HIERARCHIE" Then
                            MsgBox "a faire"
                        ElseIf DonType = "DATE" Then
                            DonUneVal = STR_GetChamp(DonVal, ";", iVal)
                            If DonUneVal <> "" Then
                                sAnnée = Mid(DonVal, 7, 4)
                                sdater = tbChp(DateRepart, iDonnees)
                                If sdater = "J" Then
                                    DonUneVal = Repart_Calcul_NumJour(DonUneVal)
                                ElseIf sdater = "S" Then
                                    DonUneVal = Repart_Calcul_NumSemaine(DonUneVal)
                                ElseIf sdater = "M" Then
                                    DonUneVal = Repart_Calcul_NumMois(DonUneVal)
                                ElseIf sdater = "T" Then
                                    DonUneVal = Repart_Calcul_NumTrimestre(DonUneVal)
                                ElseIf sdater = "A" Then
                                    DonUneVal = Repart_Calcul_NumAnnée(DonUneVal)
                                End If
                            End If
                            'Debug.Print ValEntite & "don=" & DonUneVal & " Ent=" & P_tb_Entite(iEntite).NumEntite & " nbEntite=" & P_tb_Entite(iEntite).nombre & " nbtotFiches=" & P_tb_Entite(0).nombre
                            If DonUneVal = "" Then
                                encoreVal = False
                                GoTo LabNextIDonnees
                            Else
                                If sdater = "J" Then
                                    DonUneVal = sAnnée & "_" & sdater & "_" & DonUneVal
                                Else
                                    DonUneVal = sAnnée & "_" & sdater & "_" & DonUneVal
                                End If
                                Call MettreValE(bFaireCumul, ChpNomEntite, Entite_ForecType, DonUneVal, tbUnChp, iEntite, True, iChpNum)
                                Call TotalTBValeur(DonUneVal, CInt(DonNum), DonType)
                            End If
                        Else
                            DonUneVal = STR_GetChamp(DonVal, ";", iVal)
                            'Debug.Print ValEntite & "don=" & DonUneVal & " Ent=" & P_tb_Entite(iEntite).NumEntite & " nbEntite=" & P_tb_Entite(iEntite).nombre & " nbtotFiches=" & P_tb_Entite(0).nombre
                            If DonUneVal = "" Then
                                encoreVal = False
                                GoTo LabNextIDonnees
                            Else
                                Call MettreValE(bFaireCumul, ChpNomEntite, Entite_ForecType, DonUneVal, tbUnChp, iEntite, True, iChpNum)
                                Call TotalTBValeur(DonUneVal, CInt(DonNum), DonType)
                            End If
                        End If
                        ' Cumuler dans les pères
                        If EntiteNum <> -1 Then
                        'If True Or Not CumulPereFait Then
                            If Entite_ForecType = "NUMSERVICE" Or Entite_ForecType = "HIERARCHIE" Then
                                NewEntiteNumPere = EntiteNumPere
                                New_iEntite = iEntite
                                While NewEntiteNumPere > 0
                                    ReDim P_tb_Une_Entite(0)
                                    P_tb_Une_Entite(0) = P_tb_Entite(New_iEntite)
                                    New_iEntite = MajEntitePere(bFaireCumul, New_UBP_tb_Entite, ChpNomEntite, Entite_ForecType, DonUneVal, tbUnChp, iChpNum)
                                    bFaireCumul = False
                                    NewEntiteNumPere = P_tb_Entite(New_iEntite).EntNumPere
                                Wend
                                'UBP_tb_Entite = New_UBP_tb_Entite
                                UBP_tb_Entite = UBound(P_tb_Entite)
                                'Debug.Print "   ubound=" & UBound(P_tb_Entite)
                            End If
                            CumulPereFait = True
                        End If
                        iVal = iVal + 1
                    Wend
LabNextIDonnees:
                Next iDonnees
            End If
LabNextIter:
        Next iIter
        rs.MoveNext
    Wend
    ' Reparcourir pour remettre les niveaux
    NiveauEntite = 1
    For iEntite = UBound(P_tb_Entite) To 1 Step -1
        If P_tb_Entite(iEntite).EntNumPere = 0 Then
            P_tb_Entite(iEntite).niveau = NiveauEntite
            If P_tb_Entite(iEntite).NumEntite <> -1 And P_tb_Entite(iEntite).NumEntite <> 0 Then
                Call MajEntiteNiveau(P_tb_Entite(iEntite).NumEntite, NiveauEntite + 1)
            End If
        End If
    Next iEntite
    FaitResultRepartition = P_OK
    Exit Function
    For iEntite = UBound(P_tb_Entite) To 0 Step -1
        Debug.Print "Pere=" & P_tb_Entite(iEntite).EntNumPere & " Entite=" & P_tb_Entite(iEntite).NumEntite & " Niveau=" & P_tb_Entite(iEntite).niveau & " Nb=" & P_tb_Entite(iEntite).nombre
        If iEntite > 0 Then
            'For j = 0 To UBound(P_tb_Entite(iEntite).valeurs)
            '    Debug.Print "     nb=" & P_tb_Entite(iEntite).valeurs(j).nb & " numchp=" & P_tb_Entite(iEntite).valeurs(j).numchp & " valeur=" & P_tb_Entite(iEntite).valeurs(j).valeur
            'Next j
        End If
    Next iEntite
    
End Function

Private Function faitLstCnd(ByVal le_I As Integer)
    Dim i As Integer
    Dim j As Integer
    Dim s As String
    Dim s2 As String
    Dim s1 As String
    Dim nb As Integer
    Dim sql As String, rs As rdoResultset
    
    On Error GoTo Fin
    For i = 0 To UBound(p_tblCondPourLien)
        If p_tblCondPourLien(i).CPL_cond_Type <> "Demande" Then
            For j = 0 To STR_GetNbchamp(p_tblCondPourLien(i).CPL_cond_RP, "§")
                s1 = STR_GetChamp(p_tblCondPourLien(i).CPL_cond_RP, "§", j)
                If s1 <> "" Then
                    nb = STR_GetNbchamp(s1, "¤")
                    If nb = 3 Then
                        s1 = s1 & "¤"
                    End If
                    p_tblCondPourLien(i).CPL_cond_RP = reformer_BCR(p_tblCondPourLien(i).CPL_ff_num, p_tblCondPourLien(i).CPL_cond_RP)
                    s1 = p_tblCondPourLien(i).CPL_cond_RP & "¤" & p_tblCondPourLien(i).CPL_cond_SQL
                    s = s & s1 & "§"
                End If
            Next j
        End If
    Next i
Fin:
    On Error GoTo 0
    faitLstCnd = s
End Function

Private Function TrsfDateToString(ByVal sdate, ByVal stype)
    Dim s As String
    Dim s1 As String
    
    s1 = ""
    If sdate = "<NR>" Then
        s = "<NR>"
    Else
        If stype = "J" Then
            If Weekday(sdate) = 1 Then
                s = "Dimanche"
            ElseIf Weekday(sdate) = 2 Then
                s = "Lundi"
            ElseIf Weekday(sdate) = 3 Then
                s = "Mardi"
            ElseIf Weekday(sdate) = 4 Then
                s = "Mercredi"
            ElseIf Weekday(sdate) = 5 Then
                s = "Jeudi"
            ElseIf Weekday(sdate) = 6 Then
                s = "Vendredi"
            ElseIf Weekday(sdate) = 7 Then
                s = "Samedi"
            End If
        ElseIf stype = "M" Then
            s = STR_GetChamp(sdate, "/", 1)
            If s = "01" Then
                s = "Janvier"
            ElseIf s = "02" Then
                s = "Février"
            ElseIf s = "03" Then
                s = "Mars"
            ElseIf s = "04" Then
                s = "Avril"
            ElseIf s = "05" Then
                s = "Mai"
            ElseIf s = "06" Then
                s = "Juin"
            ElseIf s = "07" Then
                s = "Juillet"
            ElseIf s = "08" Then
                s = "Aout"
            ElseIf s = "09" Then
                s = "Septembre"
            ElseIf s = "10" Then
                s = "Octobre"
            ElseIf s = "11" Then
                s = "Novembre"
            ElseIf s = "12" Then
                s = "Décembre"
            End If
        ElseIf stype = "T" Then
            s = STR_GetChamp(sdate, "/", 1)
            If s = "01" Or s = "02" Or s = "03" Then
                s = "1er Trimestre"
            ElseIf s = "04" Or s = "05" Or s = "06" Then
                s = "2ème Trimestre"
            ElseIf s = "07" Or s = "08" Or s = "09" Then
                s = "3ème Trimestre"
            ElseIf s = "10" Or s = "11" Or s = "12" Then
                s = "4ème Trimestre"
            End If
        ElseIf stype = "S" Then
            s = "Semaine "
            s = s & " " & DatePart("ww", sdate, vbMonday, vbFirstJan1)
        ElseIf stype = "A" Then
            s = "" & STR_GetChamp(sdate, "/", 2)
        End If
    End If
    TrsfDateToString = s
End Function

Private Function Repart_TrsfDate(ByVal v_EntiteNum, ByVal v_liste_num)
    Dim stype As String
    Dim sRes As String
    
    stype = STR_GetChamp(v_liste_num, ";", 2)
    If stype = "J" Then
        sRes = Repart_Calcul_NumJour(v_EntiteNum)
    ElseIf stype = "S" Then
        sRes = Repart_Calcul_NumSemaine(v_EntiteNum)
    ElseIf stype = "M" Then
        sRes = Repart_Calcul_NumMois(v_EntiteNum)
    ElseIf stype = "T" Then
        sRes = Repart_Calcul_NumTrimestre(v_EntiteNum)
    ElseIf stype = "A" Then
        sRes = Repart_Calcul_NumAnnée(v_EntiteNum)
    Else
        'Call MsgBox("Champ Date => Paramétrage manquant : La répartition du champ date va se faire par année")
        sRes = Repart_Calcul_NumAnnée(v_EntiteNum)
    End If
    Repart_TrsfDate = sRes
End Function

Private Function ReformerValH(ByVal ValH As String)
    Dim i As Integer
    Dim j As Integer
    Dim iSupr As Integer
    Dim k As Integer
    Dim sOut As String
    Dim s As String
    Dim s1 As String
    Dim s2 As String
    Dim enDouble As Boolean
    Dim nbchp As Integer
    
Debut:
    sOut = ""
    nbchp = STR_GetNbchamp(ValH, "|")
    For i = 0 To nbchp
        s1 = STR_GetChamp(ValH, "|", i)
        If s1 <> "" Then
            enDouble = False
            For j = i + 1 To nbchp
                If i <> j Then
                    s2 = STR_GetChamp(ValH, "|", j)
                    If s2 <> "" Then
                        If Mid(s2, 1, Len(s1)) = s1 Then
                            enDouble = True
                            's = s2
                            iSupr = i
                            Exit For
                        ElseIf Mid(s1, 1, Len(s2)) = s2 Then
                            enDouble = True
                            's = s1
                            iSupr = j
                            Exit For
                        End If
                    End If
                End If
            Next j
            If enDouble Then
                sOut = ""
                For k = 0 To nbchp
                    If k <> iSupr Then
                        s = STR_GetChamp(ValH, "|", k)
                        If s <> "" Then
                            sOut = sOut & STR_GetChamp(ValH, "|", k) & "|"
                        End If
                    End If
                Next k
                ValH = sOut
                GoTo Debut
            Else
                If s1 <> "" Then
                    sOut = sOut & s1 & "|"
                End If
            End If
        End If
    Next i
    
    ReformerValH = sOut
    
End Function

Private Function FaitEntiteHierNiveauSH(ByVal EntiteNum, ByRef NiveauSH As Integer)
    Dim EntiteNumPere As String
    
    If EntiteNum = 0 Then
        Exit Function
    End If
    Call Odbc_RecupVal("Select hvc_numpere from hierarvalchp where hvc_num=" & EntiteNum, EntiteNumPere)
Debug.Print EntiteNum & " " & EntiteNumPere
    If EntiteNumPere = "0" Then
        FaitEntiteHierNiveauSH = NiveauSH
        Exit Function
    Else
        NiveauSH = FaitEntiteHierNiveauSH(EntiteNumPere, NiveauSH + 1)
    End If
    FaitEntiteHierNiveauSH = NiveauSH
End Function

Private Function MajEntiteNiveau(ByVal EntiteNumPere, ByRef niveau As Integer)
    Dim iEntite As Integer
    
    For iEntite = UBound(P_tb_Entite) To 1 Step -1
        If P_tb_Entite(iEntite).EntNumPere = EntiteNumPere Then
            If P_tb_Entite(iEntite).NumEntite <> -1 Then
                P_tb_Entite(iEntite).niveau = niveau
                Call MajEntiteNiveau(P_tb_Entite(iEntite).NumEntite, niveau + 1)
            End If
            'Exit Function
        End If
    Next iEntite
End Function

Private Function MajEntitePere(ByVal bFaireCumul As Boolean, ByRef New_UBP_tb_Entite As Integer, ChpNomEntite As String, ByVal Entite_ForecType As String, ByVal DonUneVal As String, ByVal tbUnChp As Variant, ByVal iChpNum As Long)

    Dim dejaEntite As Boolean, iEntite As Integer
    Dim UBP_tb_Entite As Integer
    Dim EntiteNum As Integer, EntiteNumPere As Integer, EntiteLib As String
    Dim EntiteNiveauSH As String

    Dim DonNum As String, DonType As String
    
    ' l'entité en cours est dans P_tb_Une_Entite(0) => Alimenter ses pères
    
    EntiteNumPere = P_tb_Une_Entite(0).EntNumPere
    If EntiteNumPere = 0 Then
        Exit Function
    End If
LabEncore:
    dejaEntite = False
    UBP_tb_Entite = UBound(P_tb_Entite)
    For iEntite = 1 To UBP_tb_Entite
        If EntiteNumPere = P_tb_Entite(iEntite).NumEntite Then
            dejaEntite = True
            Exit For
        End If
    Next iEntite
    
    If dejaEntite Then  ' on cumule
        'If iEntite = 2 Then
        '    MsgBox "ici " & P_tb_Entite(iEntite).nombre
        'End If
        P_tb_Entite(iEntite).nombre = P_tb_Entite(iEntite).nombre + 1
        'P_tb_Entite(0).nombre = P_tb_Entite(0).nombre + 1   ' nombre total
        'Debug.Print "Pere " & P_tb_Entite(iEntite).LibEntite & " P=" & EntiteNumPere & " niv=" & EntiteNiveauSH & " " & P_tb_Entite(UBP_tb_Entite).niveau & " nb=" & P_tb_Entite(iEntite).nombre
    Else
        UBP_tb_Entite = UBP_tb_Entite + 1
        ReDim Preserve P_tb_Entite(UBP_tb_Entite)
        P_tb_Entite(UBP_tb_Entite).NumEntite = EntiteNumPere
        EntiteNum = P_tb_Entite(UBP_tb_Entite).NumEntite
        
        EntiteNiveauSH = ""
        If Entite_ForecType = "HIERARCHIE" Then
            If Odbc_RecupVal("Select hvc_nom, hvc_numpere from hierarvalchp where hvc_num=" & EntiteNumPere, EntiteLib, EntiteNumPere) = P_ERREUR Then
Debug.Print EntiteNumPere
                EntiteNumPere = 0
            End If
            EntiteNiveauSH = FaitEntiteHierNiveauSH(EntiteNum, 1)
        ElseIf Entite_ForecType = "NUMSERVICE" Then
            If Odbc_RecupVal("Select srv_nom, srv_numpere, srv_nivsnum from service where srv_num=" & EntiteNumPere, EntiteLib, EntiteNumPere, EntiteNiveauSH) = P_ERREUR Then
                EntiteNumPere = 0
            End If
        End If
        'Debug.Print EntiteLib & " " & EntiteNumPere & " " & EntiteNiveauSH & " " & P_tb_Entite(UBP_tb_Entite).niveau
        P_tb_Entite(UBP_tb_Entite).LibEntite = EntiteLib
        P_tb_Entite(UBP_tb_Entite).EntNumPere = EntiteNumPere
        P_tb_Entite(UBP_tb_Entite).est_donnée = False
        P_tb_Entite(UBP_tb_Entite).NiveauSH = EntiteNiveauSH
        P_tb_Entite(UBP_tb_Entite).nombre = 1
        'Debug.Print "Pere " & P_tb_Entite(iEntite).LibEntite & " P=" & EntiteNumPere & " niv=" & EntiteNiveauSH & " " & P_tb_Entite(UBP_tb_Entite).niveau & " nb=" & P_tb_Entite(iEntite).nombre
        'P_tb_Entite(0).nombre = P_tb_Entite(0).nombre + 1   ' nombre total
        New_UBP_tb_Entite = UBP_tb_Entite
        iEntite = UBP_tb_Entite
    End If

    'Debug.Print "   MajEntitePere iEntite=" & iEntite & " Ent=" & P_tb_Entite(iEntite).NumEntite & " Père=" & P_tb_Entite(iEntite).EntNumPere & " nb=" & P_tb_Entite(iEntite).nombre

    Call MettreValE(bFaireCumul, ChpNomEntite, Entite_ForecType, DonUneVal, tbUnChp, iEntite, False, iChpNum)
    If dejaEntite Then  ' on cumule
        MajEntitePere = iEntite
    Else
        MajEntitePere = New_UBP_tb_Entite
    End If
    'EntiteNumPere = P_tb_Entite(MajEntitePere).EntNumPere
    'If EntiteNumPere > 0 Then
    '    GoTo LabEncore
    'End If
End Function


Private Function FaitNiveauTotalE()
    Dim UBP_tb_Entite As Integer
    
    UBP_tb_Entite = 0
    ReDim Preserve P_tb_Entite(UBP_tb_Entite)
    P_tb_Entite(UBP_tb_Entite).NumEntite = 0
    P_tb_Entite(UBP_tb_Entite).LibEntite = "Total"
    P_tb_Entite(UBP_tb_Entite).nombre = 0
    P_tb_Entite(UBP_tb_Entite).EntNumPere = -1
    P_tb_Entite(UBP_tb_Entite).niveau = -1
    
End Function

Private Function MettreValE(ByVal bFaireCumul As Boolean, ByVal EntiteNom As String, ByVal EntiteType As String, ByVal valeur, ByVal tbChp As Variant, ByVal idxVal As Integer, ByVal MettreSQL As Boolean, ByVal iChpNum As Long)
    Dim i As Integer, j As Integer
    Dim UBtbVal As Integer
    Dim obj_numpere As Integer
    Dim dejaVal As Boolean
    Dim deja As Boolean
    Dim nv As Integer
    Dim sql As String
    Dim UB_Val As Integer
    Dim uneVal As String
    Dim nomChp As String
    Dim typchp As String
    Dim leSep1 As String, leSep2 As String
    Dim DonType As String
    Dim DonNum As String
    Dim DonNom As String
    Dim Cnd As String
    Dim CndDon As String, CndEntite As String
    
    If valeur = "" Then
        Exit Function
    End If
    UBtbVal = -1
    On Error GoTo Erreur1
    UBtbVal = UBound(P_tb_Entite(idxVal).valeurs)
    GoTo Suite1
Erreur1:
    On Error GoTo 0
Suite1:
    DonNom = tbChp(1)
    DonType = tbChp(2)
    DonNum = tbChp(3)
    If DonType = "HIERARCHIE" Then
        leSep1 = "|"
        leSep2 = ";"
    ElseIf DonType = "NUMSERVICE" Then
        leSep1 = "|"
        leSep2 = ";"
    Else
        leSep1 = ";"
        leSep2 = ";"
    End If
    For nv = 0 To STR_GetNbchamp(valeur, leSep1)
        uneVal = STR_GetChamp(valeur, leSep1, nv)
        If uneVal <> "" Then
            uneVal = Replace(uneVal, "V", "")
            dejaVal = False
            If UBtbVal >= 0 Then
                For i = 0 To UBtbVal
                    If P_tb_Entite(idxVal).valeurs(i).valeur = uneVal Then
                        dejaVal = True
                        Exit For
                    End If
                Next i
            End If
            If dejaVal Then
                P_tb_Entite(idxVal).valeurs(i).nb = P_tb_Entite(idxVal).valeurs(i).nb + 1
            Else
                UBtbVal = UBtbVal + 1
                P_bool_tb_Entite_ya_valeurs = True
                ReDim Preserve P_tb_Entite(idxVal).valeurs(UBtbVal)
                P_tb_Entite(idxVal).valeurs(UBtbVal).valeur = uneVal
                P_tb_Entite(idxVal).valeurs(UBtbVal).nb = 1
                P_tb_Entite(idxVal).valeurs(UBtbVal).numchp = DonNum
                P_tb_Entite(idxVal).valeurs(UBtbVal).typchp = DonType
                i = UBtbVal
                If MettreSQL Then
                    If EntiteType = "HIERARCHIE" Then
                        CndEntite = EntiteNom & " like '%M" & P_tb_Entite(idxVal).NumEntite & ";%'"
                    ElseIf EntiteType = "NUMSERVICE" Then
                        CndEntite = EntiteNom & " like '%" & P_tb_Entite(idxVal).NumEntite & "#%'"
                    ElseIf EntiteType = "NUMFCT" Then
                        MsgBox "a faire"
                        CndEntite = EntiteNom & " like '%" & P_tb_Entite(idxVal).NumEntite & "#%'"
                    ElseIf DonType = "RADIO" Or DonType = "CHECK" Or DonType = "SELECT" Then
                        CndEntite = EntiteNom & " like '%V" & P_tb_Entite(idxVal).NumEntite & ";%'"
                    End If
                    If DonType = "HIERARCHIE" Then
                        CndDon = DonNom & " like '%M" & uneVal & ";%'"
                    ElseIf DonType = "NUMSERVICE" Then
                        MsgBox "a faire"
                        CndEntite = EntiteNom & " like '" & uneVal & "#%'"
                    ElseIf DonType = "DATE" Then
                        'MsgBox "a faire"
                        CndEntite = EntiteNom & " like '" & uneVal & "#%'"
                    ElseIf DonType = "NUMFCT" Then
                        MsgBox "a faire"
                        CndEntite = EntiteNom & " like '" & uneVal & "#%'"
                    ElseIf DonType = "RADIO" Or DonType = "CHECK" Or DonType = "SELECT" Then
                        CndDon = DonNom & " like '%V" & uneVal & ";%'"
                    End If
                    sql = sql & IIf(sql = "", "", " or ")
                    If Mid(uneVal, 1, 4) = "<NR>" Then
                        CndDon = "(" & DonNom & "='' Or " & DonNom & " IS NULL)"
                    End If
                    sql = "(" & CndEntite & " And " & CndDon & ")"
                    P_tb_Entite(idxVal).valeurs(UBtbVal).PourSQL = sql
                    P_tb_Entite(idxVal).valeurs(UBtbVal).NumFiltre = tbl_fichExcel(iChpNum).CmdFormNum
                End If
            End If
            'Debug.Print "   MettreValE " & P_tb_Entite(idxVal).NumEntite & " don=" & uneVal & " idxvaleurs=" & UBtbVal & " nb=" & P_tb_Entite(idxVal).valeurs(I).nb
        End If
    Next nv
End Function

Private Function TotalTBValeur(ByVal valeur, numchp As Integer, ByVal le_forectype)
    Dim i As Integer
    Dim UBtbVal As Integer, UB_Val As Integer
    Dim deja As Boolean
    Dim uneVal As String
    Dim nv As Integer
    Dim j As Integer
    Dim UneS As String
    Dim leSep1 As String, leSep2 As String
    
    If le_forectype = "HIERARCHIE" Then
        leSep1 = "|"
        leSep2 = ";"
    ElseIf le_forectype = "NUMSERVICE" Then
        leSep1 = ";"
        leSep2 = ";"
    Else
        leSep1 = ";"
        leSep2 = ";"
    End If
    For nv = 0 To STR_GetNbchamp(valeur, leSep1)
        uneVal = STR_GetChamp(valeur, leSep1, nv)
        UneS = uneVal
'        If valeur = "" Then
'            uneVal = "<NR>"
'        End If
'        For j = STR_GetNbchamp(uneVal, leSep2) To 0 Step -1
'            uneS = STR_GetChamp(uneVal, leSep2, j)
            'If uneS <> "" Then
                If UneS <> "" Then
                    UneS = Replace(UneS, "V", "")
                    ' pour le tableau général des valeurs
                    UB_Val = -1
                    If P_bool_tbColonnes Then
                        UB_Val = UBound(P_total_colonnes)
                    Else
                        GoTo suite
                    End If
                    deja = False
                    For i = 0 To UB_Val
                        If P_total_colonnes(i).valeur = UneS Then
                            deja = True
                            UB_Val = i
                            Exit For
                        End If
                    Next i
                    If Not deja Then
suite:
                        UB_Val = UB_Val + 1
                        ReDim Preserve P_total_colonnes(UB_Val)
                        If Mid(UneS, 1, 4) <> "<NR>" Then
                            P_total_colonnes(UB_Val).lib = ChercherLib(numchp, UneS, le_forectype)
                        End If
                        P_total_colonnes(UB_Val).niveau = j + 1
                        P_total_colonnes(UB_Val).valeur = UneS
                        P_total_colonnes(UB_Val).valtot = Replace(uneVal, "V", "")
                        P_total_colonnes(UB_Val).nbtot = 1
                        P_total_colonnes(UB_Val).chpnum = numchp
                        P_bool_tbColonnes = True
                    Else
                        P_total_colonnes(UB_Val).nbtot = P_total_colonnes(UB_Val).nbtot + 1
                    End If
                    'Debug.Print "   TotalColonne idx=" & UB_Val & " " & P_total_colonnes(UB_Val).Valeur & "=>nbtot=" & P_total_colonnes(UB_Val).nbtot
                    '**************************
                End If
'            End If
'        Next j
'        If valeur = "" Then Exit For
'        If le_forectype = "RADIO" Or le_forectype = "SELECT" Then Exit For
    Next nv
End Function

Private Function MettreValHOLD(ByVal objnum, ByVal valeur, ByVal numchp, ByVal idxVal As Integer, ByVal le_forectype)
    Dim i As Integer, j As Integer
    Dim UBtbVal As Integer
    Dim obj_numpere As Integer
    Dim dejaVal As Boolean
    Dim deja As Boolean
    Dim nv As Integer
    Dim UB_Val As Integer
    Dim uneVal As String
    
    UBtbVal = -1
    On Error GoTo Erreur1
    UBtbVal = UBound(P_tb_hierar(idxVal).valeurs)
    GoTo Suite1
Erreur1:
    On Error GoTo 0
Suite1:
    For nv = 0 To STR_GetNbchamp(valeur, ";")
        uneVal = STR_GetChamp(valeur, ";", nv)
        If uneVal <> "" Then
            '**************************
            ' Faire pareil pour les autres champs
            dejaVal = False
            If UBtbVal >= 0 Then
                For i = 0 To UBtbVal
                    If P_tb_hierar(idxVal).valeurs(i).valeur = uneVal Then
                        dejaVal = True
                        Exit For
                    End If
                Next i
            End If
            If dejaVal Then
                P_tb_hierar(idxVal).valeurs(i).nb = P_tb_hierar(idxVal).valeurs(i).nb + 1
            Else
                UBtbVal = UBtbVal + 1
                ReDim Preserve P_tb_hierar(idxVal).valeurs(UBtbVal)
                P_tb_hierar(idxVal).valeurs(UBtbVal).valeur = uneVal
                P_tb_hierar(idxVal).valeurs(UBtbVal).nb = P_tb_hierar(idxVal).valeurs(UBtbVal).nb + 1
                
                ' pour le tableau général des valeurs
                UB_Val = -1
                If P_bool_tbColonnes Then
                    UB_Val = UBound(P_total_colonnes)
                Else
                    GoTo Suite2
                End If
                dejaVal = False
                For i = 0 To UB_Val
                    If P_total_colonnes(i).valeur = uneVal Then
                        dejaVal = True
                        Exit For
                    End If
                Next i
                If Not dejaVal Then
Suite2:
                    UB_Val = UB_Val + 1
                    ReDim Preserve P_total_colonnes(UB_Val)
                    P_total_colonnes(UB_Val).lib = ChercherLib(numchp, uneVal, le_forectype)
                    P_total_colonnes(UB_Val).valeur = uneVal
                    P_bool_tbColonnes = True
                End If
            End If
            '**************************
        End If
    Next nv
End Function

Private Function ChercherLib(ByVal numchp, ByVal uneVal, ByVal le_forectype)
    Dim VC_lib As String, VC_libcourt As String
    Dim cle As String
    
    If le_forectype = "HIERARCHIE" Then
        If Odbc_RecupVal("select hvc_nom from hierarvalchp where hvc_num =" & Replace(uneVal, "M", ""), VC_lib) = P_ERREUR Then
            ChercherLib = ""
            Exit Function
        End If
        ChercherLib = VC_lib
    ElseIf le_forectype = "DATE" Then
        ChercherLib = uneVal
        Exit Function
    ElseIf le_forectype = "NUMSERVICE" Then
        If InStr(uneVal, "#") > 0 Then
            cle = STR_GetChamp(uneVal, "#", 0)
        Else
            ChercherLib = uneVal
            Exit Function
        End If
        If Odbc_RecupVal("select srv_nom,srv_libcourt from service where srv_num =" & cle, VC_lib, VC_libcourt) = P_ERREUR Then
            ChercherLib = ""
            Exit Function
        End If
        ChercherLib = IIf(VC_libcourt <> "", VC_libcourt, VC_lib)
    Else
        If Odbc_RecupVal("select vc_lib, vc_libcourt from valchp where vc_num =" & Replace(uneVal, "V", ""), VC_lib, VC_libcourt) = P_ERREUR Then
            ChercherLib = ""
            Exit Function
        End If
        If VC_libcourt <> "" Then
            ChercherLib = VC_libcourt
        Else
            ChercherLib = VC_lib
        End If
    End If
End Function

Private Function RsClose(v_rs As rdoResultset)
    On Error Resume Next
    v_rs.Close
    On Error GoTo 0
End Function

Private Function NomTableDonnees(ByVal v_numfor_du_chp)
    Dim sql As String, rs As rdoResultset

End Function

Private Function VoirSensDdon_Asc_Desc(ByVal v_FormNums, ByVal v_numfor_du_chp, ByRef r_cnd_jointure As String, ByRef r_table_jointure As String, v_coord As String)
    ' voir dans ddon si c'est un sens DESC ou ASC
    Dim sql As String, rs As rdoResultset
    Dim lnb As Long
    Dim ForNum As Integer
    Dim s As String
    Dim numfor1 As String, numfor2 As String
    
    numfor1 = val(STR_GetChamp(v_FormNums, "*", 1))
    numfor2 = val(STR_GetChamp(v_FormNums, "*", 2))
    s = STR_GetChamp(v_FormNums, "*", 0)
    
    VoirSensDdon_Asc_Desc = ""
    If s = "N" Then
        If numfor1 = v_numfor_du_chp Then
            r_cnd_jointure = " and true "
            r_table_jointure = ""
        Else
            r_cnd_jointure = " and true "
            r_table_jointure = ""
            MsgBox "incohérence dans VoirSensDdon_Asc_Desc v_FormNums=" & v_FormNums & " et v_numfor_du_chp=" & v_numfor_du_chp & " en " & v_coord
        End If
    Else
        r_table_jointure = ", Ddon, Donnees_" & numfor2
        ' Sens Desc
        r_cnd_jointure = "(ddon.ddon_fornum_p = " & numfor1 & " And donnees_" & numfor1 & ".don_num = ddon.ddon_donnum_p"
        r_cnd_jointure = r_cnd_jointure & " And ddon.ddon_fornum_f = " & numfor2 & " And ddon.ddon_donnum_f = donnees_" & numfor2 & ".don_num)"
        ' Sens Asc
        'r_cnd_jointure = r_cnd_jointure & " OR "
        r_cnd_jointure = r_cnd_jointure & "|"
        r_cnd_jointure = r_cnd_jointure & "(ddon.ddon_fornum_p = " & numfor2 & " And donnees_" & numfor2 & ".don_num = ddon.ddon_donnum_p"
        r_cnd_jointure = r_cnd_jointure & " And ddon.ddon_fornum_f = " & numfor1 & " And ddon.ddon_donnum_f = donnees_" & numfor1 & ".don_num)"
        
        'r_cnd_jointure = " and (" & r_cnd_jointure & ") "
        
        'Debug.Print r_table_jointure
        'Debug.Print r_cnd_jointure
        Exit Function
        
        ' Ancienne mouture
        VoirSensDdon_Asc_Desc = "?"
        ' FF*80*90 = le 80 est père du 90 (on est sur le pere)
        ' FP*90*80 = le 80 est père du 90 (on est sur le fils)
        If s = "FF" Then
            ' Sens Desc
            r_table_jointure = ", Ddon, Donnees_" & numfor2
            r_cnd_jointure = " Ddon.ddon_fornum_p = " & numfor1 & " And Donnees_" & numfor1 & ".don_num = Ddon.ddon_donnum_p"
            r_cnd_jointure = r_cnd_jointure & " And Ddon.ddon_fornum_f = " & numfor2 & " And Ddon.ddon_donnum_f = Donnees_" & numfor2 & ".don_num"
            VoirSensDdon_Asc_Desc = "Desc"
        ElseIf s = "FP" Then
            r_table_jointure = ", Ddon, Donnees_" & numfor1
            r_cnd_jointure = " Ddon.ddon_fornum_f = " & numfor1 & " And Donnees_" & numfor1 & ".don_num = Ddon.ddon_donnum_f"
            r_cnd_jointure = r_cnd_jointure & " And Ddon.ddon_fornum_p = " & numfor2 & " And Ddon.ddon_donnum_p = Donnees_" & numfor2 & ".don_num"
            VoirSensDdon_Asc_Desc = "Asc"
        Else
            r_cnd_jointure = " and true "
            r_table_jointure = ""
            MsgBox "incohérence dans VoirSensDdon_Asc_Desc v_FormNums=" & v_FormNums & " et v_numfor_du_chp=" & v_numfor_du_chp
        End If
        r_cnd_jointure = " and (" & r_cnd_jointure & ") "
        'Debug.Print r_table_jointure
        'Debug.Print r_cnd_jointure
    End If
End Function

Private Function NewVoirSensDdon_Asc_Desc(ByVal v_FormNums, ByVal v_numfor_du_chp, ByRef r_cnd_jointure As String, ByRef r_table_jointure As String, v_coord As String)
    ' voir dans ddon si c'est un sens DESC ou ASC
    Dim sql As String, rs As rdoResultset
    Dim lnb As Long
    Dim ForNum As Integer
    Dim s As String
    Dim numfor1 As String, numfor2 As String
    
    numfor1 = val(STR_GetChamp(v_FormNums, "*", 1))
    numfor2 = val(STR_GetChamp(v_FormNums, "*", 2))
    s = STR_GetChamp(v_FormNums, "*", 0)
    
    NewVoirSensDdon_Asc_Desc = ""
    If s = "N" Then
        If numfor1 = v_numfor_du_chp Then
            r_cnd_jointure = " and true "
            r_table_jointure = ""
        Else
            r_cnd_jointure = " and true "
            r_table_jointure = ""
            MsgBox "incohérence dans VoirSensDdon_Asc_Desc v_FormNums=" & v_FormNums & " et v_numfor_du_chp=" & v_numfor_du_chp & " en " & v_coord
        End If
    Else
        r_table_jointure = ", ddon, Donnees_" & numfor2
        ' Sens Desc
        r_cnd_jointure = "(ddon.ddon_fornum_p = " & numfor1 & " And donnees_" & numfor1 & ".don_num = ddon.ddon_donnum_p"
        r_cnd_jointure = r_cnd_jointure & " And ddon.ddon_fornum_f = " & numfor2 & " And ddon.ddon_donnum_f = donnees_" & numfor2 & ".don_num)"
        ' Sens Asc
        'r_cnd_jointure = r_cnd_jointure & " OR "
        r_cnd_jointure = r_cnd_jointure & "|"
        r_cnd_jointure = r_cnd_jointure & "(ddon.ddon_fornum_p = " & numfor2 & " And donnees_" & numfor2 & ".don_num = ddon.ddon_donnum_p"
        r_cnd_jointure = r_cnd_jointure & " And ddon.ddon_fornum_f = " & numfor1 & " And ddon.ddon_donnum_f = donnees_" & numfor1 & ".don_num)"
        
        'r_cnd_jointure = " and (" & r_cnd_jointure & ") "
        
        'Debug.Print r_table_jointure
        'Debug.Print r_cnd_jointure
        Exit Function
        
        ' Ancienne mouture
        NewVoirSensDdon_Asc_Desc = "?"
        ' FF*80*90 = le 80 est père du 90 (on est sur le pere)
        ' FP*90*80 = le 80 est père du 90 (on est sur le fils)
        If s = "FF" Then
            ' Sens Desc
            r_table_jointure = ", Ddon, Donnees_" & numfor2
            r_cnd_jointure = " Ddon.ddon_fornum_p = " & numfor1 & " And Donnees_" & numfor1 & ".don_num = Ddon.ddon_donnum_p"
            r_cnd_jointure = r_cnd_jointure & " And Ddon.ddon_fornum_f = " & numfor2 & " And Ddon.ddon_donnum_f = Donnees_" & numfor2 & ".don_num"
            NewVoirSensDdon_Asc_Desc = "Desc"
        ElseIf s = "FP" Then
            r_table_jointure = ", Ddon, Donnees_" & numfor1
            r_cnd_jointure = " Ddon.ddon_fornum_f = " & numfor1 & " And Donnees_" & numfor1 & ".don_num = Ddon.ddon_donnum_f"
            r_cnd_jointure = r_cnd_jointure & " And Ddon.ddon_fornum_p = " & numfor2 & " And Ddon.ddon_donnum_p = Donnees_" & numfor2 & ".don_num"
            NewVoirSensDdon_Asc_Desc = "Asc"
        Else
            r_cnd_jointure = " and true "
            r_table_jointure = ""
            MsgBox "incohérence dans VoirSensDdon_Asc_Desc v_FormNums=" & v_FormNums & " et v_numfor_du_chp=" & v_numfor_du_chp
        End If
        r_cnd_jointure = " and (" & r_cnd_jointure & ") "
        'Debug.Print r_table_jointure
        'Debug.Print r_cnd_jointure
    End If
End Function
Private Function ServiceChercherFilsOLD(ByVal v_Trait, ByVal v_num, ByRef v_scond, ByRef MenF, ByRef r_niveau As Integer)
    Dim sql As String, rs As rdoResultset
    Dim sCond As String
    Dim LOP As String
    Dim i As Integer
    Dim s As String
    
    If v_Trait = "COUNTFILS" Then
        'sql = "select count(*) from service where srv_numpere=" & v_num
        Call Odbc_SelectV(sql, rs)
        ServiceChercherFilsOLD = rs(0).Value
        Exit Function
    End If
    If v_Trait = "S" Then
        If v_scond = "" Then
            'If v_num > 0 Then
            '    MenF = MenF & "=" & r_niveau
            '    'v_scond = " Where srv_num=" & v_num
            'Else
            '    v_scond = " Where "
            'End If
            
            For i = 0 To STR_GetNbchamp(MenF, "|")
                s = STR_GetChamp(MenF, "|", i)
                If s <> "" Then
                    ' v_scond = ServiceChercherFils(v_Trait, v_num, v_scond, s, r_niveau + 1)
                End If
            Next i
        Else
            sql = "select * from service where srv_numpere=" & v_num
            If Odbc_SelectV(sql, rs) = P_ERREUR Then
            Else
                While Not rs.EOF
                    If v_scond = " Where " Then
                        LOP = ""
                    Else
                        LOP = "Or"
                    End If
                    v_scond = v_scond & " " & LOP & " srv_num=" & rs("srv_num")
                    MenF = MenF & ";S" & rs("srv_num") & "=" & r_niveau
                    'v_scond = ServiceChercherFils(v_Trait, rs("srv_num"), v_scond, MenF, r_niveau + 1)
                    rs.MoveNext
                Wend
            End If
        End If
    End If
    ServiceChercherFilsOLD = v_scond
End Function

Public Function FctVoirSiPeutMettre(v_MenFLigCol, v_LeYMax, v_leY, v_LaRowMax, v_LeXMax, v_lex, v_LaColMax)

    FctVoirSiPeutMettre = False
    If Mid(v_MenFLigCol, 1, 7) = "Colonne" Then
        If v_LeYMax = 0 And v_leY <= v_LaRowMax Then
            FctVoirSiPeutMettre = True
        ElseIf v_leY < v_LeYMax Then
           FctVoirSiPeutMettre = True
        End If
    ElseIf Mid(v_MenFLigCol, 1, 5) = "Ligne" Then
        If v_LeXMax = 0 And v_lex <= v_LaColMax Then
            FctVoirSiPeutMettre = True
        ElseIf v_lex < v_LeXMax Then
           FctVoirSiPeutMettre = True
        End If
    End If
End Function


Public Function FaitCndOperateur(ByVal v_ChpNom, ByVal v_boolDistinct As Boolean, ByVal v_MenFType, ByVal r_lib, ByRef r_Cnd_OperSql, ByRef r_OperSql) As Boolean
                        
    FaitCndOperateur = True
    If v_boolDistinct Then
        r_Cnd_OperSql = ""
        If v_MenFType = "DATE" Then
            r_OperSql = "upper(" & v_ChpNom & ")"
        ElseIf v_MenFType = "DISTINCT" Then
            r_OperSql = "DISTINCT(upper(" & v_ChpNom & "))"
        ElseIf v_MenFType = "POURCENT" Then
            MsgBox "???"
            r_lib = r_lib & " (% "
            r_Cnd_OperSql = ""
            r_OperSql = "DISTINCT(upper(" & v_ChpNom & "))"
        ElseIf v_MenFType = "NOMBRE" Then
            r_Cnd_OperSql = ""
            r_OperSql = "COUNT(*)"
        ElseIf v_MenFType = "VALEUR" Then
            r_Cnd_OperSql = ""
            r_OperSql = "DISTINCT(upper(" & v_ChpNom & "))"
        ElseIf v_MenFType = "SOMME" Then
            r_Cnd_OperSql = r_lib
            r_lib = r_lib & " (Somme "
            r_OperSql = "SUM(CAST(" & v_ChpNom & " AS FLOAT))"
        ElseIf v_MenFType = "MOYENNE" Then
            r_lib = r_lib & ""
            r_Cnd_OperSql = ""
            r_OperSql = "DISTINCT(upper(" & v_ChpNom & "))"
        ElseIf v_MenFType = "ECART_TYPE" Then
            r_lib = r_lib & ""
            r_Cnd_OperSql = ""
            r_OperSql = "VARIANCE(CAST(" & v_ChpNom & " AS FLOAT))"
        ElseIf v_MenFType = "*" Then
            r_lib = r_lib & ""
            r_Cnd_OperSql = ""
            r_OperSql = "*"
        ElseIf Mid(v_MenFType, 1, 6) = "ENTIER" Then
           If Mid(v_MenFType, 8) = "VALEUR" Then
                r_lib = r_lib & " (Répartition "
                r_Cnd_OperSql = ""
                'r_OperSql = v_ChpNom & ", DISTINCT(CAST(" & v_ChpNom & " AS INTEGER))"
                r_OperSql = " DISTINCT(CAST(" & v_ChpNom & " AS FLOAT))"
            ElseIf Mid(v_MenFType, 8) = "NONVALEUR_R" Then
                r_lib = r_lib & " (Répartition "
                r_Cnd_OperSql = ""
                r_OperSql = " DISTINCT(CAST(" & v_ChpNom & " AS FLOAT))"
            ElseIf Mid(v_MenFType, 8) = "NOMBRE_TOTAL" Then
                r_lib = r_lib & " (Nombre Total "
                r_Cnd_OperSql = ""
                r_OperSql = "COUNT(*)"
            Else
                MsgBox "FaitCndOperateur : à gérer MenFtype=" & v_MenFType
                FaitCndOperateur = False
            End If
        Else
            MsgBox "a gérer MenFtype=" & v_MenFType
            FaitCndOperateur = False
        End If
    Else
        If v_MenFType = "POURCENT" Then
            r_lib = r_lib & " (% "
            r_Cnd_OperSql = ""
            r_OperSql = "COUNT(*)"
        ElseIf v_MenFType = "NOMBRE" Then
            r_Cnd_OperSql = ""
            r_OperSql = "COUNT(*)"
        ElseIf v_MenFType = "VALEUR" Then
            r_Cnd_OperSql = ""
            r_OperSql = "COUNT(*)"
        ElseIf v_MenFType = "SOMME" Then
            r_lib = r_lib & " (Somme "
            r_Cnd_OperSql = " And (" & v_ChpNom & " != '')"
            r_OperSql = "SUM(CAST(" & v_ChpNom & " AS FLOAT))"
        ElseIf v_MenFType = "MOYENNE" Then
            r_lib = r_lib & ""
            r_Cnd_OperSql = " And (" & v_ChpNom & " != '')"
            r_OperSql = "AVG(CAST(" & v_ChpNom & " AS FLOAT))"
        ElseIf v_MenFType = "ECART_TYPE" Then
            r_lib = r_lib & ""
            r_Cnd_OperSql = ""
            r_OperSql = "VARIANCE(CAST(" & v_ChpNom & " AS FLOAT))"
        ElseIf v_MenFType = "*" Then
            r_lib = r_lib & ""
            r_Cnd_OperSql = ""
            r_OperSql = "*"
        ElseIf Mid(v_MenFType, 1, 6) = "ENTIER" Then
            If Mid(v_MenFType, 8) = "VALEUR" Then
                r_lib = r_lib & " (Répartition "
                r_Cnd_OperSql = ""
                'r_OperSql = v_ChpNom & ", DISTINCT(CAST(" & v_ChpNom & " AS INTEGER))"
                r_OperSql = " DISTINCT(CAST(" & v_ChpNom & " AS FLOAT))"
            ElseIf Mid(v_MenFType, 8) = "NONVALEUR_R" Then
                r_lib = r_lib & " (Répartition "
                r_Cnd_OperSql = ""
                r_OperSql = " DISTINCT(CAST(" & v_ChpNom & " AS FLOAT))"
            ElseIf Mid(v_MenFType, 8) = "NOMBRE_TOTAL" Then
                r_lib = r_lib & " (Nombre Total "
                r_Cnd_OperSql = ""
                r_OperSql = "COUNT(*)"
            Else
                MsgBox "FaitCndOperateur : à gérer MenFtype=" & v_MenFType
                FaitCndOperateur = False
            End If
        Else
            MsgBox "a gérer MenFtype=" & v_MenFType
            FaitCndOperateur = False
        End If
    End If
End Function

Public Function Fct_Transforme(v_numchp As Integer, v_rsResult As rdoResultset)
    Dim sql As String, rs As rdoResultset
    Dim n As Integer
    Dim s As String
    Dim op As String, TitreChp As String, ChpNom As String, ChpType As String, ValChp As String, fctvalid As String
    Dim rstmp As rdoResultset
    Dim lig As Integer
    Dim strNom As String
    Dim nomChp As String
    Dim laVal As String
    Dim StrRet As String
    Dim numfor As Integer
    
    If Odbc_RecupVal("select forec_fornum, forec_label,forec_nom,forec_type,forec_valeurs_possibles, forec_fctvalid from formetapechp where forec_num=" & v_numchp, _
                     numfor, TitreChp, ChpNom, ChpType, ValChp, fctvalid) = P_ERREUR Then
        Fct_Transforme = "Fct_Transforme ???"
        Exit Function
    End If
    
    laVal = v_rsResult("D_" & numfor & "_" & ChpNom).Value & ""
    
    If laVal <> "" Then
        If ChpType = "CHECK" Or ChpType = "RADIO" Or ChpType = "SELECT" Then
            op = ""
            For n = 0 To STR_GetNbchamp(laVal, ";")
                s = STR_GetChamp(laVal, ";", n)
                s = Replace(s, "V", "")
                If s <> "" Then
                    sql = "select * from valchp where vc_num=" & s
                    If Odbc_SelectV(sql, rstmp) = P_ERREUR Then
                        MsgBox "Erreur " & sql
                    Else
                        If rstmp.EOF Then
                            StrRet = StrRet & op & "??? " & s
                        Else
                            StrRet = StrRet & op & rstmp("vc_lib")
                        End If
                        op = " et "
                    End If
                End If
            Next n
        ElseIf fctvalid = "%NUMSERVICE" Or fctvalid = "%NUMUTIL" Or fctvalid = "%NUMFCT" Or fctvalid = "%LISTUTIL" Then
            If fctvalid = "%NUMSERVICE" Then
                If InStr(laVal, "#") > 0 Then
                    n = STR_GetChamp(laVal, "#", 0)
                    If P_RecupSrvNom(n, StrRet) = P_ERREUR Then
                        StrRet = "??? " & n
                    End If
                Else
                    StrRet = laVal
                End If
            ElseIf fctvalid = "%NUMFCT" Then
                If InStr(laVal, "#") > 0 Then
                    n = STR_GetChamp(laVal, "#", 0)
                    If P_RecupNomFonction(n, StrRet) = P_ERREUR Then
                        StrRet = "??? " & n
                    End If
                Else
                    StrRet = laVal
                End If
            ElseIf fctvalid = "%NUMUTIL" Then
                StrRet = RecupNomUtil(laVal)
            ElseIf fctvalid = "%LISTUTIL" Then
                For n = 0 To STR_GetNbchamp(laVal, ";")
                    If STR_GetChamp(laVal, ";", n) <> "" Then
                        StrRet = StrRet & " - " & RecupNomUtilParNum(STR_GetChamp(laVal, ";", n))
                    End If
                Next n
            Else
                StrRet = "???"
            End If
        ElseIf ChpType = "TEXT" Or ChpType = "TEXTAREA" Then
            StrRet = laVal
        ElseIf ChpType = "HIERARCHIE" Then
            StrRet = P_RecupHierar(laVal)
        Else
            StrRet = "Fct_Transforme ???"
        End If
    Else
        StrRet = ""
    End If
    Fct_Transforme = StrRet
End Function

Private Function P_RecupHierar(v_StrHier)
    Dim sql As String, rs As rdoResultset
    Dim op As String
    Dim op2 As String
    Dim sOut As String
    Dim sOutTmp As String
    Dim s As String
    Dim nbDeja As Integer
    Dim s2 As String
    Dim i As Integer, j As Integer
    Dim iAvant As Integer, bDeja As Boolean, sDebut As String
    
    sOut = ""
    op = ""
    For i = 0 To STR_GetNbchamp(v_StrHier, "|")
        s = STR_GetChamp(v_StrHier, "|", i)
        If s <> "" Then
            sDebut = ""
            nbDeja = 0
            sOutTmp = ""
            op2 = ""
            For j = 0 To STR_GetNbchamp(s, ";")
                s2 = STR_GetChamp(s, ";", j)
                If s2 <> "" Then
                    ' voir si pas déjà juste avant
                    sDebut = sDebut & s2 & ";"
                    bDeja = False
                    If i > 0 Then
                        If InStr(STR_GetChamp(v_StrHier, "|", i - 1), sDebut) > 0 Then
                            bDeja = True
                        End If
                    End If
                    If bDeja Then
                        nbDeja = nbDeja + 1
                    Else
                        sql = "Select * from hierarvalchp where hvc_num=" & Replace(STR_GetChamp(s, ";", j), "M", "")
                        If Odbc_SelectV(sql, rs) = P_ERREUR Then
                            sOutTmp = sOutTmp & op2 & "???"
                        Else
                            If rs.EOF Then
                                sOutTmp = sOutTmp & op2 & " ? "
                            Else
                                sOutTmp = sOutTmp & op2 & rs("hvc_nom")
                            End If
                        End If
                    End If
                    If bDeja Then
                        op2 = " + "
                    Else
                        op2 = " - "
                    End If
                End If
            Next j
            If i = 0 Then
                sOut = sOutTmp
            Else
                If nbDeja > 0 Then
                    sOut = sOut & sOutTmp
                Else
                    sOut = sOut & " / " & sOutTmp
                End If
            End If
        End If
    Next i
    P_RecupHierar = sOut
End Function

Private Function RecupNomUtil(v_str)
    Dim sql As String, rs As rdoResultset
    
    If InStr(v_str, "#") = 0 Then
        RecupNomUtil = v_str
    Else
        sql = "select U_Nom, U_Prenom from utilisateur where u_num=" & STR_GetChamp(v_str, "#", 0)
        If Odbc_SelectV(sql, rs) = P_ERREUR Then
            RecupNomUtil = "???" & v_str
        Else
            If rs.EOF Then
                RecupNomUtil = "???" & v_str
            Else
                RecupNomUtil = rs("U_prenom") & " " & rs("U_nom")
            End If
        End If
    End If
End Function

Private Function RecupNomUtilParNum(v_str)
    Dim sql As String, rs As rdoResultset
    
    If InStr(v_str, "U") = 0 Then
        RecupNomUtilParNum = v_str
    Else
        sql = "select U_Nom, U_Prenom from utilisateur where u_num=" & Mid(v_str, 2)
        If Odbc_SelectV(sql, rs) = P_ERREUR Then
            RecupNomUtilParNum = "???" & v_str
        Else
            If rs.EOF Then
                RecupNomUtilParNum = "???" & v_str
            Else
                RecupNomUtilParNum = rs("U_prenom") & " " & rs("U_nom")
            End If
        End If
    End If
End Function

Public Function FaitConditionChamp(ByVal v_condition, ByRef r_CmdCondition, ByRef r_condFrancais)
    
    Dim param1, param2, opSQL, param3, uneVal, nomChp As String
    Dim UneValF As String, OperF As String, sqlF As String
    Dim OperPF As String, nomChpF As String, op As String
    Dim rsSql As String, rs As rdoResultset, rs_nom As rdoResultset
    Dim oper As String, numchp As String, ValChp As String, TypeChp As String
    Dim sql As String, sqltmp As String, sql_nom As String
    Dim nb As Integer, i As Integer, n As Integer, iVal As Integer
    Dim iFct As Integer
    Dim laS As String, lst_nom As String
    Dim opFct As String
    Dim sCond As String
    Dim FaitUneFois As Boolean
    Dim fctvalid As String
    Dim LaCondF As String
    Dim LibOper As String
    Dim BoolLeDetail As Boolean
    Dim d1 As String, d2 As String
    Dim s As String
    Dim Forec_Formule As String
    Dim sServ As String
    Dim s_SQL As String, s_SQLB As String, s_F As String
    Dim LeType As String
    
    'Debug.Print v_condition
    If v_condition <> "" Then
        param1 = STR_GetChamp(v_condition, "¤", 0)
        param2 = STR_GetChamp(v_condition, "¤", 1)
        param3 = STR_GetChamp(v_condition, "¤", 2)
        nomChp = STR_GetChamp(param1, ":", 2)
        numchp = STR_GetChamp(param1, ":", 1)
        oper = STR_GetChamp(param2, ":", 1)
        If param2 = "OP:COMPRIS" Then oper = "COMPRIS"
        'If Oper = "<" Then Oper = "<="
        'If Oper = ">" Then Oper = ">="
        If oper = "SU" Then oper = ">="
        If oper = "IN" Then oper = "<="
        If oper = "EG" Then oper = "="
        If oper = "NE" Then oper = "!="
        LibOper = oper
        If oper = ">=" Then LibOper = "> ou ="
        If oper = "<=" Then LibOper = "< ou ="
        If oper = "!=" Then LibOper = "différent de"
        If oper = "COMPRIS" Then LibOper = "Compris entre"
        TypeChp = ChercheNumChamp("Type", nomChp, numchp, 0)
        fctvalid = ChercheNumChamp("FctValid", nomChp, numchp, 0)
        If TypeChp = "TEXT" Then
            If InStr(fctvalid, "%DATE") > 0 Then
                LeType = "DATE"
            ElseIf InStr(fctvalid, "%NUMSERVICE") > 0 Then
                LeType = "NUMSERVICE"
            ElseIf InStr(fctvalid, "%NUMFCT") > 0 Then
                LeType = "NUMFCT"
            ElseIf InStr(fctvalid, "%MTT") > 0 Then
                LeType = "MTT"
            ElseIf InStr(fctvalid, "%ENTIER") > 0 Or InStr(fctvalid, "%NUM") > 0 Then
                LeType = "ENTIER"
            ElseIf fctvalid = "" Then
                LeType = "TEXTE"
            End If
        ElseIf InStr("SELECT%RADIO%CHECK", TypeChp) > 0 Then
            LeType = Replace(TypeChp, "%", "")
        ElseIf InStr("HIERARCHIE", TypeChp) > 0 Then
            LeType = "HIERARCHIE"
        End If
        If LeType = "" Then
            MsgBox "FaitConditionChamp " & TypeChp & " " & fctvalid & " non prévu"
        End If
        ValChp = STR_GetChamp(param3, ":", 1)
        'ValChp = Replace(param3, "VAL:", "")
        'ValChp = Replace(ValChp, "DATE:", "")
        Forec_Formule = P_RecupereNomChamp(numchp, "formule")
        If TypeChp = "SELECT" Or TypeChp = "RADIO" Or TypeChp = "CHECK" Then
            sql = ""
            sqlF = ""
            nb = STR_GetNbchamp(ValChp, ";")
            sqltmp = ""
            OperF = ""
            OperPF = ""
            FaitUneFois = False
            For i = 0 To nb - 1
                uneVal = STR_GetChamp(ValChp, ";", i)
                'UneValF = STR_GetChamp(ValChp, ";", i)
                If uneVal <> "<NR>" And uneVal <> "<R>" Then
                    uneVal = Replace(uneVal, "V", "")
                    rsSql = "select * from valchp where vc_num=" & uneVal
                    If Odbc_SelectV(rsSql, rs) <> P_ERREUR Then
                        UneValF = "???"
                        If Not rs.EOF Then
                            UneValF = rs("VC_Lib")
                        End If
                    End If
                    rs.Close
                End If
                nomChpF = nomChp
                If oper = "=" Then
                    If uneVal = "<NR>" Then
                        sqltmp = sqltmp & OperPF & " " & nomChp & " = '' or " & nomChp & " is null "
                        sqlF = sqlF & OperF & " " & nomChpF & " non renseigné"
                    ElseIf uneVal = "<R>" Then
                        sqltmp = sqltmp & OperPF & " " & nomChp & " != '' or not " & nomChp & " is null "
                        sqlF = sqlF & OperF & " " & nomChpF & " est renseigné"
                    Else
                        sqltmp = sqltmp & OperPF & " " & nomChp & " like '%V" & uneVal & ";%'"
                        If FaitUneFois Then
                            sqlF = sqlF & OperF & UneValF
                        Else
                            sqlF = sqlF & OperF & " " & nomChpF & " = " & UneValF
                            FaitUneFois = True
                        End If
                    End If
                ElseIf oper = "!" Then
                    If i > 0 Then sqltmp = sqltmp & " And "
                    If uneVal = "<NR>" Then
                        sqltmp = sqltmp & OperPF & " " & nomChp & " != '' or not " & nomChp & " is null "
                        sqlF = sqlF & OperF & " " & nomChpF & " est renseigné"
                    ElseIf uneVal = "<R>" Then
                        sqltmp = sqltmp & OperPF & " " & nomChp & " = '' or " & nomChp & " is null "
                        sqlF = sqlF & OperF & " " & nomChpF & " non renseigné"
                    Else
                        sqltmp = sqltmp & OperPF & " " & nomChp & " not like '%V" & uneVal & ";%'"
                        If FaitUneFois Then
                            sqlF = sqlF & OperF & rs("VC_Lib")
                        Else
                            sqlF = sqlF & OperF & " " & nomChpF & " diff. de " & rs("VC_Lib")
                            FaitUneFois = True
                        End If
                    End If
                End If
                OperF = " Ou "
                OperPF = " Or "
            Next i
            sql = "(" & sqltmp & ")"
        ElseIf TypeChp = "HIERARCHIE" Then
            If oper = "!=" Then oper = "<>"
            BoolLeDetail = False
            BoolLeDetail = IIf(InStr(ValChp, "_DET") > 0, True, False)
            ValChp = Replace(ValChp, "M", "")
            ValChp = Replace(ValChp, "_DET", "")
            ValChp = Replace(ValChp, "_", "")
            If ValChp = "0" Then
                sql = nomChp & " like '' or " & nomChp & " isnull"
                sqlF = P_RecupereNomChamp(numchp, "label") & "<Non renseigné>"
                GoTo Fait
            End If
            n = STR_GetNbchamp(ValChp, ";")
            If Mid(ValChp, Len(ValChp), 1) = ";" Then
                ValChp = Mid(ValChp, 1, Len(ValChp) - 1)
            End If
            op = ""
            s_SQLB = ""
            For iVal = 0 To n - 1
                If oper = "<>" Then
                    If BoolLeDetail Then
                        s_SQLB = s_SQLB & op & nomChp & " NOT like '%M" & STR_GetChamp(ValChp, ";", iVal) & ";%'"
                    Else
                        s_SQLB = s_SQLB & op & nomChp & " NOT like '%M" & STR_GetChamp(ValChp, ";", iVal) & "ù%;'"
                    End If
                    op = " and "
                Else
                    If BoolLeDetail Then
                        s_SQLB = s_SQLB & op & nomChp & " like '%M" & STR_GetChamp(ValChp, ";", iVal) & ";%'"
                    Else
                        s_SQLB = s_SQLB & op & nomChp & " like '%M" & STR_GetChamp(ValChp, ";", iVal) & ";ù%'"
                    End If
                    op = " or "
                End If
            Next iVal
            s_SQL = ""
            s_F = ""
            sCond = ValChp
            If ValChp = "0" Then
                lst_nom = "<Non renseigné>"
            Else
                ' MODIF LN 26/12/13
                sql_nom = "select hvc_nom from hierarvalchp where hvc_num in (" & Replace(ValChp, ";", ",") & ")"
                Call Odbc_SelectV(sql_nom, rs_nom)
                lst_nom = ""
                While Not rs_nom.EOF
                    lst_nom = lst_nom + rs_nom("hvc_nom").Value + " - "
                    rs_nom.MoveNext
                Wend
                rs_nom.Close
            End If
            If oper = "<>" Then
                sqlF = sqlF & OperF & " " & P_RecupereNomChamp(numchp, "label") & " <> " & lst_nom
            Else
                sqlF = sqlF & OperF & " " & P_RecupereNomChamp(numchp, "label") & " = " & lst_nom
            End If
            sql = sql & opSQL & s_SQLB
        ElseIf Forec_Formule <> "" Or fctvalid <> "" Then
            ' MsgBox v_condition
            'If InStr(FctValid, "%DATE") > 0 Then
            '    param3 = Replace(param3, "VAL:", "DATE:")
            'End If
            If LeType = "DATE" Then
                ValChp = Replace(ValChp, "VAL:", "")
                If oper = "!" Then oper = "<>"
                sql = sql & opSQL & "( to_date(" & nomChp & ",'dd/mm/YYYY') " & oper & " '" & Mid(ValChp, 7, 4) & "-" & Mid(ValChp, 4, 2) & "-" & Mid(ValChp, 1, 2) & "')"
                sqlF = P_RecupereNomChamp(numchp, "label") & " " & oper & " " & ValChp
                If oper = "COMPRIS" Then
                    d1 = STR_GetChamp(ValChp, " ", 0)
                    d2 = STR_GetChamp(ValChp, " ", 1)
                    sqlF = P_RecupereNomChamp(numchp, "label") & " " & LibOper & " " & d1 & " et " & d2
                    sql = "to_date(" & nomChp & ",'dd/mm/YYYY') " & " >= " & " '" & Mid(d1, 7, 4) & "-" & Mid(d1, 4, 2) & "-" & Mid(d1, 1, 2) & "'"
                    sql = sql & " And to_date(" & nomChp & ",'dd/mm/YYYY') " & " <= " & " '" & Mid(d2, 7, 4) & "-" & Mid(d2, 4, 2) & "-" & Mid(d2, 1, 2) & "'"
                End If
            Else
                If oper = "!" Then oper = "<>"
                If LeType = "NUMSERVICE" Then
                    BoolLeDetail = False
                    '
                    BoolLeDetail = IIf(InStr(ValChp, "_DET") > 0, True, False)
                    If ValChp = "N0" Then ' Tout le site
                        BoolLeDetail = True
                    End If
                    For i = 0 To STR_GetNbchamp(ValChp, ";")
                        s = STR_GetChamp(ValChp, ";", i)
                        If s <> "" Then
                            s = Replace(s, "S", "")
                            laS = Replace(s, "_DET", "")
                            laS = Replace(laS, "_", "")
                            If laS = "<NR>" Then
                                sql = nomChp & " like '' or " & nomChp & " isnull"
                                sqlF = P_RecupereNomChamp(numchp, "label") & "<Non renseigné>"
                                GoTo Fait
                            End If
                            If ValChp = "N0" Then ' Tout le site
                                s_SQLB = nomChp & " like '%#%'"
                            Else
                                s_SQLB = nomChp & " like '" & laS & "#%'"
                            End If
                            s_SQL = ""
                            s_F = ""
                            sCond = laS & IIf(BoolLeDetail, "_DET", "")
                            LaCondF = P_Transforme(sCond, "", LeType, s_SQLB, s_SQL, s_F, BoolLeDetail)
                            sqlF = IIf(sqlF = "", P_RecupereNomChamp(numchp, "label"), sqlF)
                            sqlF = sqlF & OperF & IIf(BoolLeDetail, " parmi ", "=") & s_F
                            If sCond = "N0_DET" Then
                                sqlF = "Service est renseigné"
                            End If
                            OperF = " Ou "
                            opSQL = " Or "
                            
                            sql = sql & IIf(sql = "", "", opSQL) & s_SQL
                        End If
                    Next i
                    'sqlF = s_F
                ElseIf LeType = "NUMFCT" Then
                    sCond = ValChp
                    opFct = ""
                    s_SQL = ""
                    s_SQLB = ""
                    s_F = ""
                    For iFct = 0 To STR_GetNbchamp(ValChp, ";")
                        If STR_GetChamp(ValChp, ";", iFct) <> "" Then
                            ValChp = Replace(ValChp, "F", "")
                            s_SQLB = s_SQLB & opFct & nomChp & " like '" & STR_GetChamp(ValChp, ";", iFct) & "#%'"
                            opFct = " Or "
                        End If
                    Next iFct
                    LaCondF = P_Transforme(sCond, "", LeType, s_SQLB, s_SQL, s_F, BoolLeDetail)
                    sqlF = P_RecupereNomChamp(numchp, "label") & " = " & s_F

                    sql = sql & opSQL & s_SQL
                ElseIf LeType = "DATE" Then
                    'LaCondF = P_Transforme(sCond, "", FctValid, s_SQLB, s_SQL, s_F, BoolLeDetail)
                    'sqlF = P_RecupereNomChamp(numchp, "label") & " = " & s_F

                    If oper = "COMPRIS" Then
                        sqlF = P_RecupereNomChamp(numchp, "label") & " " & LibOper & " " & ValChp
                        d1 = STR_GetChamp(ValChp, " ", 0)
                        d2 = STR_GetChamp(ValChp, " ", 1)
                        sql = "to_date(" & nomChp & ",'dd/mm/YYYY') " & " >= " & " '" & Mid(d1, 7, 4) & "-" & Mid(d1, 4, 2) & "-" & Mid(d1, 1, 2) & "'"
                        sql = sql & " And to_date(" & nomChp & ",'dd/mm/YYYY') " & " <= " & " '" & Mid(d2, 7, 4) & "-" & Mid(d2, 4, 2) & "-" & Mid(d2, 1, 2) & "'"
                    Else
                        sqlF = P_RecupereNomChamp(numchp, "label") & " " & LibOper & " " & STR_GetChamp(ValChp, " ", 0) & " et " & STR_GetChamp(ValChp, " ", 1)
                        sql = "to_date(" & nomChp & ",'dd/mm/YYYY') " & oper & " '" & Mid(ValChp, 7, 4) & "-" & Mid(ValChp, 4, 2) & "-" & Mid(ValChp, 1, 2) & "'"
                    End If
                ElseIf LeType = "NUM" Then
                    sqlF = P_RecupereNomChamp(numchp, "label") & " " & LibOper & " " & ValChp
                    sql = "CAST(" & nomChp & " AS INTEGER)=" & ValChp
                ElseIf Forec_Formule <> "" Or LeType = "ENTIER" Then
                    sqlF = P_RecupereNomChamp(numchp, "label") & " " & LibOper & " " & ValChp
                    sql = "CAST(" & nomChp & " AS INTEGER)=" & ValChp
                ElseIf LeType = "MTT" Then
                    sqlF = P_RecupereNomChamp(numchp, "label") & " " & LibOper & " " & ValChp
                    sql = "CAST(" & nomChp & " AS DOUBLE)=" & ValChp
                Else
                    MsgBox "Cas non géré"
                    sql = sql & opSQL & "(" & nomChp & " " & oper & " '" & ValChp & "')"
                End If
            End If
        End If
    End If
Fait:
    FaitConditionChamp = sql
    r_condFrancais = sqlF
    r_CmdCondition = sql
End Function

Public Function MenFormeCnd(v_cnd As String)
    Dim nb As Integer
    Dim chp As String, oper As String, valeur As String
    Dim sret As String
    Dim Dvaleur As String
    Dim Gauche As String, Droite As String
    Dim Reste As String
    Dim encore As Boolean
    Dim LeOp As String
    Dim pos As Integer
    
    Reste = v_cnd
    encore = True
    sret = ""
    While encore
        LeOp = ""
        pos = InStr(Reste, "|OP:ET|")
        If pos > 0 Then
            Gauche = Mid(Reste, 1, pos - 1)
            Reste = Mid(Reste, pos + 7)
            LeOp = " [ET] "
        Else
            pos = InStr(Reste, "|OP:OU|")
            If pos > 0 Then
                Gauche = Mid(Reste, 1, pos - 1)
                Reste = Mid(Reste, pos + 7)
                LeOp = " [OR] "
            Else
                Gauche = Reste
                encore = False
            End If
        End If
    
        nb = STR_GetNbchamp(Gauche, "|")
        chp = STR_GetChamp(Gauche, "|", 0)
        If STR_GetNbchamp(chp, ":") = 3 Then
            chp = STR_GetChamp(chp, ":", 2)
        Else
            chp = STR_GetChamp(chp, ":", 1)
        End If
        oper = STR_GetChamp(Gauche, "|", 1)
        valeur = STR_GetChamp(Gauche, "|", 2)
        'Debug.Print chp & " " & Oper & " " & valeur
    
        If InStr(valeur, "VAL:") > 0 Then
            oper = STR_GetChamp(oper, ":", 1)
            valeur = STR_GetChamp(valeur, ":", 1)
            'Debug.Print chp & " " & Oper & " " & valeur
            If oper = "EG" Then
                sret = sret & chp & " like '%V" & valeur & ";%'" & LeOp
            ElseIf oper = "NE" Then
                sret = sret & chp & " not like '%V" & valeur & ";%'" & LeOp
            Else
                MsgBox "Opérateur inconnu : " & oper
            End If
            'Debug.Print sret
        ElseIf InStr(valeur, "DATE:") > 0 Then
            ' (to_date(donnees_15.e1_dater, 'dd/mm/YYYY') >'2005-01-01')
            chp = STR_GetChamp(chp, ":", 1)
            oper = STR_GetChamp(oper, ":", 1)
            valeur = STR_GetChamp(valeur, ":", 1)
            Dvaleur = Mid(valeur, 7, 4) & "-" & Mid(valeur, 4, 2) & "-" & Mid(valeur, 1, 2)
            'Debug.Print chp & " " & Oper & " " & valeur
            oper = Replace(oper, "SU", ">=")
            oper = Replace(oper, "EG", "=")
            oper = Replace(oper, "IN", "<=")
            oper = Replace(oper, "NE", "!=")
            'Debug.Print chp & " " & Oper & " " & valeur
            sret = sret & "(to_date(" & chp & ", 'dd/mm/YYYY') " & oper & " '" & Dvaleur & "')" & LeOp
            'Debug.Print sret
        Else
            '
            chp = STR_GetChamp(chp, ":", 1)
            oper = STR_GetChamp(oper, ":", 1)
            'Debug.Print chp & " " & Oper & " " & valeur
            oper = Replace(oper, "SU", ">=")
            oper = Replace(oper, "EG", "=")
            oper = Replace(oper, "IN", "<=")
            oper = Replace(oper, "NE", "!=")
            'Debug.Print chp & " " & Oper & " '" & valeur & "'"
            sret = sret & chp & " " & oper & " '" & valeur & "'" & LeOp
            'Debug.Print sret
        End If
    Wend
    'MsgBox v_cnd
    sret = Replace(sret, "[ET]", "And")
    sret = Replace(sret, "[OU]", "Or")
    'MsgBox sret
    MenFormeCnd = sret
End Function

Private Sub enregistrer()
    Dim fp As Integer
    Dim i As Integer
    Dim nb As Integer
    Dim NomFichierParam As String
    Dim Ligne As String
    Dim rs As rdoResultset
    Dim strX As String, MenForme As String, sql As String
    Dim leX As Integer, leY As Integer
    Dim j As Integer
    Dim i_grdregle As Integer
    Dim numfor As Integer
    Dim laS As String, laSF As String
    Dim laSQL As String
    Dim LaUbound As Integer
    Dim laSPF As String
    Dim II As Integer, leTitre As String
    Dim LeOp As String, k As Integer
    Dim z As Integer
    Dim leOPPF As String
    Dim tbl() As String
    Dim boolTbl As Boolean
    Dim ind_tbl As Integer
    Dim yestdéjà As Boolean
    Dim leUbound As Integer
    Dim NumIndice As Integer
    Dim ligneInit As String
    Dim num_fichExcel As Integer
    Dim err_fichExcel As Boolean
    Dim OpSep As String
    Dim strFichG As String, strFichd As String
    Dim strFormulaires As String
    Dim FormDéjà As Boolean
    Dim NumForm As String, NumFiltre As String
    Dim Condition As String, op As String
    Dim ConditionPF As String, opPF As String
    Dim ConditionSQL As String, opSQL As String
    Dim ConditionF As String, opF As String
    Dim s As String
    Dim CmdMenFormeChp As String
    Dim sGlob As String
    Dim PremI As Integer
    Dim L As Integer, iDer As Integer
    
    'MsgBox "enregistrer"
    Public_VerifOuvrir g_CheminModele, False, True, p_tbl_FichExcelOuverts()
    
    Me.LblHelp.Visible = True
    
Lab1:
    
    FctTrace ("===========")
    FctTrace ("Enregistrer")
    FctTrace ("===========")
    
    If Not p_bool_tbl_fichExcel Then GoTo Lab2
    
    ' enregistrer le modèle
    ' voir si des fichiers Excel sont à fermer proprement
Lab2:
    If Not p_bool_tbl_FichExcelOuverts Then GoTo Lab3

    LaUbound = 0
    On Error GoTo Faire
    LaUbound = UBound(p_tbl_FichExcelOuverts(), 1) + 1
    For i = 0 To LaUbound - 1
        Me.LblHelp.Caption = "Fermer " & i & " / " & LaUbound
        Me.LblHelp.Refresh

        If p_tbl_FichExcelOuverts(i).FichàSauver Then
            For j = 1 To Exc_obj.Workbooks.Count
                strFichG = Replace(UCase(Exc_obj.Workbooks(j).FullName), "\", "$")
                strFichG = Replace(strFichG, "/", "$")
                strFichd = Replace(UCase(p_tbl_FichExcelOuverts(i).FichFullname), "\", "$")
                strFichd = Replace(strFichd, "/", "$")
                If strFichG = strFichd Then
                'If UCase(Exc_obj.Workbooks(j).FullName) = UCase(p_tbl_FichExcelOuverts(i).FichFullname) Then
                    Exc_obj.Workbooks(j).Close True
                Else
                    Exc_obj.Workbooks(j).Close False
                End If
            Next j
        End If
    Next i
Faire:
    
Lab3:
    ' enregistrer le fichier des paramètres (tbl_fichExcel)
    On Error GoTo 0
    NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
    If InStr(NomFichierParam, ".") = 0 Then
        NomFichierParam = NomFichierParam & "."
    End If
    FICH_EffacerFichier NomFichierParam & "txt", False
    FICH_OuvrirFichier NomFichierParam & "txt", FICH_ECRITURE, fp
    If err_fichExcel Then
        GoTo Suite_1
    End If
    
    If Not p_bool_tbl_fenExcel Then GoTo Lab4
    
    ' Voir si les tailles des fenetres sont à mettre à jour
    'FEN    |        |       |   1    |MAX|MAX|               |   |    2
    ' réorganiser d'abord pour supprimer les feuilles
    For i = 1 To UBound(tbl_fenExcel())
        tbl_fenExcel(i).FenNumSave = i
        Debug.Print tbl_fenExcel(i).FenNum & " " & tbl_fenExcel(i).FenNumSave & " " & tbl_fenExcel(i).FenNom
    Next i
debutFen:
    iDer = 0
    For i = 1 To UBound(tbl_fenExcel())
        Me.LblHelp.Caption = "Fenêtres " & i & " / " & UBound(tbl_fenExcel())
        Me.LblHelp.Refresh
        
        If tbl_fenExcel(i).FenNum = -100 Then
            MsgBox "Feuille " & i & " : " & tbl_fenExcel(i).FenNom
        ElseIf tbl_fenExcel(i).FenNum = -1 Then
            NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
            If InStr(NomFichierParam, ".") = 0 Then
                NomFichierParam = NomFichierParam & "."
            End If
            ' ouvrir le fichier Excel
            Call Public_VerifOuvrir(NomFichierParam & p_ExtensionXls, False, True, p_tbl_FichExcelOuverts())
            Exc_obj.DisplayAlerts = False
            Exc_wrk.Sheets(tbl_fenExcel(i).FenNom).Delete
            Call ReOrganise(i, iDer)
            tbl_fenExcel(i).FenNum = -100   ' supprimée et traitée
            ' décaler les autres feuilles
            For j = i + 1 To UBound(tbl_fenExcel())
                tbl_fenExcel(j).FenNumSave = tbl_fenExcel(j).FenNumSave - 1
            Next j
            GoTo debutFen
        Else
            iDer = tbl_fenExcel(i).FenNum
        End If
    Next i
    
    ' on peut écrire les fenetres
    For i = 1 To UBound(tbl_fenExcel())
        Me.LblHelp.Caption = "Fenêtres " & i & " / " & UBound(tbl_fenExcel())
        Me.LblHelp.Refresh
        
        If tbl_fenExcel(i).FenNum <> -1 And tbl_fenExcel(i).FenNum <> -100 Then
            iDer = tbl_fenExcel(i).FenNumSave
            ligneInit = "FEN||" & tbl_fenExcel(i).FenNom & "|" & tbl_fenExcel(i).FenNumSave & "|" & tbl_fenExcel(i).FenColMax & "|" & tbl_fenExcel(i).FenRowMax
            If ligneInit <> "" Then
                Debug.Print ligneInit
                Print #fp, ligneInit
            End If
        End If
    Next i
        
Lab4:
    If Not p_bool_tbl_fichExcel Then GoTo Lab5
      
    For i = 0 To UBound(tbl_fichExcel())
        ligneInit = ""
        Me.LblHelp.Caption = "Champs " & i & " / " & UBound(tbl_fenExcel())
        Me.LblHelp.Refresh
        If tbl_fichExcel(i).CmdType = "DOC" Then
            ligneInit = tbl_fichExcel(i).CmdType & "|" & tbl_fichExcel(i).CmdTitreDoc & "|" & tbl_fichExcel(i).CmdLstFen & "|" & tbl_fichExcel(i).CmdLstDest & "|" & tbl_fichExcel(i).CmdMenFormeDoc
        ElseIf tbl_fichExcel(i).CmdType = "CONDF" Or tbl_fichExcel(i).CmdType = "CHP" Or tbl_fichExcel(i).CmdType = "RES" Then
            ' le trouver dans le grid
            leTitre = ""
            If tbl_fichExcel(i).CmdType = "CONDF" Then
                ' s'il n'y est pas déjà
                FormDéjà = False
                NumFiltre = tbl_fichExcel(i).CmdFormNum
                NumForm = ChercheFormulaire(NumFiltre)
                If NumForm <> "" Then
                    If strFormulaires <> "" Then
                        nb = STR_GetNbchamp(strFormulaires, ";")
                        For j = 0 To nb - 1
                            If STR_GetChamp(strFormulaires, ";", j) = NumForm Then
                                FormDéjà = True
                            End If
                        Next j
                    End If
                    If Not FormDéjà Then
                        strFormulaires = strFormulaires & "F" & NumForm & ";"
                    End If
                End If
            End If
            For II = 0 To grdForm.Rows - 1
                If grdForm.TextMatrix(II, GrdForm_FF_Num) = tbl_fichExcel(i).CmdFormNum Then
                    If grdForm.TextMatrix(II, GrdForm_FF_NumIndice) = tbl_fichExcel(i).CmdFormIndice Then
                        leTitre = grdForm.TextMatrix(II, GrdForm_FF_Titre)
                        Exit For
                    End If
                End If
            Next II
            ConditionSQL = ""
            If tbl_fichExcel(i).CmdType = "CHP" Or tbl_fichExcel(i).CmdType = "RES" Then
                If tbl_fichExcel(i).CmdType = "CHP" Then
                    If tbl_fichExcel(i).CmdChpGridChargé = "Oui" And grdCondChamp(tbl_fichExcel(i).CmdChpGridIndice).Rows > 0 Then
                        If p_bool_tbl_condCHP Then
                            PremI = 0
                            Condition = ""
                            ConditionSQL = ""
                            op = ""
                            opSQL = ""
                            For II = 0 To UBound(tbl_condChp)
                                If tbl_condChp(II).CondChpITabFichExcel = i Then
                                    If tbl_condChp(II).CondChpCndChpNum <> -1 Then ' non supprimée
                                        If tbl_condChp(II).CondChpCndPasFrancais <> "" Then
                                            Condition = Condition & op & arange_condition(tbl_condChp(II).CondChpCndPasFrancais)
                                            op = "§"
                                            ConditionSQL = ConditionSQL & opSQL & tbl_condChp(II).CondChpCndenSQL
                                            opSQL = " And "
                                            PremI = i
                                        End If
                                    End If
                                End If
                            Next II
                            tbl_fichExcel(i).CmdCondition = Condition
                            tbl_fichExcel(i).CmdConditionSQL = ConditionSQL
                        End If
                    End If
                End If
            End If
            
            If Mid(tbl_fichExcel(i).cmdTypeChp, 1, 6) = "Liste=" Then
                ligneInit = tbl_fichExcel(i).CmdType & "|" & tbl_fichExcel(i).CmdFormNum & "|" & tbl_fichExcel(i).CmdChpNum & "|"
                ligneInit = ligneInit & tbl_fichExcel(i).CmdFenNum & "|" & tbl_fichExcel(i).CmdX & "|" & tbl_fichExcel(i).CmdY & "|"
                ligneInit = ligneInit & tbl_fichExcel(i).cmdTypeChp & "|" & tbl_fichExcel(i).CmdCondition & "|" & tbl_fichExcel(i).CmdFormIndice
                ligneInit = ligneInit & "|" & leTitre
            Else
                ligneInit = tbl_fichExcel(i).CmdType & "|" & tbl_fichExcel(i).CmdFormNum & "|" & tbl_fichExcel(i).CmdChpNum & "|"
                ligneInit = ligneInit & tbl_fichExcel(i).CmdFenNum & "|" & tbl_fichExcel(i).CmdX & "|" & tbl_fichExcel(i).CmdY & "|"
                ' tbl_fichExcel(i).CmdMenFormeChp peut contenir des | => les transformer en §
                CmdMenFormeChp = Replace(tbl_fichExcel(i).CmdMenFormeChp, "|", "§")
                ligneInit = ligneInit & CmdMenFormeChp & "|" & tbl_fichExcel(i).CmdCondition & "|" & tbl_fichExcel(i).CmdFormIndice
                ligneInit = ligneInit & "|" & leTitre
                ligneInit = ligneInit & "|" & ConditionSQL
                If tbl_fichExcel(i).CmdType = "CHP" Or tbl_fichExcel(i).CmdType = "RES" Then
                    If tbl_fichExcel(i).CmdChpSQL <> "" Then
                        ligneInit = ligneInit & "|" & tbl_fichExcel(i).CmdChpSQL
                    Else
                        ligneInit = ligneInit & "|"
                    End If
                Else
                    ligneInit = ligneInit & "|"
                End If
                
                If tbl_fichExcel(i).CmdType = "CHP" Or tbl_fichExcel(i).CmdType = "RES" Then
                    If tbl_fichExcel(i).CmdType = "CHP" Then
                        If tbl_fichExcel(i).CmdChpRelierà <> "" Then
                            ligneInit = ligneInit & "|" & "Relié à" & tbl_fichExcel(i).CmdChpRelierà & "|" & "Niveau=" & tbl_fichExcel(i).CmdNiveauRelier
                        End If
                    ElseIf tbl_fichExcel(i).CmdType = "RES" Then
                        If tbl_fichExcel(i).CmdChpRelierà = "" Then ' Supprimé
                            GoTo LabNextI
                        Else
                            ligneInit = ligneInit & "|" & "RES=" & tbl_fichExcel(i).CmdChpRelierà
                        End If
                    End If
                End If
            End If
        End If
        If tbl_fichExcel(i).CmdChpNum <> -1 Then
            ' sinon, c'est qu'il est supprimé
            If tbl_fichExcel(i).CmdType <> "CONDL" Then
                If ligneInit <> "" Then
                    Print #fp, ligneInit
                    Debug.Print ligneInit
                End If
            End If
        End If
LabNextI:
    Next i
    
    sql = "update rapport_type set rp_formulaires = " & Odbc_String(strFormulaires) & " where rp_num=" & g_numModele
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Sub
    End If

Suite_1:

Lab5:
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdType = "CONDF" Then
            If tbl_fichExcel(i).CmdChpNum <> -1 Then
                NumFiltre = tbl_fichExcel(i).CmdFormNum
                NumIndice = tbl_fichExcel(i).CmdFormIndice
                ' parcourir tbl_cond
                ConditionPF = ""
                opPF = ""
                ConditionF = ""
                opF = ""
                ConditionSQL = ""
                opSQL = ""
                ligneInit = "CONDL|[NumFor]|[ChpNum]|[FenNum]|[X]|[Y]|[MenF]|[Condition]|[NumIndice]||[ConditionSQL]"
                ligneInit = Replace(ligneInit, "[NumFor]", NumFiltre)
                ligneInit = Replace(ligneInit, "[NumIndice]", NumIndice)
                p_bool_tbl_rdoL = False
                If Not (Not tbl_cond) Then
                    L = UBound(tbl_cond())
                Else
                    L = -1
                End If
                For z = 0 To L
                    If NumFiltre = tbl_cond(z).CondNumFiltre Then
                        If NumIndice = tbl_cond(z).CondFormIndice Then
                            If tbl_cond(z).CondType = "CONDL" Then
                                If tbl_cond(z).CondLigneDansGrid <> -1 Then
                                    p_bool_tbl_rdoL = True
                                    ' en pas francais
                                    ConditionPF = ConditionPF & opPF & arange_condition(tbl_cond(z).CondPasFrancais)
                                    opPF = "§"
                                    ConditionF = ConditionF & opF & "(" & tbl_cond(z).CondenFrancais & ")"
                                    opF = " Et "
                                    ConditionSQL = ConditionSQL & opSQL & tbl_cond(z).CondenSQL
                                    opSQL = "§"
                                End If
                            End If
                        End If
                    End If
                Next z
                If p_bool_tbl_rdoL Then
                    ligneInit = Replace(ligneInit, "[Condition]", ConditionPF)
                    ligneInit = Replace(ligneInit, "[ConditionSQL]", ConditionSQL)
                    ligneInit = Replace(ligneInit, "[FenNum]", tbl_fichExcel(i).CmdFenNum)
                    Print #fp, ligneInit
                    Debug.Print ligneInit
                End If
            End If
        End If
    Next i
    p_bool_tbl_rdoL = False
    If Not p_bool_tbl_rdoL Then GoTo Lab6
    
    
    ' enregistrer les conditions locales
    On Error GoTo err_RDOL
    j = UBound(tbl_rdoL())
    On Error GoTo 0
    GoTo Suite_RDOL
err_RDOL:
    On Error GoTo 0
    GoTo Pas_CondL
    
Suite_RDOL:
    Dim ypasse As Boolean
    ind_tbl = 0
    For i = 0 To grdForm.Rows - 1
        Me.LblHelp.Caption = "Conditions " & i & " / " & grdForm.Rows - 1
        Me.LblHelp.Refresh
        
        ypasse = False
        numfor = grdForm.TextMatrix(i, GrdForm_FF_Num)
        NumIndice = grdForm.TextMatrix(i, GrdForm_FF_NumIndice)
        ligneInit = "CONDL|[NumFor]|[ChpNum]|[FenNum]|[X]|[Y]|[MenF]|[Condition]|[NumIndice]||[ConditionSQL]"
        ligneInit = Replace(ligneInit, "[NumFor]", numfor)
        ligneInit = Replace(ligneInit, "[NumIndice]", NumIndice)
        
        For z = 0 To UBound(tbl_fichExcel())
            If tbl_fichExcel(z).CmdType = "CONDF" Then
                If tbl_fichExcel(z).CmdFormNum = numfor Then
                    If tbl_fichExcel(z).CmdFormIndice = NumIndice Then
                        If tbl_fichExcel(z).CmdChpNum = -1 Then
                            GoTo Next_ICondL
                        End If
                    End If
                End If
            End If
        Next z
        
        For j = 0 To UBound(tbl_rdoL())
            If numfor = tbl_rdoL(j).RDOL_fornum Then
                If NumIndice = tbl_rdoL(j).RDOL_FormIndice Then
                    ' c'est le même filtre
                    ' on cumule tous ceux du même num
                    'ligne = "CONDL|" & numfor & "||||||"
                    laS = ""
                    laSQL = ""
                    laSF = ""
                    laSPF = ""
                    leOPPF = ""
                    laSQL = ""
                    LeOp = ""
                    OpSep = ""
                    For k = 0 To UBound(tbl_rdoL())
                        If tbl_rdoL(k).RDOL_num = tbl_rdoL(j).RDOL_num Then
                            If tbl_rdoL(k).RDOL_FormIndice = tbl_rdoL(j).RDOL_FormIndice Then
                                laS = laS & LeOp & tbl_rdoL(k).RDOL_sqlenFrancais
                                laSPF = laSPF & leOPPF & tbl_rdoL(k).RDOL_sqlPasFrancais
                                laSQL = laSQL & opSQL & tbl_rdoL(k).RDOL_sqlenSQL
                                LeOp = "OP:ET|"
                                leOPPF = " [ET] "
                                opSQL = " And "
                                laSF = tbl_rdoL(k).RDOL_sqlenFrancais
                                s = s & OpSep & Replace(laSPF & "µ" & laSF, "|", "¤")
                                OpSep = "§"
                                ypasse = True
                            End If
                        End If
                    Next k
                End If
            End If
            If ypasse Then
                MsgBox s
                MsgBox laSQL
                ypasse = False
                Ligne = Replace(ligneInit, "[Condition]", Replace(laSPF & "µ" & laSF, "|", "¤"))
                Ligne = Replace(Ligne, "[ConditionSQL]", laSQL)
                ' voir s'il n'y est pas deja
                yestdéjà = False
                If boolTbl Then
                    leUbound = UBound(tbl())
                    GoTo Suite_Tab
                Else
                    GoTo Apres_Tab
                End If
Suite_Tab:
                On Error GoTo 0
                For k = 0 To UBound(tbl())
                    If Ligne = tbl(k) Then
                        yestdéjà = True
                    End If
                Next k
Apres_Tab:
                If Not yestdéjà Then
                    ReDim Preserve tbl(ind_tbl)
                    tbl(ind_tbl) = Ligne
                    ind_tbl = ind_tbl + 1
                    Print #fp, Ligne
                    boolTbl = True
                End If
            End If
        Next j
Next_ICondL:
    Next i
Pas_CondL:
Lab6:
    If Not p_bool_tbl_Demande Then GoTo Lab7
    
    ' enregistrer les champs à demander (sauf si CONDF supprimé)
    On Error GoTo 0
    On Error GoTo Suite_Demande
    For i = 0 To UBound(tbl_Demande)
        Me.LblHelp.Caption = "Conditions demandées" & i & " / " & UBound(tbl_Demande)
        Me.LblHelp.Refresh
        If tbl_Demande(0).DemandChpNum < 0 Then
            GoTo Next_IDemande
        End If
        For z = 0 To UBound(tbl_fichExcel())
            If tbl_fichExcel(z).CmdType = "CONDF" Then
                If tbl_fichExcel(z).CmdFormNum = tbl_Demande(i).DemandFFNum Then
                    If tbl_fichExcel(z).CmdFormIndice = tbl_Demande(i).DemandFormInd Then
                        If tbl_fichExcel(z).CmdChpNum = -1 Then
                            GoTo Next_IDemande
                        End If
                    End If
                End If
            End If
        Next z
        
        If tbl_Demande(i).DemandChpNum > 0 Then
            ligneInit = "CHPDEM|"
            ligneInit = ligneInit & tbl_Demande(i).DemandFFNum & "|"
            ligneInit = ligneInit & tbl_Demande(i).DemandFormInd & "|"
            ligneInit = ligneInit & tbl_Demande(i).DemandForNum & "." & tbl_Demande(i).DemandChpNum & "|"
            ligneInit = ligneInit & tbl_Demande(i).DemandChpStrPlus & "|"
            sGlob = tbl_Demande(i).DemandGlobale
            ligneInit = ligneInit & sGlob & "|"
            ligneInit = ligneInit & IIf(tbl_Demande(i).DemandFouA = "L", "L", "F") & "|"
            ligneInit = ligneInit & tbl_Demande(i).DemandAussiStr & "|"
            nb = STR_GetNbchamp(tbl_Demande(i).DemandPasFrancais, "¤")
            If nb = 3 Then
                tbl_Demande(i).DemandPasFrancais = arange_condition(tbl_Demande(i).DemandPasFrancais) & "¤"
            End If
            ligneInit = ligneInit & arange_condition(Replace(tbl_Demande(i).DemandPasFrancais, "|", "$")) & "|"
            Debug.Print ligneInit
            Print #fp, ligneInit
        End If
Next_IDemande:
    Next i
Suite_Demande:
    On Error GoTo 0

Lab7:
Lab_Fin_Enr:
          
    If Not p_bool_tbl_FichExcelOuverts Then GoTo Lab3

    LaUbound = 0
    On Error GoTo Faire
    LaUbound = UBound(p_tbl_FichExcelOuverts(), 1) + 1
    For i = 0 To LaUbound - 1
        Me.LblHelp.Caption = "Fermer " & i & " / " & LaUbound
        Me.LblHelp.Refresh

        If p_tbl_FichExcelOuverts(i).FichàSauver Then
            For j = 1 To Exc_obj.Workbooks.Count
                strFichG = Replace(UCase(Exc_obj.Workbooks(j).FullName), "\", "$")
                strFichG = Replace(strFichG, "/", "$")
                strFichd = Replace(UCase(p_tbl_FichExcelOuverts(i).FichFullname), "\", "$")
                strFichd = Replace(strFichd, "/", "$")
                If strFichG = strFichd Then
                    Exc_obj.Workbooks(j).Close True
                Else
                    Exc_obj.Workbooks(j).Close False
                End If
            Next j
        End If
    Next i
    
    
    Me.LblHelp.Visible = False

    Close #fp
    
    Dim fpIn As Integer, fpOut As Integer
    Dim nbLignes As Integer
    Dim tbIn()
    NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
    If InStr(NomFichierParam, ".") = 0 Then
        NomFichierParam = NomFichierParam & "."
    End If

    FICH_OuvrirFichier NomFichierParam & "txt", FICH_LECTURE, fpIn
    nbLignes = 0
    While Not EOF(fpIn)
        Line Input #fpIn, Ligne
        ReDim Preserve tbIn(nbLignes)
        tbIn(nbLignes) = Ligne
        Debug.Print Ligne
        nbLignes = nbLignes + 1
    Wend
    Close #fpIn

    Dim nbtot As Integer
    Dim leI As Integer
    Dim nbT As Integer
    nbtot = UBound(tbIn)
    Dim F As Integer, c As Integer
    Dim x As Integer
    nbT = 0
    Dim tbOut()
    For leI = 0 To UBound(tbIn)
        If Mid(tbIn(leI), 1, 3) <> "CHP" Then
            ReDim Preserve tbOut(nbT)
            tbOut(nbT) = tbIn(leI)
            nbT = nbT + 1
        End If
    Next leI
    For leI = 0 To UBound(tbIn)
        If Mid(tbIn(leI), 1, 6) = "CHPDEM" Then
            ReDim Preserve tbOut(nbT)
            tbOut(nbT) = tbIn(leI)
            nbT = nbT + 1
        End If
    Next leI
    
    For F = 1 To UBound(tbl_fenExcel())
        For L = 1 To tbl_fenExcel(F).FenRowMax
            For c = 1 To tbl_fenExcel(F).FenColMax
                For leI = 0 To UBound(tbIn)
                    If Mid(tbIn(leI), 1, 4) = "CHP|" Then
                        If STR_GetChamp(tbIn(leI), "|", 3) = F Then
                            If STR_GetChamp(tbIn(leI), "|", 5) = L Then
                                If FctIntColdest(STR_GetChamp(tbIn(leI), "|", 4)) = c Then
                                    ' ok
                                    ReDim Preserve tbOut(nbT)
                                     Me.LblHelp.Visible = True
                                    Me.LblHelp.Caption = "Feuille:" & F & " Ligne:" & L
                                    Me.LblHelp.Refresh
                                    tbOut(nbT) = tbIn(leI)
                                    nbT = nbT + 1
                                    Exit For
                                End If
                            End If
                        End If
                    End If
                Next leI
            Next c
        Next L
    Next F
    
    FICH_EffacerFichier NomFichierParam & "txt", False
    FICH_OuvrirFichier NomFichierParam & "txt", FICH_ECRITURE, fp
    For leI = 0 To UBound(tbOut)
        Print #fp, tbOut(leI)
        Debug.Print tbOut(leI)
    Next leI
    Close #fp
    
    ' Décharger sur le serveur
    Call Décharger_Fichiers("ENREG")
    cmd(CMD_ENREGISTRER).tag = 0
    Call verifSiSauve
    cmd(CMD_ENREGISTRER).tag = 0
    cmd(CMD_ENREGISTRER).Visible = False
    Me.LblHelp.Visible = False
    
End Sub

Private Function arange_condition(v_condition)
    Dim param1 As String, param2 As String, param3 As String, param4 As String, param5 As String
    Dim s As String, s1 As String
    Dim TypeChp As String, fctvalid As String
    Dim numchp As String, LeType As String, ValChp As String
    
    param1 = STR_GetChamp(v_condition, "¤", 0)
    param2 = STR_GetChamp(v_condition, "¤", 1)
    param3 = STR_GetChamp(v_condition, "¤", 2)
    param4 = STR_GetChamp(v_condition, "¤", 3)
    param5 = STR_GetChamp(v_condition, "¤", 4)
    
    numchp = STR_GetChamp(param1, ":", 1)
    If IsNumeric(numchp) Then
        TypeChp = ChercheNumChamp("Type", "", numchp, 0)
        fctvalid = ChercheNumChamp("FctValid", "", numchp, 0)
        If TypeChp = "TEXT" Then
            If InStr(fctvalid, "%DATE") > 0 Then
                LeType = "DATE"
            ElseIf InStr(fctvalid, "%NUMSERVICE") > 0 Then
                LeType = "NUMSERVICE"
            ElseIf InStr(fctvalid, "%NUMFCT") > 0 Then
                LeType = "NUMFCT"
            ElseIf InStr(fctvalid, "%MTT") > 0 Then
                LeType = "MTT"
            ElseIf InStr(fctvalid, "%ENTIER") > 0 Or InStr(fctvalid, "%NUM") > 0 Then
                LeType = "ENTIER"
            ElseIf fctvalid = "" Then
                LeType = "TEXTE"
            End If
        ElseIf InStr("SELECT%RADIO%CHECK", TypeChp) > 0 Then
            LeType = Replace(TypeChp, "%", "")
        ElseIf InStr("HIERARCHIE", TypeChp) > 0 Then
            LeType = "HIERARCHIE"
        End If
        If LeType = "" Then
            MsgBox "FaitConditionChamp " & TypeChp & " " & fctvalid & " non prévu"
        End If
        ValChp = STR_GetChamp(param3, ":", 1)
        arange_condition = param1 & "¤" & param2 & "¤" & LeType & ":" & ValChp & "¤" & param4 & "¤" & param5 & "¤"
    Else
        arange_condition = v_condition
    End If
    Debug.Print arange_condition
End Function

Private Sub ReOrganise(ByVal v_i_supr, ByVal v_iDer As Integer)
    Dim i As Integer, j As Integer
    Dim iFEN As Integer, ichp As Integer, NewIFen As Integer
    Dim Num_Suppr As Integer
    Dim iDer As Integer
    Dim AncNum As Integer
    Dim iVers As Integer
    ' supprimer tout ce qui est en v_i_supr, décaler tout ce qui est en > v_i_supr vers (v_i_supr - v_ider)
    
    If Not p_bool_tbl_fichExcel Then Exit Sub
    
    iDer = v_iDer + 1
    ' Décaler tous les champs et toutes les fenêtres > v_i_supr
    For ichp = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(ichp).CmdType <> "FEN" Then
            If tbl_fichExcel(ichp).CmdFenNum = "" Then
                ' Supprimer cette ligne
                tbl_fichExcel(ichp).CmdChpNum = -1
            ElseIf tbl_fichExcel(ichp).CmdFenNum = v_i_supr Then
                ' Supprimer cette ligne
                tbl_fichExcel(ichp).CmdChpNum = -1
            ElseIf tbl_fichExcel(ichp).CmdFenNum > v_i_supr Then
                ' Remonter cet ichp d'une position
                tbl_fichExcel(ichp).CmdFenNum = tbl_fichExcel(ichp).CmdFenNum - (v_i_supr - v_iDer)
            End If
        End If
    Next ichp
    Exit Sub
    For iFEN = 1 To UBound(tbl_fenExcel())
        If tbl_fenExcel(iFEN).FenNum > v_iDer Then
            ' est à mettre en ider
            AncNum = tbl_fenExcel(iFEN).FenNum
            tbl_fenExcel(iFEN).FenNum = iDer
            For ichp = 0 To UBound(tbl_fichExcel())
                If tbl_fichExcel(ichp).CmdType = "FEN" Or tbl_fichExcel(ichp).CmdType = "CHP" Then
                    If tbl_fichExcel(ichp).CmdFenNum = AncNum Then
                        ' Remonter cet ichp d'une position
                        tbl_fichExcel(ichp).CmdFenNum = iDer
                    End If
                End If
            Next ichp
            iDer = iDer + 1
        End If
    Next iFEN
End Sub

Private Function ChercheFormulaire(ByVal v_NumFiltre)
    Dim sql As String, rs As rdoResultset
                        
    sql = "select * from filtreform where ff_num = " & v_NumFiltre
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        ChercheFormulaire = ""
    ElseIf rs.EOF Then
        ChercheFormulaire = ""
    Else
        ChercheFormulaire = rs("ff_fornum")
    End If
End Function

Private Sub enregistrer_fenetres()
    Dim fpIn As Integer, fpOut As Integer
    Dim i As Integer
    Dim j As Integer
    Dim NomFichierIn As String, NomFichierOut As String
    Dim Ligne As String
    Dim ligneInit As String
    Dim s As String
    
    On Error GoTo 0
    
    fpIn = FreeFile
    NomFichierIn = Replace(g_CheminModele, p_PointExtensionXls, "") & ".txt"
    FICH_OuvrirFichier NomFichierIn, FICH_LECTURE, fpIn
    
    fpOut = FreeFile
    NomFichierOut = Replace(g_CheminModele, p_PointExtensionXls, "") & ".Out" & p_NumUtil
    FICH_OuvrirFichier NomFichierOut, FICH_ECRITURE, fpOut
    
    ' Voir si les tailles des fenetres sont à mettre à jour
    'FEN    |        |       |   1    |MAX|MAX|               |   |    2
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdType = "FEN" Then
            If tbl_fichExcel(i).CmdFenNum <> "" Then
                If tbl_fichExcel(i).CmdFenNum <> -1 Then
                    ' la trouver dans le tableau des fenetres
                    For j = 1 To UBound(tbl_fenExcel)
                        If tbl_fenExcel(j).FenItbl_fichExcel = i Then
                            ligneInit = "FEN||" & tbl_fenExcel(j).FenNom & "|" & tbl_fenExcel(j).FenNum
                            ligneInit = ligneInit & "|" & tbl_fenExcel(j).FenColMax
                            ligneInit = ligneInit & "|" & tbl_fenExcel(j).FenRowMax
                            
                            'ligneInit = ligneInit & "|||"
                            Print #fpOut, ligneInit
                            Exit For
                        End If
                    Next j
                End If
            End If
        End If
    Next i
    
    While Not EOF(fpIn)
        Line Input #fpIn, Ligne
        s = Trim(STR_GetChamp(Ligne, "|", 0))
        If s <> "FEN" Then
            Print #fpOut, Ligne
        End If
    Wend
    Close #fpIn
    Close #fpOut
        
    FICH_EffacerFichier NomFichierIn, False
    If FICH_RenommerFichier(NomFichierOut, NomFichierIn) = P_ERREUR Then
        MsgBox "impossible de renommer " & NomFichierOut & " en " & NomFichierIn
    Else
        FICH_EffacerFichier NomFichierOut, False
    End If
    
    BoolFaireSauveFenetre = False
    
    On Error GoTo 0
End Sub

Private Sub Rafraichir()
    Dim i As Integer, j As Integer
    Dim ANC_p_bfaire_RowColChange As Boolean
    Dim i_tbl_fichExcel As Integer
    Dim LaRowMax As Integer, LaColMax As Integer
    Dim NomCellDest As String
    Dim iFeuille As Integer
    
    'MsgBox "ouvrir"
    If tbl_fenExcel(g_numfeuille).FenNum = -100 Or tbl_fenExcel(g_numfeuille).FenNum = -1 Then 'Supprimée
        iFeuille = -1
        For i = UBound(tbl_fenExcel) To 0 Step -1
            If tbl_fenExcel(i).FenNum <> -100 And tbl_fenExcel(i).FenNum <> -1 Then
                iFeuille = i
                Exit For
            End If
        Next i
        If iFeuille = -1 Then Exit Sub
        g_numfeuille = iFeuille
    End If
    
    Public_VerifOuvrir g_CheminModele, False, True, p_tbl_FichExcelOuverts
    
    Call FindLastCell(g_numfeuille, LaRowMax, LaColMax)

    bRafraichir = True

    If tbl_fenExcel(g_numfeuille).FenLoad Then
        grdFeuille.TextMatrix(g_numfeuille - 1, GrdFeuil_LoadFait) = ""
        Unload grdCell(g_numfeuille)
    End If
    grdFeuille.TextMatrix(g_numfeuille - 1, GrdFeuil_Chargement) = LaRowMax
    Call InitGrdCell(g_numfeuille)
        
    bRafraichir = False
    grdFeuille.row = g_numfeuille - 1
    
    GoTo LaFin
    
    PgBar.Value = 0
    PgBar.Visible = True
    If CLng(LaColMax) * CLng(LaRowMax) > 0 Then
        PgBar.max = CLng(LaColMax) * CLng(LaRowMax)
    End If
    ANC_p_bfaire_RowColChange = p_bfaire_RowColChange
    p_bfaire_RowColChange = False
    For i = 1 To LaRowMax
        For j = 1 To LaColMax
            grdCell(g_numfeuille).TextMatrix(i, j) = ""
            grdCell(g_numfeuille).row = i
            grdCell(g_numfeuille).col = j
            Set grdCell(g_numfeuille).CellPicture = Nothing
            PgBar.Value = PgBar.Value + 1
        Next j
    Next i
    p_bfaire_RowColChange = ANC_p_bfaire_RowColChange
    PgBar.Visible = False
    
    AjouterContenuTableau g_numfeuille

    Dim leX As Integer, leY As Integer
    Dim MenForme As String
    Dim sX As String, sql As String
    Dim rs As rdoResultset
    
    On Error GoTo Err_Suite2
    i = UBound(tbl_fichExcel())
    GoTo Suite2
Err_Suite2:
    Resume Continu_2
Suite2:
    On Error GoTo 0
    ANC_p_bfaire_RowColChange = p_bfaire_RowColChange
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdType = "CHP" Then
            If tbl_fichExcel(i).CmdFenNum = g_numfeuille Then
                If tbl_fichExcel(i).CmdType = "CHP" And tbl_fichExcel(i).CmdChpNum > 0 Then
                    sX = tbl_fichExcel(i).CmdX
                    leX = FctIntColdest(sX)
                    leY = tbl_fichExcel(i).CmdY
                    MenForme = tbl_fichExcel(i).CmdMenFormeChp
                    ' Mettre le champ
                    sql = "select * from formetapechp where forec_num = " & tbl_fichExcel(i).CmdChpNum
                    If Odbc_SelectV(sql, rs) = P_ERREUR Then
                        Exit Sub
                    End If
                    'grdCell(g_numfeuille).TextMatrix(leX, leY) = "    " & rs("forec_nom")
                    p_bfaire_RowColChange = False
                    If grdCell(g_numfeuille).Rows > leY Then
                        grdCell(g_numfeuille).row = leY
                        If leY > tbl_fenExcel(g_numfeuille).FenRowMax Then
                            tbl_fenExcel(g_numfeuille).FenRowMax = leY
                            tbl_fenExcel(g_numfeuille).FenModif = True
                            BoolFaireSauveFenetre = True
                            p_ListeRafraichirFenetre = g_numfeuille
                        End If
                    End If
                    If grdCell(g_numfeuille).Cols > leX Then
                        grdCell(g_numfeuille).col = leX
                        If leX > tbl_fenExcel(g_numfeuille).FenColMax Then
                            tbl_fenExcel(g_numfeuille).FenColMax = leX
                            tbl_fenExcel(g_numfeuille).FenModif = True
                            BoolFaireSauveFenetre = True
                            p_ListeRafraichirFenetre = g_numfeuille
                        End If
                    End If
                    Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_CHAMP).Picture
                    ' Mise en forme
                    Call P_MettreChamp("Mettre", i, leX, leY, MenForme, rs("forec_num"), p_numindice_encours, g_numfeuille, False)
                End If
            End If
        End If
    Next i
    p_bfaire_RowColChange = ANC_p_bfaire_RowColChange

    If p_ListeRafraichirFenetre <> "" Then
        MsgBox "Votre feuille a besoin d'être ajustée."
        p_ListeRafraichirFenetre = ""
        p_ListeRafraichirTropX = 0
        p_ListeRafraichirTropY = 0
        Call Rafraichir
    End If

Continu_2:
LaFin:
End Sub

Private Sub cmd_MouseDown(Index As Integer, Button As Integer, Shift As Integer, x As Single, y As Single)

    If Index = CMD_FERMER Then
        g_mode_saisie = False
    End If
    
End Sub

Public Sub RecRmDir(ByVal vsFolder As Variant)
    Dim sName As Variant
    Dim oKillElements As Collection
    Dim ret As Integer
    
   On Local Error Resume Next
   If VarType(vsFolder) <> vbString Then
       Err.Raise 5
   Else
       If Right$(vsFolder, 1) = "\" Then
           vsFolder = left$(vsFolder, Len(vsFolder) - 1)
       End If
       Set oKillElements = New Collection
       sName = Dir$(vsFolder & "\*.*", vbDirectory Or vbReadOnly Or vbHidden Or vbSystem)
       Do While Len(sName)
            If (sName <> "..") And (sName <> ".") Then
                oKillElements.Add vsFolder & "\" & sName
           End If
           sName = Dir$()
       Loop
       For Each sName In oKillElements
           If GetAttr(sName) And vbDirectory Then
               RecRmDir sName
               RmDir sName
           Else
               SetAttr sName, vbNormal
               Kill sName
           End If
       Next sName
       RmDir (vsFolder)
   End If
End Sub


Private Sub cmd_MouseMove(Index As Integer, Button As Integer, Shift As Integer, x As Single, y As Single)
    
    Dim TitreForm As String
    
    If Index = CMD_MODE_LIEN Then
        Call Odbc_RecupVal("select FOR_Lib from Formulaire,FiltreForm where FF_ForNum=For_Num and FF_Num=" & STR_GetChamp(Me.cmd(CMD_MODE_LIEN).tag, "|", 0), TitreForm)
        Me.cmd(CMD_MODE_LIEN).ToolTipText = "Accès aux " & TitreForm & " sélectionné(e)s"
        ' Me.cmd(CMD_MODE_LIEN).Picture = Me.PictureLien(0).Picture
    ElseIf Index = CMD_MODE_CHAMP Then
        If Me.cmd(CMD_MODE_CHAMP).Picture = Me.imglst.ListImages(IMG_BOULEBC).Picture Then
            ' Nouveau champ
            ' on peut ajouter un champ ou un indicateur
            g_Ajouter_Champ_Index = Me.MnuChpAjout.tag
            g_Ajouter_Champ_numfiltre_encours = p_numfiltre_encours
            g_Ajouter_Champ_grdCell_RowSel = grdCell(Me.MnuChpAjout.tag).RowSel
            g_Ajouter_Champ_grdCell_ColSel = grdCell(Me.MnuChpAjout.tag).ColSel
            g_Ajouter_Champ_bdeja = False
            PopupMenu Me.MnuChpAjout
        End If
    ElseIf Index = CMD_MODE_GRAPHIQUE Then
        PopupMenu Me.MnuChpGraphique
    End If

End Sub

Private Sub cmdFormule_Click(Index As Integer)

    Dim s As String
    Dim selG As String, selD As String, selM As String
    Dim leI As Integer, leJ As Integer
    Dim bAnc As Boolean
    
    Select Case Index
    Case Cmd_Formule_Plus
        s = " + "
    Case Cmd_Formule_Moins
        s = " - "
    Case Cmd_Formule_Somme
        s = " SOMME( "
    Case Cmd_Formule_Vers
        s = ":"
    Case Cmd_Formule_Div
        s = " / "
    Case Cmd_Formule_Mult
        s = " * "
    Case Cmd_Formule_ParG
        s = " ( "
    Case Cmd_Formule_ParD
        s = " ) "
    Case Cmd_Formule_Valider
'        cmd(CMD_MODE_FORMULE).Visible = False
        If Me.TxtFormule.Text = "" Then
            Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).formula = ""
            Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).Value = ""
            leI = FctIntColdest(Mid(g_ColSelDest, 1, 1))
            leJ = Replace(g_ColSelDest, Mid(g_ColSelDest, 1, 1), "")
            
            bAnc = p_bfaire_RowColChange
            p_bfaire_RowColChange = False
            grdCell(g_numfeuille).row = leJ
            grdCell(g_numfeuille).col = leI
        
            p_bfaire_RowColChange = True
            Call grdCell_RowColChange(g_numfeuille)
            p_bfaire_RowColChange = bAnc
            
            Set grdCell(g_numfeuille).CellPicture = Nothing
            grdCell(g_numfeuille).TextMatrix(leJ, leI) = ""
            
            Me.TxtFormule.Text = ""
            Me.FrmFormule.Visible = False
            g_ColSelDest = ""
            bModeFormule = False
            Me.cmd(CMD_MODE_FORMULE).Visible = False
            Me.cmd(CMD_MODE_POLICE).Visible = False
            Me.cmd(CMD_MODE_CHAMP).Visible = False
            cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
            cmd(CMD_MODE_SIMUL).Visible = False
            cmd(CMD_MODE_LIEN).Visible = False
            Call verifSiSauve
            Exit Sub
        Else
            Me.TxtFormule.Text = STR_Supprimer(Me.TxtFormule.Text, " ")
            Me.TxtFormule.Text = Replace(Me.TxtFormule.Text, "SOMME", "SUM")
            Me.TxtFormule.Text = Replace(Me.TxtFormule.Text, ";", ",")
            On Error GoTo lab_erreur
            Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).formula = "=" & Me.TxtFormule.Text
            On Error GoTo 0
            leI = FctIntColdest(Mid(g_ColSelDest, 1, 1))
            leJ = Replace(g_ColSelDest, Mid(g_ColSelDest, 1, 1), "")
            
            bAnc = p_bfaire_RowColChange
            p_bfaire_RowColChange = False
            grdCell(g_numfeuille).row = leJ
            grdCell(g_numfeuille).col = leI
            
            p_bfaire_RowColChange = True
            Call grdCell_RowColChange(g_numfeuille)
            p_bfaire_RowColChange = bAnc
            
            Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_SOMME).Picture
            'grdCell(g_numfeuille).tag = Exc_obj.ActiveWorkbook.sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).formula
            
            Me.TxtFormule.Text = ""
            Me.FrmFormule.Visible = False
            g_ColSelDest = ""
            bModeFormule = False
            Me.cmd(CMD_MODE_FORMULE).Visible = False
            Me.cmd(CMD_MODE_POLICE).Visible = False
            Me.cmd(CMD_MODE_CHAMP).Visible = False
            cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
            cmd(CMD_MODE_SIMUL).Visible = False
            cmd(CMD_MODE_LIEN).Visible = False
            Call verifSiSauve
            Exit Sub
        End If
    End Select
        
    selG = left(Me.TxtFormule.Text, Me.TxtFormule.SelStart)
    selD = Right(Me.TxtFormule.Text, Len(Me.TxtFormule.Text) - Me.TxtFormule.SelStart - Me.TxtFormule.SelLength)
    selM = Me.TxtFormule.SelText
    Me.TxtFormule.Text = selG & s & selD
    Me.TxtFormule.SelStart = Len(selG) + Len(s)
    Me.TxtFormule.SetFocus
    Exit Sub
    
lab_erreur:
    MsgBox "La formule n'est pas acceptée par Excel", vbInformation + vbOKOnly, ""
    Exit Sub
    
End Sub

Private Sub cmdPolice_Click(Index As Integer)
    Dim sret As String
            
    If Index = Cmd_Police_Choisir Then
        sret = ChoisirFont("")
    ElseIf Index = Cmd_Police_Valider Then
        Call txtPolice_KeyDown(13, 0)
    ElseIf Index = Cmd_Police_Copier Then
        g_Police_Name = ComDialog.FontName
        g_Police_Size = ComDialog.FontSize
        g_Police_Color = ComDialog.Color
        g_Police_Italic = ComDialog.FontItalic
        g_Police_Bold = ComDialog.FontBold
    ElseIf Index = Cmd_Police_Coller Then
        ComDialog.FontName = g_Police_Name
        ComDialog.FontSize = g_Police_Size
        ComDialog.Color = g_Police_Color
        ComDialog.FontItalic = g_Police_Italic
        ComDialog.FontBold = g_Police_Bold
        Call cmdPolice_Click(Cmd_Police_Valider)
    End If
End Sub

Private Function ChoisirFont(param As String) As String
   ' Set Cancel to True.
   Me.ComDialog.CancelError = True
   On Error GoTo Err_ChoisirFont
   ' Set the Flags property.
   ComDialog.FLAGS = cdlCFBoth Or cdlCFEffects
   ' Display the Font dialog box.
   If param <> "Init" Then
        ComDialog.ShowFont
   End If
   ' Set text properties according to user's
   ' selections.
   'Me.txtPoliceNom.Text = ComDialog.FontName
   'Me.txtPoliceTaille.Text = ComDialog.FontSize
   'Me.txtPoliceStyle.Text = ComDialog.FontBold
   'Me.txtPoliceItalique.Text = ComDialog.FontItalic
   'Me.txtPoliceCouleur.Text = ComDialog.Color
    'Text1.Font.Underline = ComDialog.FontUnderline
   'Text1.FontStrikethru = ComDialog.FontStrikethru
   'Me.LblPoliceExemple.Font = ComDialog.FontName
   'Me.LblPoliceExemple.FontSize = ComDialog.FontSize
   'Me.LblPoliceExemple.FontBold = ComDialog.FontBold
   'Me.LblPoliceExemple.FontItalic = ComDialog.FontItalic
   'Me.LblPoliceExemple.ForeColor = ComDialog.Color
   
    'Exc_obj.ActiveWorkbook.sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).Font.Name = ComDialog.FontName
    'Exc_obj.ActiveWorkbook.sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).Font.Size = ComDialog.FontSize
    'Exc_obj.ActiveWorkbook.sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).Font.Bold = ComDialog.FontBold
    'Exc_obj.ActiveWorkbook.sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).Font.Italic = ComDialog.FontItalic
    'Exc_obj.ActiveWorkbook.sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).Font.Color = ComDialog.Color
   
    'grdCell(g_numfeuille).CellFontBold = ComDialog.FontBold
    'grdCell(g_numfeuille).CellForeColor = ComDialog.Color
    'grdCell(g_numfeuille).CellFontName = ComDialog.FontName
    'grdCell(g_numfeuille).CellFontItalic = ComDialog.FontItalic
    'grdCell(g_numfeuille).CellFontSize = ComDialog.FontSize
   
    Me.txtPolice.FontBold = ComDialog.FontBold
    Me.txtPolice.ForeColor = ComDialog.Color
    Me.txtPolice.FontName = ComDialog.FontName
    Me.txtPolice.FontItalic = ComDialog.FontItalic
    Me.txtPolice.FontSize = ComDialog.FontSize
   
    Me.txtPolice.SetFocus
   
   Exit Function
Err_ChoisirFont:
    Exit Function
End Function

Private Sub cmdTrace_Click()
    PopupMenu MenuG.MnuTrace
End Sub

Private Sub Form_Activate()
    Dim CheminNew As String
    Dim fd As Integer
    Dim Session As String, iret As Integer
    Dim CheminDossier_Serveur As String
    Dim NomDossierLocal As String
    Dim CheminDossier_Local As String
    Dim nomIn_Chemin_XLS As String, nomIn_Fichier_XLS As String, nomIn_Extension_XLS As String
    Dim nomInXLS As String
    Dim nomIn_Chemin_TXT As String, nomIn_Fichier_TXT As String, nomIn_Extension_TXT As String
    Dim nomInTXT As String
    Dim nomCpyXLS As String
    Dim nomCpyTXT As String
    Dim pos As Integer, sext As String
    Dim strHTTP As String
    Dim NomFichier As String
    Dim baseName As String
    Dim nbSortie As Integer
    Dim i As Integer
    Dim i_tbl_fich As Integer
    Dim liberr As String
    Dim nomIn_Chemin_LISTE As String, nomIn_Fichier_LISTE As String, nomIn_Extension_LISTE As String
    Dim nomCpyListe As String, nomInLISTE As String
    Dim sql As String, rs As rdoResultset
    Dim FichServeur As String
    Dim FichLocal As String
    
    bDeplacer = False
    FctTrace ("Form.activate etape 0")
    If g_form_active Then
        Exit Sub
    End If

    FctTrace ("Form.activate etape 1")
    nbSortie = 0
Début:
    g_form_active = True
    
    ' Version Excel
    Call Excel_Init
    Exc_obj_Version = Exc_obj.Version
    If val(Exc_obj.Version) < 12 Then
        p_VersionExcel = "2003"
    Else
        p_VersionExcel = "2007"
    End If

    Erase tbl_LesListes_Entites
    If p_TraitPublier = "P" Then
        cmd(CMD_PARAM_PUBLIER).Visible = True
    ElseIf p_TraitPublier = "G" Then
        cmd(CMD_PARAM_PUBLIER).Visible = False
    End If
    
    FctTrace ("Form.activate etape 2 p_TraitPublier=" & p_TraitPublier)
    If p_mode_acces = "SIMUL" Then
        Call FRM_ResizeForm(Me, 0, 0)
    End If
    g_CheminModele = ChoixModele(g_numModele, g_NumForm, p_TraitPublier)
    FctTrace ("Form.activate etape 3 g_CheminModele=" & g_CheminModele)
    If p_mode_acces = "SIMUL" And g_CheminModele = "" Then
        End
    End If
    
    nbSortie = nbSortie + 1
    If (Not g_bNouveau And g_cheminTB_Copie = "") Then
        If g_CheminModele = "" Then
            If nbSortie < 2 Then
                GoTo Début
            Else
                Unload Me
                Exit Sub
            End If
        End If
    End If
    
    Me.Attente_Frame.Visible = True
    Me.Attente_Frame.Refresh
    If Me.Attente_PgBar.Value >= Me.Attente_PgBar.max Then Me.Attente_PgBar.Value = 1
    Me.Attente_PgBar.Value = Me.Attente_PgBar.Value + 1
    Me.Attente_Titre = "Ouverture du Modèle de tableau de bord"
    Me.Visible = True
    
    If p_CodeUtil <> "ROOT" Then
        cmd(CMD_VOIR_FICHIER_PARAM).Visible = False
    End If
    
    Erase tbl_cond()
    Erase p_tbl_index()
    Erase tbl_fichExcel()
    Erase tbl_cell()
    Erase tbl_fenExcel()
    Erase tbl_rdoF()
    Erase tbl_rdoL()
    Erase tbl_Demande()
    Erase p_tbl_FichExcelOuverts()
    Erase tbl_condChp()
    
    p_Indice_Grid_ChpCond = 0
    
    p_bool_tbl_cond = False
    p_bool_tbl_condCHP = False
    p_bool_tbl_fichExcel = False
    p_bool_tbl_cell = False
    p_bool_tbl_fenExcel = False
    p_bool_tbl_rdoF = False
    p_bool_tbl_rdoL = False
    p_bool_tbl_Demande = False
    p_bool_tbl_FichExcelOuverts = False
    p_bool_tbl_diff = False
    
    If g_bNouveau Or g_CheminModele = "" Or g_CheminModele = "0" Or g_cheminTB_Copie <> "" Then
        ' on le met dans le fichier par défaut
testnomfichier:
        If p_ModeAssistant Then
            Me.FrmHTTPD.Visible = True
            Me.PgbarHTTPDTaille.max = 12
            Me.PgbarHTTPDTaille.Value = 2
            Me.FrmHTTPD.Caption = "Nouveau Rapport"
        End If
        
        NomFichier = InputBox("Donnez un Nom au nouveau modèle de Rapport", "Créer un modèle de Rapport", "Rapport")
        If NomFichier = "" Then
            Unload Me
            Exit Sub
        End If
        
        ' Nouveauté
        sql = "select * from rapport_type where upper(rp_titre_modele)=" & UCase(Odbc_String(NomFichier))
        If Odbc_SelectV(sql, rs) = P_ERREUR Then
            Exit Sub
        End If
        
        If Not rs.EOF Then
            MsgBox "Attention, Un modèle de rapport de ce nom existe déjà"
'            GoTo testnomfichier
        End If
        
        If g_bNouveau Then
            If p_VersionExcel = "2007" Then
                g_cheminTB_Copie = "Nouveau.xlsx"
                p_PointExtensionXls = ".xlsx"
                p_ExtensionXls = "xlsx"
            Else
                g_cheminTB_Copie = "Nouveau.xls"
                p_ExtensionXls = "xls"
                p_ExtensionXls = ".xls"
            End If
        End If
        If g_cheminTB_Copie <> "" Then
            ' modifier le fichier Liste
            ' Trouver son extension
            pos = InStrRev(g_cheminTB_Copie, ".")
            sext = LCase(Mid$(g_cheminTB_Copie, pos))
            p_ExtensionXls = Replace(sext, ".", "")
            p_PointExtensionXls = sext
            If Odbc_AddNew("rapport_type", "rp_num", "rp_seq", True, g_numModele, _
                            "rp_chemin_modele", NomFichier & p_PointExtensionXls, _
                            "rp_titre_modele", NomFichier, _
                            "rp_user_admin", "U" & p_NumUtil & "=PARAM:PUBLIER:RESULTAT;", _
                            "rp_formulaires", "", _
                            "rp_nbLig", "20") = P_ERREUR Then
                Exit Sub
            End If
            sql = "update rapport_type set rp_chemin_modele ='RP_" & g_numModele & p_PointExtensionXls & "' where rp_num = " & g_numModele
            If Odbc_SelectV(sql, rs) = P_ERREUR Then
                MsgBox "Créer Modèle Erreur : " & sql
            End If
            p_Imax = 25
            
            If p_boolChoisirModeleFichier Then
                ' le recopier en local
                p_boolChoisirModeleFichier = False
                ' Nouveauté
                FichLocal = p_Chemin_Modeles_Local & "/RP_" & g_numModele & p_PointExtensionXls
                If FICH_CopierFichier(g_CheminModele, FichLocal) = P_ERREUR Then
                    MsgBox "Recopie de " & g_CheminModele & " vers " & FichLocal & " échouée"
                Else
                    ' get file du txt
                    FichServeur = p_Chemin_Modeles_Serveur & "/Nouveau.txt"
                    ' Nouveauté
                    FichLocal = p_Chemin_Modeles_Local & "/RP_" & g_numModele & ".txt"
                    
                    ' chargement par HTTPD en lockant ou pas
                    p_bfaire_RowColChange = False
                    iret = HTTP_Appel_GetFile(FichServeur, FichLocal, False, False, liberr)
                    p_bfaire_RowColChange = True
                    If iret = HTTP_OK Or iret = HTTP_GET_DEJA_EN_LOCAL Then
                        ' Nouveauté
                        Call HTTP_Ajouter_Tbl(FichLocal, p_Chemin_Modeles_Serveur & "/RP_" & g_numModele & ".txt", "Doc", True)
                        Call HTTP_Ajouter_Tbl(Replace(FichLocal, ".txt", p_PointExtensionXls), p_Chemin_Modeles_Serveur & "/RP_" & g_numModele & p_PointExtensionXls, "Doc", True)
                    End If
                    g_CheminModele = Replace(FichLocal, ".txt", p_PointExtensionXls)
                End If
            Else
                ' get file du xls
                FichServeur = p_Chemin_Modeles_Serveur & "/" & g_cheminTB_Copie
                FichLocal = p_Chemin_Modeles_Local & "/" & NomFichier & p_PointExtensionXls

                ' Nouveauté
                FichLocal = p_Chemin_Modeles_Local & "/RP_" & g_numModele & p_PointExtensionXls
                
                ' chargement par HTTPD en lockant ou pas
                p_bfaire_RowColChange = False
                iret = HTTP_Appel_GetFile(FichServeur, FichLocal, False, False, liberr)
                p_bfaire_RowColChange = True
                 
                If iret = HTTP_OK Or iret = HTTP_GET_DEJA_EN_LOCAL Then
                    ' get file du txt
                    ' Nouveauté
                    FichLocal = p_Chemin_Modeles_Local & "/RP_" & g_numModele & ".txt"
                    
                    ' chargement par HTTPD en lockant ou pas
                    p_bfaire_RowColChange = False
                    iret = HTTP_Appel_GetFile(FichServeur, FichLocal, False, False, liberr)
                    p_bfaire_RowColChange = True
                    If iret = HTTP_OK Or iret = HTTP_GET_DEJA_EN_LOCAL Then
                        ' Nouveauté
                        Call HTTP_Ajouter_Tbl(FichLocal, p_Chemin_Modeles_Serveur & "/RP_" & g_numModele & ".txt", "Doc", True)
                        Call HTTP_Ajouter_Tbl(Replace(FichLocal, ".txt", p_PointExtensionXls), p_Chemin_Modeles_Serveur & "/RP_" & g_numModele & p_PointExtensionXls, "Doc", True)
                        ' Nouveauté
                        g_CheminModele = p_Chemin_Modeles_Local & "/RP_" & g_numModele & p_PointExtensionXls
                
                    Else
                        MsgBox "Impossible de charger le fichier " & FichServeur & " à partir de " & p_AdrServeur & Chr(13) & Chr(10) & liberr
                        g_CheminModele = ""
                    End If
                 Else
                     MsgBox "Impossible de charger le fichier " & FichServeur & " à partir de " & p_AdrServeur & Chr(13) & Chr(10) & liberr
                    g_CheminModele = ""
                 End If
            End If
            g_cheminTB_Copie = ""
            g_bNouveau = False
        End If
        b_Chargement_Termine = True
        Call initialiser
    Else
        Call initialiser
    End If
    If p_mode_acces = "SIMUL" Then
        Unload Me
        Exit Sub
    End If
    FctTrace ("Form.activate apres initialiser")
    Me.Attente_Frame.Visible = False
    
    If p_TraitPublier = "G" Then
        Me.Visible = False
        MenuG.lblWait.Visible = True
        MenuG.lblWait.Caption = "Chargement de toutes les Feuilles"
        cmd_Click (CMD_TOUT_CHARGER)
        MenuG.lblWait.Caption = "Chargement terminé"
        MenuG.lblWait.Visible = False
        cmd_Click (CMD_PUBLIER)
    End If
        
    Me.Caption = getTitre(g_numModele)
    
    If p_ModeAssistant Then
        Me.PgbarHTTPDTaille.max = 12
        Me.FrmHTTPD.Caption = "Sauvegarde du Nouveau Rapport"
        Me.PgbarHTTPDTaille.Value = 12
        Call enregistrer
    End If
    Exit Sub
    
err_execute:
    MsgBox "Erreur " & sql & " : " & Error$
    End
Exit Sub
    
End Sub

Private Function getTitre(v_nummodele)
    Dim sql As String, rs As rdoResultset

    If v_nummodele > 0 Then
        sql = "select * from rapport_type where rp_num=" & v_nummodele
        If Odbc_SelectV(sql, rs) = P_ERREUR Then
            getTitre = "??? (" & v_nummodele & ")"
        ElseIf rs.EOF Then
            getTitre = "rs Vide (" & v_nummodele & ")"
        Else
            getTitre = rs("rp_titre_modele") & " (" & v_nummodele & ")"
        End If
        rs.Close
    End If
End Function

Private Function ChoixModele(ByVal v_nummodele As Integer, ByVal v_NumForm As Integer, ByVal v_Trait As String)
    Dim pos As Integer, sext As String
    Dim drive As String
    Dim path As String
    Dim Frm As Form
    Dim nomfich As String, Session As String
    Dim iret As Integer, chemin As String
    Dim v_chemin_For As String, v_chemin_Fil As String
    Dim strHTTP As String
    Dim i As Integer, nb As Integer
    Dim n As Integer, fpIn As Integer
    Dim NomFichierIn As String, Ligne As String
    Dim strNomFic As String, strTitreFic As String
    Dim iretXLS As Integer, iretTXT As Integer
    Dim NomFichierUser As String
    Dim fd As Integer
    Dim s As String
    Dim liberr As String
    Dim nomIn_Chemin_XLS As String, nomIn_Fichier_XLS As String, nomIn_Extension_XLS As String
    Dim nomInXLS As String
    Dim nomIn_Chemin_TXT As String, nomIn_Fichier_TXT As String, nomIn_Extension_TXT As String
    Dim bret As Boolean
    Dim nomInTXT As String
    Dim nomIn_Chemin_LISTE As String, nomIn_Fichier_LISTE As String, nomIn_Extension_LISTE As String
    Dim nomInLISTE As String
    Dim nomCpyXLS As String, nomCpyTXT As String, nomCpyListe As String
    Dim bEffaceListe As Boolean, bEffaceXLS As Boolean, bEffaceTXT As Boolean
    Dim numutil As String
    Dim i_HTTP_Ajouter_Tbl As Integer
    Dim NomFichier As String
    Dim DernierOuvert As String
    Dim sql As String, rs As rdoResultset
    Dim LeNum As Integer, LeTag As String
    Dim FichServeur As String
    Dim FichLocal As String
    Dim strExist As String
    Dim bAfficher As Boolean
    Dim btn As Integer, btn_quitter As Integer, btn_supprimer As Integer
    Dim btn_renommer As Integer, btn_droits As Integer
    Dim ya As Boolean
    
    ' Vérifier si le répertoire local existe
    path = p_Chemin_Modeles_Local
Test_Path:
    ya = False
    FctTrace ("ChoixModele etape 0 path=" & path)

    If Not FICH_EstRepertoire(path, False) Then
        MkDir (path)
        GoTo Test_Path
    End If
    
    If p_mode_acces = "SIMUL" Then
        sql = "select * from rapport_type where rp_user_admin like '%U" & p_NumUtil & "=:::SIMUL;%'"
        If p_NumUtil = p_SuperUser Then
            sql = "select * from rapport_type"
        End If
        If p_NumForm > 0 Then
            sql = sql & " and rp_formulaires like '%" & p_NumForm & ";%'"
        End If
        If Odbc_SelectV(sql, rs) = P_ERREUR Then
            Exit Function
        End If
        If rs.EOF Then
            Call MsgBox("Aucun modèle trouvé pour simulation", vbOKOnly, "")
            rs.Close
            End
        End If
        rs.MoveLast
        If rs.RowCount = 1 Then
            LeNum = rs("rp_num")
            LeTag = rs("rp_chemin_modele")
            GoTo ChoixDirect
        End If
        rs.MoveFirst
        v_Trait = "S"
    End If
    
    If Not p_Appel_Création_Nouveau_Modele Then
        If g_numModele > 0 Then
            If p_param_supplementaires And g_numModele > 0 And p_NumUtil = p_SuperUser Then
                sql = "select * from rapport_type where rp_num=" & g_numModele
            Else
                sql = "select * from rapport_type where rp_num=" & g_numModele _
                    & " and (rp_user_admin like '%U" & p_NumUtil & ";%' OR rp_user_admin like '%U" & p_NumUtil & "=%')"
            End If
            If Odbc_SelectV(sql, rs) = P_ERREUR Then
                Exit Function
            End If
            If Not rs.EOF Then
                LeNum = rs("rp_num")
                LeTag = rs("rp_chemin_modele")
                p_ExtensionXls = Mid(LeTag, InStrRev(LeTag, "."))
                GoTo ChoixDirect
            End If
        End If
    End If
    
    If v_Trait = "G" Then
        sql = "select * from rapport_type,rp_document where rp_num=rpd_rpnum and rp_user_admin like '%U" & p_NumUtil & "=%'"
        If p_CodeUtil = "ROOT" Then
            sql = "select * from rapport_type,rp_document where rp_num=rpd_rpnum"
        End If
    ElseIf v_Trait = "S" Then
        sql = "select * from rapport_type where rp_user_admin like '%U" & p_NumUtil & "=:::SIMUL;%'"
    Else
        sql = "select * from rapport_type where rp_user_admin like '%U" & p_NumUtil & "=%'"
        If v_Trait = "P" Then
            ' seulement ceux qu'il peut paramétrer
            sql = sql & " And rp_user_admin like '%U" & p_NumUtil & "=PARAM%'"
        End If
        If p_CodeUtil = "ROOT" Then
            sql = "select * from rapport_type where true"
        End If
    End If
    If Not p_Appel_Création_Nouveau_Modele Then
        If p_NumForm > 0 Then
            sql = sql & " and rp_formulaires like 'F%" & p_NumForm & ";%'"
        End If
    End If
    If p_VersionExcel = "2003" Then
        ' ne voir que les xls
        sql = sql & " and rp_chemin_modele like '%.xls'"
    End If
    sql = sql & " order by rp_num"
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Function
    End If
    ' voir si un dans fichier User
    NomFichierUser = p_Chemin_Modeles_Local & "/User_" & p_NumUtil & ".User"
    FctTrace ("ChoixModele etape 1 NomFichierUser=" & NomFichierUser)
    
    If FICH_FichierExiste(NomFichierUser) Then
        fd = FreeFile
        FICH_OuvrirFichier NomFichierUser, FICH_LECTURE, fd
        While Not EOF(fd)
            Line Input #fd, DernierOuvert
            DernierOuvert = Trim(DernierOuvert)
        Wend
        Close fd
    End If
        
    Call CL_Init
    n = 0
    ' le dernier ouvert
    ' Afficher les fichiers
    If rs.EOF Then
        rs.Close
    Else
        While Not rs.EOF
            If p_CodeUtil = "ROOT" Or InStr(rs("rp_user_admin"), "U" & p_NumUtil & ";") > 0 Or InStr(rs("rp_user_admin"), "U" & p_NumUtil & "=") > 0 Then
                bAfficher = False
                If p_CodeUtil = "ROOT" Then
                    bAfficher = True
                ElseIf v_Trait = "P" Or v_Trait = "S" Then
                    bAfficher = True
                ElseIf v_Trait = "G" Then
                    ' Droit de publier ?
                    bAfficher = VoirSiDroit("PUBLIER", rs("rp_num"), val(p_NumUtil))
                End If
                If bAfficher Then
                    strNomFic = rs("rp_chemin_modele")
                    strTitreFic = rs("rp_titre_modele")
                    If v_Trait = "G" Then strTitreFic = strTitreFic & " => " & rs("rpd_titre")
                    If rs("rp_num") = DernierOuvert Then
                        FichServeur = p_Chemin_Modeles_Serveur & "/" & strNomFic
                        iret = HTTP_Appel_fichier_existe(FichServeur, False, liberr)
                        If iret = HTTP_OK Then
                            strExist = "OK"
                        Else
                            strExist = "Absent"
                        End If
                        sext = STR_GetChamp(strNomFic, ".", 1)
                        Call CL_AddLigne(strTitreFic & vbTab & strExist & vbTab & strNomFic, rs("rp_num"), strNomFic, False)
                        ya = True
                        n = n + 1
                    End If
                End If
            End If
            rs.MoveNext
        Wend
        rs.MoveFirst
        While Not rs.EOF
            If p_CodeUtil = "ROOT" Or InStr(rs("rp_user_admin"), "U" & p_NumUtil & ";") > 0 Or InStr(rs("rp_user_admin"), "U" & p_NumUtil & "=") > 0 Then
                bAfficher = False
                If p_CodeUtil = "ROOT" Then
                    bAfficher = True
                ElseIf v_Trait = "P" Or v_Trait = "S" Then
                    bAfficher = True
                ElseIf v_Trait = "G" Then
                    ' Droit de publier ?
                    bAfficher = VoirSiDroit("PUBLIER", rs("rp_num"), val(p_NumUtil))
                End If
                If bAfficher Then
                    strNomFic = rs("rp_chemin_modele")
                    strTitreFic = rs("rp_titre_modele")
                    If v_Trait = "G" Then strTitreFic = strTitreFic & " => " & rs("rpd_titre")
                    If rs("rp_num") <> DernierOuvert Then
                        FichServeur = p_Chemin_Modeles_Serveur & "/" & strNomFic
                        iret = HTTP_Appel_fichier_existe(FichServeur, False, liberr)
                        If iret = HTTP_OK Then
                            strExist = "OK"
                        Else
                            ' voir si existe en .mod
                            s = p_Chemin_Modeles_Serveur & "/" & STR_GetChamp(strNomFic, ".", 0) & ".*xls*"
                            iret = HTTP_Appel_fichier_existe(s, False, liberr)
                            If iret = HTTP_OK Then
                                strExist = "en .mod"
                            Else
                                strExist = "Absent"
                            End If
                        End If
                        sext = STR_GetChamp(strNomFic, ".", 1)
                        Call CL_AddLigne(strTitreFic & vbTab & strExist & vbTab & strNomFic, rs("rp_num"), strNomFic, False)
                        ya = True
                        n = n + 1
                    End If
                End If
            End If
            rs.MoveNext
        Wend
        rs.Close
    End If
    
    Call CL_InitTitreHelp("Modèles de Rapports disponibles", "")
    Call CL_AddBouton("", p_chemin_appli + "\btnok.gif", vbKeyO, vbKeyF1, 0)
    If v_Trait = "P" Then
        Call CL_AddBouton("Créer à partir" & Chr(13) & Chr(10) & "de zéro", "", 0, 0, 2000)
        Call CL_AddBouton("Créer à partir " & Chr(13) & Chr(10) & "d'un autre modèle", "", 0, 0, 2000)
        Call CL_AddBouton("Créer à partir " & Chr(13) & Chr(10) & "d'un Fichier Excel", "", 0, 0, 2000)
        Call CL_AddBouton("Supprimer", "", 0, 0, 1200)
        Call CL_AddBouton("Renommer", "", 0, 0, 1200)
        Call CL_AddBouton("Gestion des Droits", "", 0, 0, 1500)
    End If
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
    Call CL_InitTaille(0, -15)
    
    g_cheminTB_Copie = ""
    If p_Appel_Création_Nouveau_Modele Then
        p_Appel_Création_Nouveau_Modele = False
    End If
    
    If p_ModeAssistant Then
        CL_liste.retour = 1
    Else
LabChoixListe:
        ChoixListe.Show 1
    End If
    FctTrace ("ChoixModele etape 2 CL_liste.retour=" & CL_liste.retour)
        
    ' Sortie
    If (p_TraitPublier = "P" And CL_liste.retour = 7) Or (p_TraitPublier = "G" And CL_liste.retour = 1) Then
        ChoixModele = ""
        Exit Function
    ElseIf v_Trait = "S" And CL_liste.retour = 1 Then
        ChoixModele = ""
        End
    End If
    
    If CL_liste.retour = 0 Then
        ' Choix d'un modele
        nomfich = CL_liste.lignes(CL_liste.pointeur).tag
        pos = InStrRev(nomfich, ".")
        sext = LCase(Mid$(nomfich, pos))
        p_ExtensionXls = Replace(sext, ".", "")
        p_PointExtensionXls = sext
    End If
    
    If CL_liste.retour = 4 Then
        ' Supprimer
        g_bNouveau = False
        ChoixModele = ""
        LeNum = CL_liste.lignes(CL_liste.pointeur).num
        LeTag = CL_liste.lignes(CL_liste.pointeur).tag

        ' Droit de paramétrer les droits ?
        bret = VoirSiDroit("PARAM", val(LeNum), val(p_NumUtil))
        If Not bret Then
            MsgBox "Vous n'êtes pas administrateur de ce Rapport"
        Else
            Call SupprimerModele(LeNum, LeTag)
        End If
        GoTo Test_Path
        Exit Function
    End If
    
    If CL_liste.retour = 5 Then
        ' Renommer
        g_bNouveau = False
        ChoixModele = ""
        LeNum = CL_liste.lignes(CL_liste.pointeur).num
        LeTag = CL_liste.lignes(CL_liste.pointeur).tag

        ' Droit de paramétrer les droits ?
        bret = VoirSiDroit("PARAM", val(LeNum), val(p_NumUtil))
        If Not bret Then
            MsgBox "Vous n'êtes pas administrateur de ce Tableau de Bord"
        Else
            strTitreFic = CL_liste.lignes(CL_liste.pointeur).texte
            strTitreFic = STR_GetChamp(strTitreFic, vbTab, 0)
            strTitreFic = InputBox("Titre du Rapport", "", strTitreFic)
            If strTitreFic <> "" Then
                sql = "update rapport_type set rp_titre_modele='" & strTitreFic & "' where rp_num = " & LeNum
                If Odbc_SelectV(sql, rs) = P_ERREUR Then
                    MsgBox "ChoixModele Erreur : " & sql
                End If
            End If
        End If
        GoTo Test_Path
        Exit Function
    End If
    
    ' Gestion des droits
    If CL_liste.retour = 6 Then
        g_bNouveau = False
        If Not ya Then
            Call MsgBox("Aucun modèle sur lequel vous pouvez gérer des droits")
            GoTo Test_Path
        End If
        LeNum = CL_liste.lignes(CL_liste.pointeur).num
        LeTag = CL_liste.lignes(CL_liste.pointeur).tag
        sql = "select * from rapport_type where rp_num = " & LeNum
        If Odbc_SelectV(sql, rs) = P_ERREUR Then
            Exit Function
        End If
        
        If Not rs.EOF Then
            ' Droit de paramétrer les droits ?
            bret = VoirSiDroit("PARAM", val(LeNum), val(p_NumUtil))
            If Not bret Then
                MsgBox "Vous n'êtes pas administrateur de ce Rapport"
            Else
                Call GererDroits(val(LeNum), rs("rp_user_admin"))
            End If
        End If
        GoTo Test_Path
    End If
    
    If CL_liste.retour = 1 Then
        If Not p_peut_creer Then
            Call MsgBox("Vous n'avez pas les droits pour créer un rapport", vbOKOnly, "")
            GoTo Test_Path
        End If
        ' nouveau modèle
        ChoixModele = ""
        g_bNouveau = True
        p_boolChoisirModeleFichier = False
        Exit Function
    End If
    
    If CL_liste.retour = 2 Then
        If Not p_peut_creer Then
            Call MsgBox("Vous n'avez pas les droits pour créer un rapport", vbOKOnly, "")
            GoTo Test_Path
        End If
        ' nouveau modèle à partir de
        ChoixModele = ""
        g_cheminTB_Copie = ChoixModèleCopier
        Exit Function
    End If
    
    If CL_liste.retour = 3 Then
        ' nouveau modèle à partir de
        If Not p_peut_creer Then
            Call MsgBox("Vous n'avez pas les droits pour créer un rapport", vbOKOnly, "")
            GoTo Test_Path
        End If
        ChoixModele = ""
        Set Frm = Com_ChoixFichier2
        Dim pattern As String
        If p_VersionExcel = "2007" Then
            pattern = "*.xls*"
        Else
            pattern = "*.xls"
        End If
        ChoixModele = Com_ChoixFichier2.AppelFrm("Choix du Modèle Excel", "c:", p_Chemin_Modeles_Local, pattern, False)
        Set Frm = Nothing
        p_boolChoisirModeleFichier = True
        If ChoixModele = "" Then
            Exit Function
        End If
        
        g_cheminTB_Copie = ChoixModele
        Exit Function
    End If
    
    g_bNouveau = False
    
    ' enregistrer dans le dernier utilisé
    LeNum = CL_liste.lignes(CL_liste.pointeur).num
    LeTag = CL_liste.lignes(CL_liste.pointeur).tag
    
    ' Droit de Simuler ?
    If v_Trait = "S" Then
        If p_CodeUtil = "ROOT" Then
            bret = True
        Else
            bret = VoirSiDroit("SIMUL", val(LeNum), val(p_NumUtil))
        End If
        If Not bret Then
            MsgBox "Vous n'avez pas de droit sur ce Rapport"
            GoTo LabChoixListe
        End If
    Else
        ' Vérifier s'il a le droit de paramétrer
        If p_CodeUtil = "ROOT" Then
            bret = True
        Else
            bret = VoirSiDroit("PARAM", val(LeNum), val(p_NumUtil))
        End If
        If Not bret Then
            MsgBox "Vous n'êtes pas administrateur de ce Rapport"
            GoTo LabChoixListe
        End If
    End If
    
    Call sauvegarder_modele(LeNum)
    
    g_numModele = LeNum
    
    sql = "select * from rapport_type where rp_num = " & g_numModele
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Function
    End If
    
ChoixDirect:
    p_Imax = 25
    If Not rs.EOF Then
        If IsNull(rs("rp_nbLig")) Then
            p_Imax = 25
        Else
            p_Imax = val(rs("rp_nbLig"))
        End If
        Me.MnuFeuilleNbrLignes.Caption = "Chargement par " & p_Imax & " lignes"
    End If
    rs.Close
    fd = FreeFile
    
    NomFichierUser = p_Chemin_Modeles_Local & "/User_" & p_NumUtil & ".User"
    
    FctTrace ("ChoixModele etape 3 NomFichierUser=" & NomFichierUser)
    
    If FICH_FichierExiste(NomFichierUser) Then
        Kill (NomFichierUser)
    End If
    FICH_OuvrirFichier NomFichierUser, FICH_ECRITURE, fd
    Print #fd, LeNum
    Close #fd
    
    If v_Trait = "G" Then
        MenuG.lblWait.Visible = True
        MenuG.lblWait.Caption = "Chargement du rapport"
    End If
    
    ' Nouveauté
    p_nummodele = LeNum
    nomIn_Fichier_XLS = "RP_" & LeNum
    nomIn_Extension_XLS = Replace(p_ExtensionXls, ".", "")
    p_PointExtensionXls = "." & nomIn_Extension_XLS '   p_ExtensionXls
    If nomIn_Chemin_XLS = "" Then
        nomIn_Chemin_XLS = p_Chemin_Modeles_Local
    End If
    nomInXLS = nomIn_Chemin_XLS & "/" & nomIn_Fichier_XLS & p_PointExtensionXls
    FctTrace ("ChoixModele etape 4 nomInXLS=" & nomInXLS)
    
    nomCpyXLS = p_Chemin_Modeles_Local & "/" & LeTag
    ' Nouveauté
    nomCpyXLS = p_Chemin_Modeles_Local & "/" & nomIn_Fichier_XLS & p_PointExtensionXls
    FctTrace ("ChoixModele etape 4 nomCpyXLS=" & nomCpyXLS)
TestKill:
    Dim boolOK_Kill As Boolean
    If FICH_FichierExiste(nomCpyXLS) Then
        On Error GoTo ErrLockParExcel
        boolOK_Kill = True
        Kill (nomCpyXLS)
        If boolOK_Kill Then
            GoTo Continuer
        Else
            ' essayer de le fermer et recommencer
            GoTo err_startExcel
        End If
ErrLockParExcel:
        If Err.Number = 70 Then
            MsgBox "Impossible d'accéder à " & nomCpyXLS
            boolOK_Kill = False
            Set Exc_obj = GetObject(, "Excel.Application")
            Resume Next
        End If
        On Error GoTo err_startExcel
    
        Set Exc_obj = GetObject(, "Excel.Application")
err_startExcel:
        If Err.Number = 0 Then
            MsgBox "Le fichier " & nomIn_Fichier_XLS & "." & nomIn_Extension_XLS & " est bloqué par l'application Excel" & Chr(13) & Chr(10) & "Vous devrez fermer l'application Excel pour continuer"
            Call Excel_MetVisible
            MsgBox "Re-Tenter le Chargement"
            GoTo TestKill
        Else
            Set Exc_obj = CreateObject("Excel.Application")
            MsgBox Err.Description
            End
        End If

Continuer:
    End If
        
    FichServeur = p_Chemin_Modeles_Serveur & "/" & nomIn_Fichier_XLS & p_PointExtensionXls
    FichLocal = p_Chemin_Modeles_Local & "/" & nomIn_Fichier_XLS & p_PointExtensionXls
    
    FctTrace ("ChoixModele etape 5 FichServeur=" & FichServeur)
    FctTrace ("ChoixModele etape 5 FichLocal=" & FichLocal)
    
    b_Chargement_Termine = False
    
    If Not IsMissing(PiloteExcelBis) Then
        Me.FrmHTTPD.Visible = True
        Call HTTP_SetVoirProgression(True, PiloteExcelBis)
    End If
    ' chargement par HTTPD en lockant ou pas
    FctTrace ("ChoixModele etape 6 Chargement XLS")
    
    p_bfaire_RowColChange = False
    If p_ModePublication = "Publier" Or p_mode_acces = "SIMUL" Then
        ' on locke pas
        iretXLS = HTTP_Appel_GetFile(FichServeur, FichLocal, False, False, liberr)
    Else
        iretXLS = HTTP_Appel_GetFile(FichServeur, FichLocal, True, False, liberr)
    End If
    g_CheminModele = FichLocal
    p_bfaire_RowColChange = True

    FctTrace ("ChoixModele etape 6 Chargement XLS Fait " & iretXLS)
    If iretXLS = HTTP_GET_LOCKE Then
        If Trim(liberr) <> p_NumUtil Then
            MsgBox "Ce rapport est en cours de modification par " & P_GetNomUtil(Trim(liberr))
        End If
    ElseIf iretXLS < 0 Then
        MsgBox "Erreur lors de la copie de " & FichServeur & " " & iretXLS & " " & liberr
        FctTrace ("=========================================================")
        FctTrace ("ChoixModele " & liberr)
        FctTrace ("=========================================================")
    ElseIf iretXLS = HTTP_OK Or iretXLS = HTTP_GET_DEJA_EN_LOCAL Then
        ' Nouveauté
        FichServeur = Replace(FichServeur, p_PointExtensionXls, ".txt")
        FichLocal = Replace(FichLocal, p_PointExtensionXls, ".txt")
        
        If Not IsMissing(PiloteExcelBis) Then
            Me.FrmHTTPD.Visible = True
            Call HTTP_SetVoirProgression(True, PiloteExcelBis)
        End If
        ' chargement par HTTPD en lockant ou pas
        FctTrace ("ChoixModele etape 6 Chargement TXT")
        
        p_bfaire_RowColChange = False
        If p_ModePublication = "Publier" Or p_mode_acces = "SIMUL" Then
            iretTXT = HTTP_Appel_GetFile(FichServeur, FichLocal, False, True, liberr)
        Else
            iretTXT = HTTP_Appel_GetFile(FichServeur, FichLocal, True, True, liberr)
        End If
        p_bfaire_RowColChange = True
        FctTrace ("ChoixModele etape 6 Chargement TXT Fait " & iretTXT)
        
        'p_HTTP_Form_Frame.FrmHTTPD.Visible = False
        If iretTXT <> HTTP_OK And iretTXT <> HTTP_GET_DEJA_EN_LOCAL Then
            MsgBox "Erreur lors de la copie de " & FichServeur & " " & HTTP_GET_ERREUR
            FctTrace ("=========================================================")
            FctTrace ("ChoixModele " & liberr)
            FctTrace ("=========================================================")
        End If
        If p_ModePublication = "Param" Then
            If iretTXT = HTTP_GET_LOCKE Then
                If Trim(liberr) = p_NumUtil Then
                    MsgBox "Vous êtes déjà en cours de modification sur ce rapport"
                Else
                    MsgBox "Le rapport est en cours de modification par " & P_GetNomUtil(Trim(liberr))
                    Unload Me
                End If
            ElseIf iretTXT = HTTP_OK Or iretTXT = HTTP_GET_DEJA_EN_LOCAL Then
                FctTrace ("ChoixModele Appel HTTP_Ajouter_Tbl 1")
                Call HTTP_Ajouter_Tbl(Replace(FichLocal, ".txt", p_PointExtensionXls), Replace(FichServeur, ".txt", p_PointExtensionXls), "Doc", True)
                FctTrace ("ChoixModele Appel HTTP_Ajouter_Tbl 2")
                Call HTTP_Ajouter_Tbl(FichLocal, FichServeur, "Doc", True)
                ChoixModele = Replace(FichLocal, ".txt", p_PointExtensionXls)
                FctTrace ("ChoixModele ChoixModele=" & ChoixModele)
            End If
        Else
            ChoixModele = Replace(FichLocal, ".txt", p_PointExtensionXls)
        End If
    End If
    
    p_nummodele = g_numModele
    
    FctTrace ("Fin ChoixModele")
    
    If Not IsMissing(PiloteExcelBis) Then
        Call HTTP_SetVoirProgression(False, PiloteExcelBis)
        Me.FrmHTTPD.Visible = False
    End If
    p_bfaire_RowColChange = True
    If p_ModePublication = "Publier" Then
        Call Vider_TEMP(False, p_bool_forcer_vider_temp, True)
    Else
        ' si temp existe pas => on ne le crée pas
        Call Vider_TEMP(True, p_bool_forcer_vider_temp, False)
    End If
    Call FaireRandom
    b_Chargement_Termine = True

End Function

Public Function FaireRandom()
    Dim s As String
    
    s = Format(Date, "yyyy_mm_dd") & "_" & Time()
    s = Replace(s, "/", "_")
    s = Replace(s, ":", "_")
    p_numRandom = s
End Function

Public Function VoirSiDroit(v_Trait As String, v_numRP As Long, v_numutil As Long)
    Dim sql As String, rs As rdoResultset
    Dim sdroits As String, sutil As String, strDroits As String
    Dim i As Integer
    Dim bool As Boolean
    Dim strUtil As String
    Dim nbB As Integer
    Dim adroit As Boolean
    
Début:
    nbB = 0
    sql = "select * from rapport_type where rp_num = " & v_numRP
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Function
    End If
    
    If Not rs.EOF Then
        sdroits = rs("rp_user_admin")
        For i = 0 To STR_GetNbchamp(sdroits, ";")
            ' Liste des utilisateurs avec leurs droits actuels
            If InStr(sdroits, "=") = 0 Then
                ' Ancien format : on oblige à passer par le paramétrage
                MsgBox "Vous devez indiquer des droits valides sur ce Tableau"
                Call GererDroits(v_numRP, sdroits)
                GoTo Début
            End If
            sutil = STR_GetChamp(sdroits, ";", i)
            If sutil <> "" Then
                strUtil = STR_GetChamp(sutil, "=", 0)
                strUtil = Replace(strUtil, "U", "")
                strDroits = STR_GetChamp(sutil, "=", 1)
                If p_NumUtil = p_SuperUser Then
                    adroit = True
                ElseIf strUtil <> p_NumUtil Then
                    GoTo NextUtil
                End If
                If strDroits <> "" Then
                    If v_Trait = "PARAM" Then
                        If STR_GetChamp(strDroits, ":", 0) = "PARAM" Then
                            bool = True
                            Exit For
                        End If
                    ElseIf v_Trait = "PUBLIER" Then
                        If STR_GetChamp(strDroits, ":", 1) = "PUBLIER" Then
                            bool = True
                            Exit For
                        End If
                    ElseIf v_Trait = "RESULTAT" Then
                        If STR_GetChamp(strDroits, ":", 2) = "RESULTAT" Then
                            bool = True
                            Exit For
                        End If
                    ElseIf v_Trait = "SIMUL" Then
                        If STR_GetChamp(strDroits, ":", 3) = "SIMUL" Then
                            bool = True
                            Exit For
                        End If
                    End If
                End If
            End If
NextUtil:
        Next i
    End If
    rs.Close
    VoirSiDroit = bool
End Function

Private Function GererDroits(v_numRP As Long, v_droits As String)
    
    Dim Frm As Form
    Dim sret As String
    Dim i As Integer, j As Integer, n As Integer
    Dim strUtil As String
    Dim s As String
    Dim strDroits As String
    Dim stmp As String
    Dim sRetUnDroit As String
    Dim sutil As String
    Dim lib As String
    Dim bDéjà As Boolean
    Dim sql As String, rs As rdoResultset
    Dim bParam As Boolean, bPublier As Boolean, bResultats As Boolean, bgenerer_loc As Boolean
    Dim nbParam As Integer
    Dim iPrem As Integer
    Dim sDtmp As String, sUtmp As String
    Dim numutil As Long
    Dim okUtil As Boolean
    
    ' v_droits = "U73=PARAM:PUBLIER:RESULTAT;U74=:PUBLIER:RESULTAT;"
    'v_droits = "U73;"
Début:
    If InStr(v_droits, "PARAM") = 0 Then
        nbParam = 0
    Else
        nbParam = 1
    End If
    
    Call CL_Init
    s = ""
    'MsgBox v_droits
    For i = 0 To STR_GetNbchamp(v_droits, ";")
        ' Liste des utilisateurs avec leurs droits actuels
        sutil = STR_GetChamp(v_droits, ";", i)
        If sutil <> "" Then
            strUtil = STR_GetChamp(sutil, "=", 0)
            strUtil = Replace(strUtil, "U", "")
            strDroits = STR_GetChamp(sutil, "=", 1)
            '
            If strDroits <> "" Or nbParam = 0 Then
                If p_NumUtil = p_SuperUser Then
                    bParam = True
                    bPublier = True
                    bResultats = True
                    bgenerer_loc = True
                ElseIf nbParam = 0 Then
                    bParam = True
                    bPublier = True
                    bResultats = True
                    bgenerer_loc = True
                Else
                    bParam = IIf(STR_GetChamp(strDroits, ":", 0) = "", False, True)
                    bPublier = IIf(STR_GetChamp(strDroits, ":", 1) = "", False, True)
                    bResultats = IIf(STR_GetChamp(strDroits, ":", 2) = "", False, True)
                    bgenerer_loc = IIf(STR_GetChamp(strDroits, ":", 3) = "", False, True)
                End If
                If bParam Then
                    strDroits = "PARAM:"
                Else
                    strDroits = ":"
                End If
                If bPublier Then
                    strDroits = strDroits & "PUBLIER:"
                Else
                    strDroits = strDroits & ":"
                End If
                If bResultats Then
                    strDroits = strDroits & "RESULTAT"
                Else
                    strDroits = strDroits & ":"
                End If
                If bgenerer_loc Then
                    strDroits = strDroits & "SIMUL"
                End If
                s = s & "U" & strUtil & "=" & strDroits & ";"
                If strUtil <> "" Then
                    okUtil = False
                    sql = "select U_Prenom, U_Nom, U_Actif from Utilisateur where U_Num=" & strUtil
                    If Odbc_SelectV(sql, rs) = P_ERREUR Then
                        MsgBox "GererDroits : Erreur sur " & sql
                    ElseIf rs.EOF Then
                        If strUtil = 0 Or strUtil = 1 Then
                            okUtil = True
                        Else
                            MsgBox "GererDroits : rs Vide pour utilisateur " & strUtil
                        End If
                    Else
                        okUtil = True
                    End If
                    If okUtil Then
                        If strUtil = 0 Or strUtil = 1 Then
                            lib = "Utilisateur ROOT"
                        Else
                            lib = rs("U_nom") & vbTab & rs("U_prenom")
                        End If
                        lib = lib & vbTab & IIf(bParam, "[ Paramétrer ]", " ")
                        lib = lib & vbTab & IIf(bPublier, "[ Publier ]", " ")
                        lib = lib & vbTab & IIf(bResultats, "[ Résultats ]", " ")
                        lib = lib & vbTab & IIf(bgenerer_loc, "[ Simulation ]", " ")
                        Call CL_AddLigne(lib, val(strUtil), strDroits, False)
                        n = n + 1
                    End If
                End If
            End If
        End If
    Next i
    
    v_droits = s
    
    Call CL_InitTitreHelp("Droits sur les Tableaux de Bord", "")
    Call CL_AddBouton("Paramétrer les droits", "", 0, 0, 2000)
    Call CL_AddBouton("Autre Utilisateur", "", 0, 0, 1500)
    Call CL_AddBouton("", p_chemin_appli + "\btnenregistrer.gif", 0, 0, 800)
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 800)
    If p_peut_creer Then
        Call CL_AddBouton("Droit de Création", "", 0, 0, 1500)
    End If
    Call CL_InitTaille(0, -15)
    ChoixListe.Show 1
    
    If CL_liste.retour = 0 Then ' Param
        strDroits = CL_liste.lignes(CL_liste.pointeur).tag
        strUtil = CL_liste.lignes(CL_liste.pointeur).num
ParamDirect:
        sRetUnDroit = GererUnDroit(strUtil, strDroits)
        If sRetUnDroit <> "" Then
            strDroits = ""
            For i = 0 To STR_GetNbchamp(v_droits, ";")
                s = STR_GetChamp(v_droits, ";", i)
                If s <> "" Then
                    ' Liste des utilisateurs avec leurs droits actuels
                    sutil = STR_GetChamp(s, "=", 0)
                    sutil = Replace(sutil, "U", "")
                    If sutil = strUtil Then
                        strDroits = strDroits & "U" & strUtil & "=" & sRetUnDroit & ";"
                    Else
                        strDroits = strDroits & STR_GetChamp(v_droits, ";", i) & ";"
                    End If
                End If
            Next i
            v_droits = strDroits
        End If
        GoTo Début
    End If
    If CL_liste.retour = 1 Then ' Nouvel Utilisateur
        p_siz_tblu = 0
        For i = 0 To STR_GetNbchamp(v_droits, ";")
            ' Liste des utilisateurs avec leurs droits actuels
            sutil = STR_GetChamp(v_droits, ";", i)
            If sutil <> "" Then
                strUtil = STR_GetChamp(sutil, "=", 0)
                strUtil = Replace(strUtil, "U", "")
                ReDim Preserve p_tblu(p_siz_tblu) As Long
                p_tblu(i) = strUtil
                p_siz_tblu = p_siz_tblu + 1
            End If
        Next i
        p_siz_tblu = p_siz_tblu - 1
        
        Set Frm = ChoixUtilisateur
        sret = ChoixUtilisateur.AppelFrm("Liste des personnes", _
                                                    "", _
                                                    True, _
                                                    False, _
                                                    True, _
                                                    True)
        Set Frm = Nothing
        iPrem = 0
        If sret <> "" Then
            strDroits = ""
            For i = 0 To STR_GetNbchamp(v_droits, ";")
                s = STR_GetChamp(v_droits, ";", i)
                If s <> "" Then
                    bDéjà = False
                    ' Liste des utilisateurs avec leurs droits actuels
                    sutil = STR_GetChamp(s, "=", 0)
                    sutil = Replace(sutil, "U", "")
                    ' voir si déjà
                    For j = 0 To UBound(p_tblu_sel)
                        'MsgBox p_tblu_sel(j)
                        If p_tblu_sel(j) = sutil Then
                            bDéjà = True
                            Exit For
                        End If
                    Next j
                    If Not bDéjà Then
                        strDroits = strDroits & STR_GetChamp(v_droits, ";", i) & ";"
                    Else
                        strDroits = strDroits & "U" & p_tblu_sel(j) & "=::RESULTAT:"
                    End If
                End If
            Next i
            ' Ajouter les nouveaux choisis
            For i = 0 To UBound(p_tblu_sel)
                bDéjà = False
                For j = 0 To STR_GetNbchamp(v_droits, ";")
                    s = STR_GetChamp(v_droits, ";", j)
                    If s <> "" Then
                        sutil = STR_GetChamp(s, "=", 0)
                        sutil = Replace(sutil, "U", "")
                        If p_tblu_sel(i) = sutil Then
                            bDéjà = True
                            Exit For
                        End If
                    End If
                Next j
                If Not bDéjà Then
                    strDroits = strDroits & "U" & p_tblu_sel(i) & "=::RESULTAT"
                    sDtmp = "::RESULTAT"
                    sUtmp = p_tblu_sel(i)
                    iPrem = 1
                End If
            Next i
            
            v_droits = strDroits
        End If
        ' Paramétrer les droits du premier
        If iPrem = 1 Then
            strDroits = sDtmp
            strUtil = sUtmp
            GoTo ParamDirect
        Else
            GoTo Début
        End If
    End If
    
    If CL_liste.retour = 2 Then
        ' enregistrer
        strDroits = ""
        For i = 0 To STR_GetNbchamp(v_droits, ";")
            ' Liste des utilisateurs avec leurs droits actuels
            sutil = STR_GetChamp(v_droits, ";", i)
            If sutil <> "" Then
                strUtil = STR_GetChamp(sutil, "=", 0)
                sRetUnDroit = STR_GetChamp(sutil, "=", 1)
                '
                If sRetUnDroit <> "" Then
                    bParam = IIf(STR_GetChamp(sRetUnDroit, ":", 0) = "", False, True)
                    bPublier = IIf(STR_GetChamp(sRetUnDroit, ":", 1) = "", False, True)
                    bResultats = IIf(STR_GetChamp(sRetUnDroit, ":", 2) = "", False, True)
                    bgenerer_loc = IIf(STR_GetChamp(sRetUnDroit, ":", 3) = "", False, True)
                    If strUtil <> "" Then
                        If bParam Or bPublier Or bResultats Or bgenerer_loc Then
                            strDroits = strDroits & STR_GetChamp(v_droits, ";", i) & ";"
                        End If
                    End If
                End If
            End If
        Next i
        
        If strDroits <> "" Then
            sql = "update rapport_type set rp_user_admin ='" & strDroits & "' where rp_num = " & v_numRP
            If Odbc_SelectV(sql, rs) = P_ERREUR Then
                MsgBox "GererDroits Erreur : " & sql
            End If
        End If
        GererDroits = strDroits
        Exit Function
    End If
    
    If CL_liste.retour = 3 Then
        Exit Function
    End If
    
    If CL_liste.retour = 4 Then
        sql = "select * from fonction where fct_code='CR_KRP'"
        Call Odbc_SelectV(sql, rs)
        If rs.EOF Then
            MsgBox "Fonction CR_KRP introuvable : " & sql
            Exit Function
        End If
        s = rs("fct_num")
        sql = "select * from fctok_util where fu_fctnum =" & rs("fct_num") '    & " and fu_unum<>" & p_NumUtil
        Call Odbc_SelectV(sql, rs)
        
        p_siz_tblu = 0
        While Not rs.EOF
            strUtil = rs("fu_unum")
            If strUtil <> "" Then
                ReDim Preserve p_tblu(p_siz_tblu) As Long
                p_tblu(p_siz_tblu) = strUtil
                p_siz_tblu = p_siz_tblu + 1
            End If
            rs.MoveNext
        Wend
        p_siz_tblu = p_siz_tblu - 1
        Set Frm = ChoixUtilisateur
        sret = ChoixUtilisateur.AppelFrm("Liste des personnes", _
                                                    "", _
                                                    True, _
                                                    False, _
                                                    True, _
                                                    True)
        Set Frm = Nothing
        On Error GoTo Fin
        For j = 0 To UBound(p_tblu_sel)
            'MsgBox p_tblu_sel(j)
            If p_tblu_sel(j) > 0 Then
                sql = "insert into fctok_util (fu_fctnum, fu_unum) values ( " & s & ", " & p_tblu_sel(j) & ")"
                Call Odbc_Cnx.Execute(sql)
            End If
        Next j
Fin:
        'numutil = InputBox
    End If
End Function

Private Function GererUnDroit(v_util As String, v_droits As String)
    Dim Frm As Form
    Dim sret As String
    Dim i As Integer, j As Integer, n As Integer
    Dim strUtil As String
    Dim strDroits As String
    Dim sutil As String
    Dim lib As String
    Dim sql As String, rs As rdoResultset
    Dim bParam As Boolean, bPublier As Boolean, bResultats As Boolean, bgenerer_loc As Boolean
    
    Call CL_Init
    Call CL_InitMultiSelect(True, False)
    Call CL_InitTitreHelp("Droits sur les Tableaux de Bord", "")
    If v_util <> "" Then
        sql = "select U_Prenom, U_Nom, U_Actif from Utilisateur where U_Num=" & v_util
        If Odbc_SelectV(sql, rs) = P_ERREUR Then
            MsgBox "GererunDroit : Erreur sur " & sql
        ElseIf rs.EOF Then
            MsgBox "GererunDroit : rs Vide"
        Else
            lib = rs("U_nom") & " " & rs("U_prenom")
            Call CL_InitTitreHelp("Droits pour " & lib, "")
        End If
    End If
    
    If v_droits <> "" Then
        bParam = IIf(STR_GetChamp(v_droits, ":", 0) = "", False, True)
        lib = "Paramétrer"
        Call CL_AddLigne(lib, i, "PARAM", bParam, True)
        bPublier = IIf(STR_GetChamp(v_droits, ":", 1) = "", False, True)
        lib = "Publier"
        Call CL_AddLigne(lib, i, "PUBLIER", bPublier, True)
        bResultats = IIf(STR_GetChamp(v_droits, ":", 2) = "", False, True)
        lib = "Résultats"
        Call CL_AddLigne(lib, i, "RESULTAT", bResultats, True)
        bgenerer_loc = IIf(STR_GetChamp(v_droits, ":", 3) = "", False, True)
        lib = "Simulation"
        Call CL_AddLigne(lib, i, "SIMUL", bgenerer_loc, True)
    End If
    
    Call CL_AddBouton("", p_chemin_appli + "\btnok.gif", vbKeyO, vbKeyF1, 800)
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 800)
    Call CL_InitTaille(0, -15)
    ChoixListe.Show 1
    If CL_liste.retour = 2 Then
        GererUnDroit = ""
        Exit Function
    End If
    
    v_droits = ""
    If CL_liste.lignes(0).selected Then v_droits = v_droits & "PARAM"
    v_droits = v_droits & ":"
    If CL_liste.lignes(1).selected Then v_droits = v_droits & "PUBLIER"
    v_droits = v_droits & ":"
    If CL_liste.lignes(2).selected Then v_droits = v_droits & "RESULTAT"
    v_droits = v_droits & ":"
    If CL_liste.lignes(3).selected Then v_droits = v_droits & "SIMUL"
    
    GererUnDroit = v_droits
End Function

Private Sub sauvegarder_modele(v_nummod)

    Dim FichServeur As String, FichSauve As String, ext As String
    
    ext = Format(Date, "yymmdd") & "-" & Format(Time, "hhmmss")
    FichServeur = p_Chemin_Modeles_Serveur & "/RP_" & v_nummod & p_PointExtensionXls
    If Not KF_FichierExiste(FichServeur) Then
        Exit Sub
    End If
        
    FichSauve = p_Chemin_Modeles_Serveur & "/Sauve/RP_" & v_nummod & "_" & ext & p_PointExtensionXls
    Call KF_CopierFichier(FichServeur, FichSauve)
    
    FichServeur = p_Chemin_Modeles_Serveur & "/RP_" & v_nummod & ".txt"
    FichSauve = p_Chemin_Modeles_Serveur & "/Sauve/RP_" & v_nummod & "_" & ext & ".txt"
    Call KF_CopierFichier(FichServeur, FichSauve)
    
End Sub

Private Function SupprimerModele(LeNum, LeTag)
    Dim nomCpyListe As String, strNomFic As String, strTitreFic As String
    Dim fpIn As Integer, n As Integer
    Dim Ligne As String
    Dim strHTTP As String
    Dim Session As String, numutil As String
    Dim sql As String, rs As rdoResultset
    Dim iret As Integer
    Dim liberr As String
    Dim FichServeur As String, FichLocal As String
    
    
    sql = "select * from rapport_type where rp_num = " & LeNum
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Function
    End If
    
    If rs.EOF Then
        MsgBox "Supprimer rs Vide " & sql
        Exit Function
    Else
        LeTag = rs("rp_titre_modele")
    End If
    
    If MsgBox("Supprimer définitivement le modèle '" & LeTag & "' ?", vbYesNo + vbDefaultButton2 + vbCritical, "Suppression d'un modèle") = vbYes Then
        Call sauvegarder_modele(LeNum)
        FichServeur = p_Chemin_Modeles_Serveur & "/" & LeTag
        ' supprimer dans la table
        sql = "delete from rapport_type where rp_num = " & LeNum
        If Odbc_SelectV(sql, rs) = P_ERREUR Then
            Exit Function
        End If
        
        FichServeur = p_Chemin_Modeles_Serveur & "/" & LeTag
        FichLocal = p_Chemin_Modeles_Local & "/" & LeTag
        ' Nouveauté
        FichServeur = p_Chemin_Modeles_Serveur & "/RP_" & LeNum & p_PointExtensionXls
        FichLocal = p_Chemin_Modeles_Local & "/RP_" & LeNum & p_PointExtensionXls
        Call FICH_FichierExiste(FichLocal)
            
        iret = HTTP_Appel_deletefile_simple(FichServeur, False, liberr)
                
        If iret = HTTP_OK Then
            ' Nouveauté
            FichServeur = Replace(FichServeur, p_PointExtensionXls, ".txt")
            FichLocal = Replace(FichLocal, p_PointExtensionXls, ".txt")
            If FICH_FichierExiste(FichLocal) Then
                Kill (FichLocal)
            End If
            
            iret = HTTP_Appel_deletefile_simple(FichServeur, False, liberr)
            MsgBox ("Le modèle " & LeTag & " a été supprimé")
        End If
    End If
End Function

Private Function ChoixModèleCopier()
    Dim bAfficher As Boolean
    Dim nomCpyListe As String, strNomFic As String, strTitreFic As String
    Dim fpIn As Integer, n As Integer
    Dim Ligne As String
    Dim strHTTP As String
    Dim Session As String, numutil As String
    Dim sql As String, rs As rdoResultset
    Dim nb As Integer, i As Integer
    
    Call CL_Init
    n = 0
    sql = "select * from rapport_type where rp_user_admin like '%U" & p_NumUtil & ";%'"
    sql = sql & " OR rp_user_admin like '%U" & p_NumUtil & "=%'"
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Function
    End If
    
    If Not rs.EOF Then
        While Not rs.EOF
            If InStr(rs("rp_user_admin"), "U" & p_NumUtil & ";") > 0 Or InStr(rs("rp_user_admin"), "U" & p_NumUtil & "=") > 0 Then
                bAfficher = False
                ' Droit de paramétrer ?
                bAfficher = VoirSiDroit("PARAM", rs("rp_num"), val(p_NumUtil))
                If bAfficher Then
                    strNomFic = rs("rp_chemin_modele")
                    strTitreFic = rs("rp_titre_modele")
                    Call CL_AddLigne(strTitreFic, n, strNomFic, False)
                    n = n + 1
                End If
            End If
            rs.MoveNext
        Wend
        rs.MoveFirst
    End If
    
    GoTo LabRV1
    
    nomCpyListe = p_Chemin_Modeles_Local & "\Liste_Modeles_Local.txt"
    
    fpIn = FreeFile
    FICH_OuvrirFichier nomCpyListe, FICH_LECTURE, fpIn

    Call CL_Init
    n = 0
    ' les autres
    While Not EOF(fpIn)
        Line Input #fpIn, Ligne
        If Ligne <> "" Then
            strNomFic = STR_GetChamp(Ligne, "|", 0)
            strTitreFic = STR_GetChamp(Ligne, "|", 1)
            If strTitreFic = "" Then strTitreFic = strNomFic
            Call CL_AddLigne(strTitreFic, n, strNomFic, False)
            n = n + 1
        End If
    Wend
    Close fpIn
    
LabRV1:
    If n = 0 Then
        ChoixModèleCopier = ""
        Exit Function
    End If
    
    Call CL_InitTitreHelp("Créer un modèle de rapport à partir de ...", "")
    Call CL_AddBouton("", p_chemin_appli + "\btnok.gif", vbKeyO, vbKeyF1, 0)
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
    Call CL_InitTaille(0, -15)
    ChoixListe.Show 1
    If CL_liste.retour = 1 Then
        ChoixModèleCopier = ""
        Exit Function
    End If
    
    If CL_liste.retour = 0 Then
        ' nouveau
        'ChoixModèleCopier =  p_Chemin_Modeles_Local & "/" & CL_liste.lignes(CL_liste.pointeur).tag
        ChoixModèleCopier = CL_liste.lignes(CL_liste.pointeur).tag
        Exit Function
    End If
End Function


Private Sub Form_KeyDown(KeyCode As Integer, Shift As Integer)

    If bModeFormule Then
        If KeyCode = 27 Then
            Call EscapeFormule
        End If
    ElseIf Me.FrmProp.Visible Then
'        Call txtPolice_KeyDown(KeyCode, Shift)
    Else
        If KeyCode = 187 Then   ' =
            Call grdCell_KeyDown(g_numfeuille, KeyCode, Shift)
            Exit Sub
        End If
        DerKeycode = KeyCode
        Me.LblHelp.ForeColor = 0
        Me.LblHelp.Visible = False
        If (KeyCode = vbKeyO And Shift = vbAltMask) Or KeyCode = vbKeyF1 Then
            KeyCode = 0
            'Call valider
        ElseIf KeyCode = vbKeyEscape Then
            KeyCode = 0
            Call quitter("")
        End If
    End If
End Sub

Private Sub Form_KeyPress(KeyAscii As Integer)

    If KeyAscii = vbKeyReturn Then
        KeyAscii = 0
        SendKeys "{TAB}"
    End If
        
End Sub

Private Sub Form_Load()

    g_mode_saisie = False
    g_form_active = False
    
End Sub

Private Sub Form_QueryUnload(Cancel As Integer, UnloadMode As Integer)

    If UnloadMode = 0 Then
        If Not quitter("") Then
            Cancel = True
        End If
    End If
    
End Sub

Private Sub Voir_Formulaire()
 
'ATTENTION : - il faut encoder lurl : remplacer ? par %F3 et & par %26
'            - il faut crypter le V_util pour éviter de demander à lutilisateur de sidentifier.
    Dim url As String
    Dim sql As String, rs As rdoResultset
    Dim NumFiltre As String, numfor As String
    Dim V_url As String
    Dim util As String
    Dim cnd_sversconf As String
    
    sql = "select * from formulaire,filtreform where formulaire.for_num = filtreform.ff_fornum " _
        & " and filtreform.ff_num = " & p_numfiltre_encours
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Sub
    End If
    numfor = rs("for_num").Value
    V_url = "form_saisie.php%3FV_numfor=" & numfor & "%26V_numdon=0"
    
    util = STR_CrypterNombre(Format(p_NumUtil, "#0000000"))
    
    If p_S_Vers_Conf <> "" Then
        cnd_sversconf = "&s_vers_conf=" & p_S_Vers_Conf
    End If
    url = "http://" & p_AdrServeur & "/publiweb/pident.php?in=divers" & cnd_sversconf & "&V_util=" & util & "&V_url=" & V_url
    ' Permet douvrir IE en grand avec lURL indiqué dans la variable url
    Shell "C:\Program Files\Internet Explorer\iexplore.exe " & url, vbMaximizedFocus


End Sub

Private Sub Ouvrir_TEMP()
    Dim chemin As String
    
    chemin = p_Chemin_Modeles_Local & "\Temp_" & g_numModele & p_PointExtensionXls
    If FICH_FichierExiste(chemin) Then
        Public_VerifOuvrir chemin, True, False, p_tbl_FichExcelOuverts
    End If
End Sub

Private Sub Ouvrir_IE_HTML()
    Dim chemin As String
    Dim pos As Integer
    Dim url As String
    
    chemin = p_Chemin_Résultats & "/Temp/Temp_" & g_numModele & "/Temp_" & g_numModele & "_" & p_NumUtil & ".html"
    
    If KF_FichierExiste(chemin) Then
        pos = InStr(chemin, "KaliRP")
        chemin = Mid(chemin, pos)
        url = "http://" & p_AdrServeur & "/documentation/" & chemin
        ' Permet douvrir IE en grand avec lURL indiqué dans la variable url
        Shell "C:\Program Files\Internet Explorer\iexplore.exe " & url, vbMaximizedFocus
    End If
End Sub

Private Sub Ouvrir_IE_Filtre()
 
'ATTENTION : - il faut encoder lurl : remplacer ? par %F3 et & par %26
'            - il faut crypter le V_util pour éviter de demander à lutilisateur de sidentifier.
    Dim url As String
    Dim sql As String, rs As rdoResultset
    Dim NumFiltre As String, numfor As String
    Dim V_url As String
    Dim util As String
    Dim cnd_sversconf As String
    
    NumFiltre = p_numfiltre_encours 'grdForm.TextMatrix(grdForm.row, GrdForm_FF_Num)
    sql = "select * from formulaire,filtreform where formulaire.for_num = filtreform.ff_fornum " _
        & " and filtreform.ff_num = " & NumFiltre
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Sub
    End If
    numfor = rs("for_num").Value
    V_url = "filtres%2Fchoixcrit_form_resp.php%3FV_adm=1%26V_numfor=" & numfor & "%26V_numfiltre=" & NumFiltre & "%26V_quitter=1 "
    
    util = STR_CrypterNombre(Format(p_NumUtil, "#0000000"))
    
    If p_S_Vers_Conf <> "" Then
        cnd_sversconf = "&s_vers_conf=" & p_S_Vers_Conf
    End If
    
    url = "http://" & p_AdrServeur & "/publiweb/pident.php?in=divers" & cnd_sversconf & "&V_util=" & util & "&V_url=" & V_url
    ' Permet douvrir IE en grand avec lURL indiqué dans la variable url
    Shell "C:\Program Files\Internet Explorer\iexplore.exe " & url, vbMaximizedFocus

End Sub

Private Sub Nouveau_IE_Filtre(v_numfor As Long)
 
'ATTENTION : - il faut encoder lurl : remplacer ? par %F3 et & par %26
'            - il faut crypter le V_util pour éviter de demander à lutilisateur de sidentifier.
    Dim url As String
    Dim sql As String, rs As rdoResultset
    Dim NumFiltre As String
    Dim V_url As String
    Dim util As String
    Dim cnd_sversconf As String
    
    If v_numfor > 0 Then GoTo direct
    
    If grdForm.Rows = 0 Then
        Exit Sub
    End If
    NumFiltre = p_numfiltre_encours 'grdForm.TextMatrix(grdForm.row, GrdForm_FF_Num)
    sql = "select * from formulaire,filtreform where formulaire.for_num = filtreform.ff_fornum " _
        & " and filtreform.ff_num = " & NumFiltre
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Exit Sub
    End If
    v_numfor = rs("for_num").Value
direct:
    V_url = "filtres/choixcrit_form_resp.php%3FV_adm=1%26V_numfor=" & v_numfor & "%26V_quitter=1 "
    
    util = STR_CrypterNombre(Format(p_NumUtil, "#0000000"))
    
    If p_S_Vers_Conf <> "" Then
        cnd_sversconf = "&s_vers_conf=" & p_S_Vers_Conf
    End If
    url = "http://" & p_AdrServeur & "/publiweb/pident.php?in=divers" & cnd_sversconf & "&V_util=" & util & "&V_url=" & V_url
    ' Permet douvrir IE en grand avec lURL indiqué dans la variable url
    Shell "C:\Program Files\Internet Explorer\iexplore.exe " & url, vbMaximizedFocus

' pour créer : http://localhost/publiweb/choixcrit_form_resp.php?V_adm=1&V_numfor=53&V_quitter=1

End Sub

Private Sub Ouvrir_IE_SQL(sql)
 
'ATTENTION : - il faut encoder lurl : remplacer ? par %F3 et & par %26
'            - il faut crypter le V_util pour éviter de demander à lutilisateur de sidentifier.
    Dim url As String
    Dim laSQL As String, rs As rdoResultset
    Dim NumFiltre As String, numfor As String
    Dim V_url As String
    Dim util As String
    Dim G As String
    Dim cnd_sversconf As String
    Dim pos As Integer
    Dim Cnd As String
    
    G = STR_GetChamp(sql, "|", 0)
    pos = InStr(G, "Where")
    Cnd = Mid(G, pos + 5)

    'numfiltre = grdForm.TextMatrix(grdForm.row, GrdForm_FF_Num)
    NumFiltre = STR_GetChamp(sql, "|", 1)
    laSQL = "select * from formulaire,filtreform where formulaire.for_num = filtreform.ff_fornum " _
        & " and filtreform.ff_num = " & NumFiltre
    If Odbc_SelectV(laSQL, rs) = P_ERREUR Then
        Exit Sub
    End If
    numfor = rs("for_num").Value
    V_url = "filtres/liste_form_resp.php%3FV_numfiltre=" & NumFiltre & "%26V_numfor=" & numfor & "%26V_etat=2%26V_etattermine=0" & "%26V_typaff=D%26V_quitter=1" & "%26V_RapportType=" & Cnd
    ' Permet douvrir IE en grand avec lURL indiqué dans la variable url
    util = STR_CrypterNombre(Format(p_NumUtil, "#0000000"))
    
    If p_S_Vers_Conf <> "" Then
        cnd_sversconf = "&s_vers_conf=" & p_S_Vers_Conf
    End If
    url = "http://" & p_AdrServeur & "/publiweb/pident.php?in=divers" & cnd_sversconf & "&V_util=" & util & "&V_url=" & V_url

    Shell "C:\Program Files\Internet Explorer\iexplore.exe " & url, vbMaximizedFocus
End Sub

Private Sub Form_Unload(Cancel As Integer)

    Call Décharger_Fichiers("FIN")
    
'    Dim nomIn As String, nomCpy As String
'    Dim strHTTP As String, sret As String
'    Dim iret As Integer
'    Dim strRepDest As String
'    Dim i As Integer
'    Dim liberr As String
'    Dim FichServeur As String, FichLocal As String
'    Dim CheminFichier_Serveur As String, NomFichier_Serveur As String, ExtensionFichier_Serveur As String
    
'    If BoolFaireSauveFenetre = True Then
'        Call enregistrer_fenetres
'    End If
'    '
'    Me.LblHelp.Visible = True
'    If p_bool_HTTP_Fichiers_Chargés Then
'        If Not IsMissing(PiloteExcelBis) Then
'            Me.FrmHTTPD.Visible = True
'            Call HTTP_SetVoirProgression(True, PiloteExcelBis)
'        End If
'        FctTrace ("======================   PiloteExcelBis Unload ===================================")
'        For i = 0 To UBound(p_tbl_HTTP_Fichiers_Chargés)
'            If p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Locké Then
'                ' ReCopier les fichiers chargés vers le serveur
'                FichServeur = p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Fullname_Serveur
'                FichLocal = p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Fullname_Local
'                ' chargement par HTTPD en lockant ou pas
'
'                'p_HTTP_Form_Frame.FrmHTTPD.Visible = True
'                'Set p_HTTP_Form_Menu = RapportType
'
'                iret = HTTP_Appel_PutFile(FichServeur, FichLocal, True, True, liberr)
'
'                'p_HTTP_Form_Frame.FrmHTTPD.Visible = False
'
'                If iret <> HTTP_OK Then
'                    MsgBox "Impossible de recopier le fichier " & FichLocal & " vers " & p_AdrServeur & " " & FichServeur & Chr(13) & Chr(10) & liberr
'                    FctTrace ("PiloteExcelBis Unload " & liberr)
'                Else
'                    p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Chargé = False
'                    p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Locké = False
'                    FctTrace ("Recopie de " & FichServeur & " vers " & FichLocal)
'                    ' Supprimer le fichier local
'                    Call FICH_EffacerFichier(FichLocal, True)
'                End If
'            ElseIf p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Chargé Then
'                FichLocal = p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Fullname_Local
'                Call FICH_EffacerFichier(FichLocal, True)
'            End If
'        Next i
'        FctTrace ("=========================================================")
'        If Not IsMissing(PiloteExcelBis) Then
'            Me.FrmHTTPD.Visible = False
'            Call HTTP_SetVoirProgression(False, PiloteExcelBis)
'        End If
'    End If
End Sub

Private Sub Décharger_Fichiers(v_Trait As String)
    Dim nomIn As String, nomcpy As String
    Dim strHTTP As String, sret As String
    Dim iret As Integer
    Dim strRepDest As String
    Dim i As Integer
    Dim liberr As String
    Dim FichServeur As String, FichLocal As String
    Dim CheminFichier_Serveur As String, NomFichier_Serveur As String, ExtensionFichier_Serveur As String
    
    If BoolFaireSauveFenetre = True Then
        Call enregistrer_fenetres
    End If
    '
    Me.LblHelp.Visible = True
    If p_bool_HTTP_Fichiers_Chargés Then
        If Not IsMissing(PiloteExcelBis) Then
            Me.FrmHTTPD.Visible = True
            Call HTTP_SetVoirProgression(True, PiloteExcelBis)
        End If
        FctTrace ("======================   PiloteExcelBis Décharger_Fichiers ===================================")
        For i = 0 To UBound(p_tbl_HTTP_Fichiers_Chargés)
            If p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Locké Then
                ' ReCopier les fichiers chargés vers le serveur
                FichServeur = p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Fullname_Serveur
                FichLocal = p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Fullname_Local
                ' chargement par HTTPD en lockant ou pas
                
                If v_Trait = "FIN" Then   ' on le délocke sur le serveur
                    Call HTTP_Appel_LockDelock_file(False, FichServeur, True, liberr)
                    FctTrace ("Délock de " & FichServeur & " => iret=" & iret)
                Else
                    iret = HTTP_Appel_PutFile(FichServeur, FichLocal, True, True, liberr)
                    FctTrace ("Recopie de " & FichServeur & " vers " & FichLocal & " => iret=" & iret)
                    ' on le garde locké sur le serveur
                    Call HTTP_Appel_LockDelock_file(True, FichServeur, True, liberr)
                    FctTrace ("Re-lock de " & FichServeur & " => iret=" & iret)
                End If
                
                If iret <> HTTP_OK Then
                    MsgBox "Impossible de recopier le fichier " & FichLocal & " vers " & p_AdrServeur & " " & FichServeur & Chr(13) & Chr(10) & liberr
                    FctTrace ("PiloteExcelBis Décharger_Fichiers " & liberr)
                Else
                    If v_Trait = "FIN" Then
                        p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Chargé = False
                        p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Locké = False
                        ' Supprimer le fichier local
                        Call FICH_EffacerFichier(FichLocal, True)
                    End If
                End If
            ElseIf p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Chargé Then
                If v_Trait = "FIN" Then
                    FichLocal = p_tbl_HTTP_Fichiers_Chargés(i).HTTP_Fullname_Local
                    Call FICH_EffacerFichier(FichLocal, True)
                End If
            End If
        Next i
        FctTrace ("=========================================================")
        If Not IsMissing(PiloteExcelBis) Then
            Me.FrmHTTPD.Visible = False
            Call HTTP_SetVoirProgression(False, PiloteExcelBis)
        End If
    End If
End Sub


Private Sub grdCell_Click(Index As Integer)
    Dim ret As Boolean
    Dim i_Ubound As Integer
    Dim i As Integer
    Dim iGrd As Integer
    Dim ij As Integer
    Dim LaCaption As String
    Dim stype As String
    Dim NomCellDest As String
    Dim errLoad  As Integer
    Dim iTab As Integer
    Dim LaColSel As Integer, LaRowSel As Integer
    Dim MenFType As String, lib As String, MenFToutes As String, MenFVal As String
    Dim BoolPeutSimul As Boolean
    Dim ANC_p_bfaire_RowColChange As Boolean
    Dim laS As String
    Dim j As Integer
    Dim nbre As Integer
    Dim sCol As String
    Dim sret As String
    Dim sTypeChart As Variant
    Dim trouve As Boolean
    
    Me.cmdImgS.Visible = False
    Me.cmdimgH.Visible = False
    Me.LblHelp.Caption = ""
    
    If Not b_Chargement_Termine Or Not p_bfaire_RowColChange Then
        Exit Sub
    End If

    stype = ""

    If InStr(NomFichierParam, ".") = 0 Then
        NomFichierParam = NomFichierParam & "."
    End If
    Public_VerifOuvrir NomFichierParam & p_ExtensionXls, False, True, p_tbl_FichExcelOuverts
    
    For i = 0 To 8
        Me.cmdTypeChp(i).Visible = False
    Next i
    
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdType = "CHP" Or tbl_fichExcel(i).CmdType = "RES" Then
            If tbl_fichExcel(i).CmdChpGridChargé = "Oui" Then
                On Error Resume Next
                Me.grdCondChamp(tbl_fichExcel(i).CmdChpGridIndice).Visible = False
            End If
        End If
    Next i
    
    LaColSel = grdCell(Index).ColSel
    LaRowSel = grdCell(Index).RowSel
    ANC_p_bfaire_RowColChange = p_bfaire_RowColChange
    
    cmd(CMD_VOIR_SQL).Visible = False
    cmd(CMD_VOIR_LISTE).Visible = False
    
    ' Ajout de lignes ou de colonnes
    'If Button_GrdCell = 2 And (grdCell(Index).ColSel = 1 Or grdCell(Index).RowSel = 1) Then
    '    PopupMenu Me.MnuLigCol
    'End If
    
    On Error GoTo Err_Suite2
    i = UBound(tbl_fichExcel())
    GoTo Suite2
Err_Suite2:
    Resume Continu_2
Suite2:
    On Error GoTo 0
    p_i_tabExcel = 0
    ' voir si cet emplacement est déjà utilisé dans le tableau
    sCol = FctStrColDest(grdCell(Index).ColSel)
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdType = "CHP" Or tbl_fichExcel(i).CmdType = "RES" Then
            If tbl_fichExcel(i).CmdType = "RES" Or (tbl_fichExcel(i).CmdFenNum = Index And (tbl_fichExcel(i).CmdChpNum > 0 Or tbl_fichExcel(i).CmdChpNum <= -10)) Then
                'Debug.Print i & "=" & tbl_fichExcel(i).CmdX & " " & Mid(Alpha, grdCell(index).ColSel, 1) & " : " & tbl_fichExcel(i).CmdY & " " & grdCell(index).RowSel
                If tbl_fichExcel(i).CmdX = sCol And tbl_fichExcel(i).CmdY = grdCell(Index).RowSel Then
                    ' il y est déja
                    stype = "tableau"
                    p_i_tabExcel = i
                    iTab = i
                    Exit For
                End If
            End If
        End If
    Next i
    If p_i_tabExcel <> p_i_tabExcel_pour_Copie Then
        cmd(CMD_CPY_CONDCHAMP).BackColor = P_GRIS_CLAIR
        cmd(CMD_CPY_CONDCHAMP).tag = ""
    End If
Continu_2:
    If stype = "tableau" Then
        If Me.MnuChpRelier.tag = "" Then Me.MnuChpRelier.tag = 0
        If Me.MnuChpRelier.tag > 0 Then
            ' le relier à ce champ
            g_ChpRelier = tbl_fichExcel(p_i_tabExcel).CmdFenNum & ";" & tbl_fichExcel(p_i_tabExcel).CmdX & ";" & tbl_fichExcel(p_i_tabExcel).CmdY
            If Me.MnuChpRelier.tag <> p_i_tabExcel Then
                tbl_fichExcel(Me.MnuChpRelier.tag).CmdChpRelierà = g_ChpRelier
                Me.MnuChpRelier.tag = 0
                g_ChpRelier = ""
            End If
        End If
        Me.MnuChpCopier.Enabled = True
        Me.MnuChpCopier.tag = 0
        Me.MnuChpColler.Enabled = False
        Me.MnuChpCollerSelection.Enabled = False
        Me.MnuChpDeplacerSelection.Enabled = False
        On Error Resume Next
        i_Ubound = -1
        i_Ubound = UBound(tb_Selection)
        If i_Ubound >= 0 Then
            Me.MnuChpCollerSelection.Enabled = True
            Me.MnuChpDeplacerSelection.Enabled = True
        End If

        ' mettre le grdForm en surbrillance
        ' MODIF LN 27/07/11
        If tbl_fichExcel(p_i_tabExcel).CmdType = "CHP" Then
            For i = 0 To grdForm.Rows - 1
                trouve = False
                If grdForm.TextMatrix(i, GrdForm_FF_Num) = tbl_fichExcel(iTab).CmdFormNum Then
                    If grdForm.TextMatrix(i, GrdForm_FF_NumIndice) = tbl_fichExcel(iTab).CmdFormIndice Then
                        grdForm.TextMatrix(i, GrdForm_FF_Titre) = grdForm.TextMatrix(i, GrdForm_FF_Titre)
                        grdForm.row = i
                        grdForm.col = GrdForm_FF_Titre
                        grdForm.CellFontBold = True
                        grdForm.col = GrdForm_FF_Lib
                        grdForm.CellFontBold = True
                        grdForm.col = 0
                        grdForm.col = GrdForm_FF_Image
                        grdForm.ColSel = grdForm.Cols - 1
                        Set grdForm.CellPicture = imglst.ListImages(IMG_BOULEBF).Picture
                        For j = 0 To grdForm.Cols - 1
                            grdForm.col = j
                            grdForm.CellBackColor = grdForm.BackColorFixed
                        Next j
                        grdForm.TopRow = i
                        If p_numindice_encours <> tbl_fichExcel(iTab).CmdFormIndice Or _
                            p_numfiltre_encours <> tbl_fichExcel(iTab).CmdFormNum Then
                            p_ANC_numindice_encours = p_numindice_encours
                            p_ANC_numfiltre_encours = p_numfiltre_encours
                            p_numindice_encours = tbl_fichExcel(iTab).CmdFormIndice
                            p_numfiltre_encours = tbl_fichExcel(iTab).CmdFormNum
                            grdForm_Click
                        End If
                        trouve = True
                    End If
                End If
                If Not trouve Then
                    grdForm.TextMatrix(i, GrdForm_FF_Titre) = grdForm.TextMatrix(i, GrdForm_FF_Titre)
                    grdForm.row = i
                    grdForm.col = GrdForm_FF_Image
                    Set grdForm.CellPicture = imglst.ListImages(IMG_BOULEBC).Picture
                    grdForm.col = GrdForm_FF_Titre
                    grdForm.CellFontBold = False
                    grdForm.col = GrdForm_FF_Lib
                    grdForm.CellFontBold = False
                    For j = 0 To grdForm.Cols - 1
                        grdForm.col = j
                        grdForm.CellBackColor = grdForm.BackColorBkg
                    Next j
                End If
            Next i
        End If
    Else
        Me.MnuChpCopier.Enabled = False
        If val(Me.MnuChpCopier.tag) > 0 Then
            Me.MnuChpColler.Enabled = True
        Else
            'Me.MnuChpCopier.Enabled = True
            Me.MnuChpColler.Enabled = False
        End If
        On Error Resume Next
        i_Ubound = -1
        i_Ubound = UBound(tb_Selection)
        If i_Ubound >= 0 Then
            Me.MnuChpCollerSelection.Enabled = True
            Me.MnuChpDeplacerSelection.Enabled = True
        End If
    End If
    'grdForm.SetFocus
    'MsgBox grdCell(Index).ColSel & " " & grdCell(Index).RowSel
    grdCell(Index).ColSel = LaColSel
    grdCell(Index).RowSel = LaRowSel
    'MsgBox grdCell(Index).ColSel & " " & grdCell(Index).RowSel
    If tbl_fichExcel(p_i_tabExcel).CmdChpRelierà <> "" Then
        BoolPeutSimul = False
    ElseIf grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULE).Picture Then
        BoolPeutSimul = False
    ElseIf grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_CPLUS).Picture Then
        BoolPeutSimul = True
    ElseIf grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_C).Picture Then
        BoolPeutSimul = True
    ElseIf grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_FPLUS).Picture Then
        BoolPeutSimul = True
    ElseIf grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_F).Picture Then
        BoolPeutSimul = True
    ElseIf grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBF).Picture Then
        BoolPeutSimul = True
    ElseIf grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBF_PLUS).Picture Then
        BoolPeutSimul = True
    ElseIf grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBC).Picture Then
        BoolPeutSimul = True
    ElseIf grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBC_PLUS).Picture Then
        BoolPeutSimul = True
    ElseIf grdCell(Index).CellPicture = imglst.ListImages(IMG_CHP_LOUPER).Picture Then
        BoolPeutSimul = True
    ElseIf grdCell(Index).CellPicture = imglst.ListImages(IMG_CHP_LOUPEB).Picture Then
        BoolPeutSimul = True
    ElseIf tbl_fichExcel(p_i_tabExcel).CmdType = "RES" Then
        BoolPeutSimul = True
    End If
    
    'si c'est un champs d'un filtre (BOULE ou BOULER)
    Dim XPère As Integer, YPère As Integer
    XPère = -1
    YPère = -1
    ret = False
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULE).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_FPLUS).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_F).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_CPLUS).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_C).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBC).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBF).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBC_PLUS).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBF_PLUS).Picture Then ret = True
    Me.cmd(CMD_MODE_LIEN).Visible = False
    If ret Then
        'chercher son 'Père'
        If p_bool_tbl_cell Then
            For ij = 0 To UBound(tbl_cell())
                If tbl_cell(ij).CellFeuille = Index Then
                    If tbl_cell(ij).CellX = grdCell(Index).ColSel And tbl_cell(ij).CellY = grdCell(Index).RowSel Then
                        XPère = tbl_cell(ij).cellXPère
                        YPère = tbl_cell(ij).cellYPère
                        If tbl_cell(ij).CellLink <> "" Then
                            ' MsgBox grdCell(Index).TextMatrix(LaRowSel, LaColSel)
                            If val(grdCell(Index).TextMatrix(LaRowSel, LaColSel)) > 0 Then
                                If Me.ChkExpert.Value = 1 Then Me.cmd(CMD_MODE_LIEN).Visible = True
                                Me.cmd(CMD_MODE_LIEN).Picture = Me.PictureLien(0).Picture
                                Me.cmd(CMD_MODE_LIEN).tag = tbl_cell(ij).cellNumFiltre & "|" & tbl_cell(ij).CellLink
                            End If
                        End If
                        Exit For
                    End If
                End If
            Next ij
        End If
        If XPère > -1 And YPère > -1 Then
            ' chercher le bon itab dans tbl_fichExcel
            sCol = FctStrColDest(XPère)
            For i = 0 To UBound(tbl_fichExcel())
                If tbl_fichExcel(i).CmdType = "CHP" Then
                    If tbl_fichExcel(i).CmdFenNum = Index And (tbl_fichExcel(i).CmdChpNum > 0 Or tbl_fichExcel(i).CmdChpNum <= -10) Then
                        'Debug.Print i & "=" & tbl_fichExcel(i).CmdX & " " & Mid(Alpha, grdCell(index).ColSel, 1) & " : " & tbl_fichExcel(i).CmdY & " " & grdCell(index).RowSel
                        If tbl_fichExcel(i).CmdX = sCol And tbl_fichExcel(i).CmdY = YPère Then
                            ' Voici son père
                            iTab = i
                            Exit For
                        End If
                    End If
                End If
            Next i
            
            On Error Resume Next
            If p_numindice_encours = tbl_fichExcel(iTab).CmdFormIndice And p_numfiltre_encours = tbl_fichExcel(iTab).CmdFormNum Then
                GoTo lab_suiv2
            End If
            p_numindice_encours = tbl_fichExcel(iTab).CmdFormIndice
            p_numfiltre_encours = tbl_fichExcel(iTab).CmdFormNum
            ' mettre le grdForm en surbrillance
            For i = 0 To grdForm.Rows - 1
                ' MODIF LN 27/07/11
'                grdForm.TextMatrix(i, GrdForm_FF_Titre) = grdForm.TextMatrix(i, GrdForm_FF_Titre)
'                grdForm.row = i
'                grdForm.col = GrdForm_FF_Titre
'                grdForm.CellFontBold = False
'                grdForm.col = GrdForm_FF_Lib
'                grdForm.CellFontBold = False
'                grdForm.col = GrdForm_FF_Image
'                Set grdForm.CellPicture = imglst.ListImages(IMG_BOULEBC).Picture
                If grdForm.TextMatrix(i, GrdForm_FF_Num) = tbl_fichExcel(iTab).CmdFormNum Then
                    If grdForm.TextMatrix(i, GrdForm_FF_NumIndice) = tbl_fichExcel(iTab).CmdFormIndice Then
                        grdForm.TextMatrix(i, GrdForm_FF_Titre) = grdForm.TextMatrix(i, GrdForm_FF_Titre)
                        grdForm.row = i
                        grdForm.col = GrdForm_FF_Titre
                        grdForm.CellFontBold = True
                        grdForm.col = GrdForm_FF_Lib
                        grdForm.CellFontBold = True
                        grdForm.col = GrdForm_FF_Image
                        Set grdForm.CellPicture = imglst.ListImages(IMG_BOULEBF).Picture
                        grdForm_Click
                     Else
                        grdForm.TextMatrix(i, GrdForm_FF_Titre) = grdForm.TextMatrix(i, GrdForm_FF_Titre)
                        grdForm.row = i
                        grdForm.col = GrdForm_FF_Titre
                        grdForm.CellFontBold = False
                        grdForm.col = GrdForm_FF_Lib
                        grdForm.CellFontBold = False
                        grdForm.col = GrdForm_FF_Image
                        Set grdForm.CellPicture = imglst.ListImages(IMG_BOULEBC).Picture
                    End If
                End If
            Next i
lab_suiv2:
        End If
    End If
    
    grdCell(Index).ColSel = LaColSel
    grdCell(Index).RowSel = LaRowSel
    
    Me.LblHelp.Visible = False
    ret = False
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULE).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBC).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_CPLUS).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_C).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_FPLUS).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_F).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBC_PLUS).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBF).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBF_PLUS).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_CHP_LOUPER).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_CHP_LOUPEB).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULE_ERREUR).Picture Then ret = True
    
    If ret Then
        If p_bool_tbl_cell Then
            For ij = 0 To UBound(tbl_cell())
                If tbl_cell(ij).CellFeuille = Index Then
                    If tbl_cell(ij).CellX = grdCell(Index).ColSel And tbl_cell(ij).CellY = grdCell(Index).RowSel Then
                        If tbl_cell(ij).cellSQL <> "" Then
                            cmd(CMD_VOIR_SQL).Visible = True
                            'cmd(CMD_VOIR_LISTE).Visible = True
                            cmd(CMD_VOIR_LISTE).tag = ij
                            cmd(CMD_VOIR_SQL).tag = tbl_cell(ij).cellSQL & "|" & tbl_cell(ij).cellNumFiltre
                        Else
                            cmd(CMD_VOIR_SQL).Visible = False
                            'cmd(CMD_VOIR_LISTE).Visible = False
                        End If
                        
                        
                        If g_modeSQL_LIB = "SQL" And tbl_cell(ij).cellSQL <> "" Then
                            ' on est en mode SQL
                            If cmd(CMD_VOIR_SQL).tag <> "" Then
                                Me.LblHelp.Visible = True
                                Me.LblHelp.Caption = tbl_cell(ij).cellSQL
                            Else
                                Me.LblHelp.Visible = False
                            End If
                        ElseIf g_modeSQL_LIB = "LIB" Or g_modeSQL_LIB = "" Or tbl_cell(ij).cellSQL = "" Then
                            ' on est en mode LIB
                            Me.LblHelp.Visible = True
                            LaCaption = tbl_cell(ij).CellTag & Chr(13) & Chr(10) & tbl_cell(ij).CellPortee
                            Me.LblHelp.Caption = LaCaption
                            Me.LblHelp.Visible = True
                            ' MODIF LN 26/12/11
                            If ChkExpert.Value = 1 Then
                                MnuSimulCellLib1.Caption = STR_GetChamp(tbl_cell(ij).CellTag, "item", 0) & ")"
                                MnuSimulCellLib2.Caption = "-> " & tbl_cell(ij).CellPortee
                                MnuSimulCellLib3.Caption = "-> " & tbl_cell(ij).cellSQL
                            Else
                                MnuSimulCellLib1.Visible = False
                                MnuSimulCellLib2.Visible = False
                                MnuSimulCellLib3.Visible = False
                            End If
                            'BoolPeutSimul = True
                        End If
                        Exit For
                    End If
                End If
            Next ij
        End If
        
        ' afficher le type de champ
        ret = False
        If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULE).Picture Then ret = True
        If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBC).Picture Then ret = True
        If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_CPLUS).Picture Then ret = True
        If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_C).Picture Then ret = True
        If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_FPLUS).Picture Then ret = True
        If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_F).Picture Then ret = True
        If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBC_PLUS).Picture Then ret = True
        If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBF).Picture Then ret = True
        If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBF_PLUS).Picture Then ret = True
        
        If ret Then
            'MsgBox tbl_fichExcel(iTab).CmdChpNum
            Call MettreImageTypeChamp(True, tbl_fichExcel(iTab).CmdChpNum)
        Else
            Call MettreImageTypeChamp(False, 0)
        End If
        
        
        Me.LblHelp.Visible = True
        'Me.LblHelp.Caption = LaCaption
        p_bfaire_RowColChange = False
        grdCell(Index).ColSel = LaColSel
        grdCell(Index).RowSel = LaRowSel
        grdCell(Index).col = LaColSel
        grdCell(Index).row = LaRowSel
        p_bfaire_RowColChange = ANC_p_bfaire_RowColChange

    Else
        NomCellDest = FctFaitNomCellDest(grdCell(Index).ColSel, grdCell(Index).RowSel)
        If Exc_obj.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(NomCellDest).HasFormula Then
            stype = "formule"
        Else
            If Exc_obj.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(NomCellDest).Value <> "" Then
                stype = "value"
            End If
        End If
    End If
    If tbl_fichExcel(p_i_tabExcel).CmdType = "RES" Then
        Me.LblHelp.Visible = True
        Me.LblHelp.Caption = "Résultat d'un Rapport : " & tbl_fichExcel(p_i_tabExcel).CmdChpRelierà
    ElseIf stype = "formule" Then
        Me.LblHelp.Visible = True
        Me.LblHelp.Caption = "Excel Formule : " & Exc_obj.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(NomCellDest).FormulaLocal
    ElseIf stype = "value" Then
        Me.LblHelp.Visible = True
        Me.LblHelp.Caption = "Excel Texte : " & Exc_obj.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(NomCellDest).Value
    End If
    
    grdCell(Index).SetFocus
    
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_CHP_LOUPER).Picture Or grdCell(Index).CellPicture = imglst.ListImages(IMG_CHP_LOUPEB).Picture Then
        MnuSimulCellLib1.Caption = "Liste de Champs :"
        If InStr(tbl_fichExcel(iTab).cmdTypeChp, "New") > 0 Then
            MnuSimulCellLib1.Caption = MnuSimulCellLib1.Caption & " -> " & "Les données seront placées dans une Feuille Excel à part"
        ElseIf InStr(tbl_fichExcel(iTab).cmdTypeChp, "Ici") > 0 Then
            MnuSimulCellLib1.Caption = MnuSimulCellLib1.Caption & " -> " & "Les données seront placées dans cette Feuille Excel"
        End If
        MnuSimulCellLib2.Caption = "Données en colonne, autant de lignes que la requête en contiendra"
        MnuSimulCellLib3.Caption = ""
    End If
    If BoolPeutSimul Then
        p_Simul_ITab = iTab
        On Error Resume Next
        p_Simul_IFen = tbl_fichExcel(iTab).CmdFenNum
    End If
    If BoolPeutSimul And Button_GrdCell = 2 Then
        p_Simul_ITab = iTab
        p_Simul_IFen = tbl_fichExcel(iTab).CmdFenNum
        If grdForm.Rows = 1 Then
            Me.MnuSimulCellChgFiltreTousChp.Enabled = False
            Me.MnuSimulCellChgFiltreFenChp.Enabled = False
            Me.MnuSimulCellChgFiltreUnChp.Enabled = False
            Me.MnuSimulCellChgFiltreUnChp.Enabled = True
        Else
            Me.MnuSimulCellChgFiltreTousChp.Enabled = True
            Me.MnuSimulCellChgFiltreFenChp.Enabled = True
            Me.MnuSimulCellChgFiltreUnChp.Enabled = True
            Me.MnuSimulCellChgFiltreDesChp.Enabled = True
        End If
        Me.MnuLigCol.Visible = True
        Me.MnuLigCol.Caption = "Ajouter lignes ou colonnes"
        PopupMenu MnuSimulCell
        Exit Sub
    'ElseIf Button_GrdCell = 2 And (grdCell(Index).ColSel = 1 Or grdCell(Index).RowSel = 1) Then
    ElseIf Button_GrdCell = 2 Then
        p_dansExcel = True
        PopupMenu MnuSimulCell  ' Me.MnuLigCol
        Exit Sub
    End If
        
    ret = False
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBC).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBC_PLUS).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_CPLUS).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_C).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_FPLUS).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_SQL_SELECT_F).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBF).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULEBF_PLUS).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_CHP_LOUPER).Picture Then ret = True
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_CHP_LOUPEB).Picture Then ret = True
    If tbl_fichExcel(p_i_tabExcel).CmdType = "RES" Then ret = True
        
    Me.cmd(CMD_MODE_FORMULE).Visible = False
    Me.cmd(CMD_MODE_POLICE).Visible = False
    Me.cmd(CMD_MODE_CHAMP).Visible = False
    cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
    If grdCell(Index).CellPicture = imglst.ListImages(IMG_CHP_LOUPER).Picture Or grdCell(Index).CellPicture = imglst.ListImages(IMG_CHP_LOUPEB).Picture Then
        cmd(CMD_MODE_GRAPHIQUE).Visible = False
    End If
    
    Me.cmd(CMD_MODE_SIMUL).Visible = False
    
    If stype = "tableau" Or ret Then
        ' mettre le grid des conditions sur ce champ en visible et enlever celui du GrdCond
        Me.grdCondChamp(0).Visible = False
        'GoTo Suite_Temporaire
        On Error GoTo Pas_Loadé
        If tbl_fichExcel(iTab).CmdChpGridIndice = 0 Then
            GoTo Pas_Loadé
        Else
            GoTo Déjà_Loadé
        End If
Pas_Loadé:
        Faire_Load_GrdCondChp tbl_fichExcel(iTab).CmdChpNum, tbl_fichExcel(iTab).CmdChpIndice, iTab
Déjà_Loadé:
        On Error GoTo 0
        ' mettre tous les autres en invisibles
        For i = 0 To UBound(tbl_fichExcel())
            If tbl_fichExcel(i).CmdType = "CHP" Then
                If tbl_fichExcel(i).CmdChpGridChargé = "Oui" Then
                    On Error Resume Next
                    Me.grdCondChamp(tbl_fichExcel(i).CmdChpGridIndice).Visible = False
                End If
            End If
        Next i
        '
        On Error GoTo Lab_Suite
        For i = 0 To 10000
            Me.grdCondChamp(i).Visible = False
        Next i
Lab_Suite:
        On Error Resume Next
        If tbl_fichExcel(iTab).CmdChpGridChargé = "Oui" Then
            Me.grdCondChamp(tbl_fichExcel(iTab).CmdChpGridIndice).Visible = True
        End If
        
        grdDem.Visible = False
        cmd(CMD_AJOUT_DEM).Visible = False
        cmd(CMD_SUPPR_DEM).Visible = False
        cmd(CMD_PRM_DEMANDER).Visible = cmd(CMD_SUPPR_DEM).Visible
        Label3.Visible = False
        
        Dim x As Integer
        For x = 0 To grdForm.Rows - 1
            'iGrd = (grdForm.TextMatrix(x, GrdForm_FF_Num) * 100) + grdForm.TextMatrix(x, GrdForm_FF_NumIndice)
            iGrd = FctAttribIndex(grdForm.TextMatrix(x, GrdForm_FF_Num), grdForm.TextMatrix(x, GrdForm_FF_NumIndice))
            grdCond(iGrd).Visible = False
        Next x
'Suite_Temporaire:
        'iGrd = (grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num) * 100) + grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice)
        iGrd = FctAttribIndex(grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num), grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice))
        grdCond(iGrd).Visible = False
        cmd(CMD_SUPPR_COND).Visible = False
        cmd(CMD_PRM_COND).Visible = False
        '
'GoTo Suite_Temporaire2
        
        'seulement si vrai cond et pas liste filtre
        If tbl_fichExcel(iTab).CmdChpGridChargé = "Oui" Then
            If Mid(tbl_fichExcel(iTab).cmdTypeChp, 1, 6) = "Liste=" Then
                cmd(CMD_AJOUT_COND_CHAMP).Visible = False
                cmd(CMD_SUPPR_COND_CHAMP).Visible = False
            Else
                cmd(CMD_AJOUT_COND_CHAMP).Visible = True
                cmd(CMD_SUPPR_COND_CHAMP).Visible = IIf(grdCondChamp(tbl_fichExcel(iTab).CmdChpGridIndice).Rows = 0, False, True)
            End If
        End If
        '
        Me.LabelF0.Visible = False
        Me.LabelF1.Visible = False
        Me.LabelF2.Visible = False
        Me.LabelC1.Visible = True
        If Mid(tbl_fichExcel(iTab).cmdTypeChp, 1, 6) = "Liste=" Then
            If InStr(tbl_fichExcel(iTab).cmdTypeChp, "Ici") > 0 Then
                Set Me.cmd(CMD_MODE_CHAMP).Picture = Me.imglst.ListImages(IMG_CHP_LOUPEB).Picture
            Else
                Set Me.cmd(CMD_MODE_CHAMP).Picture = Me.imglst.ListImages(IMG_CHP_LOUPER).Picture
            End If
            Me.LabelC1.Caption = "Liste de Champs"
            Me.grdCondChamp(tbl_fichExcel(iTab).CmdChpGridIndice).ForeColor = &HC000&
            Me.LabelC1.ForeColor = &HC000&
            LaCaption = "Les champs indiqués seront ramenés dans votre simulation sous forme d'une liste"
            Me.LblHelp.Caption = LaCaption
            Me.LblHelp.Visible = True
        Else
            Set Me.cmd(CMD_MODE_CHAMP).Picture = Me.imglst.ListImages(IMG_BOULEBF).Picture
            Me.LabelC1.Caption = "Les conditions sur ce Champ"
            Me.grdCondChamp(tbl_fichExcel(iTab).CmdChpGridIndice).ForeColor = &HC0&
            Me.LabelC1.ForeColor = &HC0&
            If grdCondChamp(tbl_fichExcel(iTab).CmdChpGridIndice).Rows > 0 Then
                LaCaption = "Ce champ comporte des conditions supplémentaires par rapport au filtre d'origine"
                Me.LblHelp.Caption = LaCaption & Chr(13) & Chr(10) & Me.LblHelp.Caption
            End If
            Me.LblHelp.Visible = True
        End If
        ' Nouveau bouton
        Me.cmd(CMD_MODE_POLICE).Visible = False
        Me.cmd(CMD_MODE_FORMULE).Visible = False
        Me.cmd(CMD_MODE_CHAMP).Visible = False
        If tbl_fichExcel(p_i_tabExcel).CmdType = "RES" Then
            cmd(CMD_MODE_GRAPHIQUE).Visible = False
        Else
            cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
        End If
        Me.cmd(CMD_MODE_SIMUL).Visible = False
        Me.FrmFormule.Visible = False
        Me.FrmProp.Visible = False
        If tbl_fichExcel(p_i_tabExcel).CmdType = "RES" Then
            Me.cmd(CMD_MODE_CHAMP).Visible = False
        Else
            Me.cmd(CMD_MODE_CHAMP).Visible = True
        End If
        'cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
        If tbl_fichExcel(p_i_tabExcel).CmdType = "RES" Then
            GoTo LabSuite
        End If
        If grdCell(Index).CellPicture = imglst.ListImages(IMG_CHP_LOUPER).Picture Or grdCell(Index).CellPicture = imglst.ListImages(IMG_CHP_LOUPEB).Picture Then
            cmd(CMD_MODE_GRAPHIQUE).Visible = False
        End If
        ' voir si pas déjà le graphique
        Set Exc_wrk = Exc_obj.ActiveWorkbook
        Exc_wrk.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Activate
        
        If VoirSiChartExiste("Type", sTypeChart, g_numfeuille, iTab, sret) >= 0 Then
            cmd(CMD_MODE_GRAPHIQUE).Visible = True
            Me.MnuChpGraphiqueRenommer.Visible = True
            If sTypeChart = xlPie Then
                Me.cmdImgS.Visible = True
                Me.cmdimgH.Visible = False
            Else
                Me.cmdImgS.Visible = False
                Me.cmdimgH.Visible = False
            End If
        Else
            Me.MnuChpGraphiqueRenommer.Visible = False
            cmd(CMD_MODE_GRAPHIQUE).Visible = True
        End If
        
        If Me.ChkExpert.Value = 1 Then Me.cmd(CMD_MODE_SIMUL).Visible = True
        
        laS = VoirSiLien(LaColSel, LaRowSel, Index)
        If laS <> "" Then
            If Me.ChkExpert.Value = 1 Then Me.cmd(CMD_MODE_LIEN).Visible = True
            Me.cmd(CMD_MODE_LIEN).tag = laS
        Else
            Me.cmd(CMD_MODE_LIEN).Visible = False
        End If
        Me.cmd(CMD_MODE_CHAMP).Top = grdCell(Index).Top + p_YgrdCell - 500
        Me.cmd(CMD_MODE_CHAMP).left = p_XgrdCell
        Me.cmd(CMD_MODE_SIMUL).Top = Me.cmd(CMD_MODE_CHAMP).Top
        Me.cmd(CMD_MODE_SIMUL).left = Me.cmd(CMD_MODE_CHAMP).left + Me.cmd(CMD_MODE_CHAMP).Width + 5
        If Me.cmd(CMD_MODE_SIMUL).Visible Then
            Me.cmd(CMD_MODE_GRAPHIQUE).Top = Me.cmd(CMD_MODE_SIMUL).Top
            Me.cmd(CMD_MODE_GRAPHIQUE).left = Me.cmd(CMD_MODE_SIMUL).left + Me.cmd(CMD_MODE_SIMUL).Width + 5
        Else
            Me.cmd(CMD_MODE_GRAPHIQUE).Top = Me.cmd(CMD_MODE_CHAMP).Top
            Me.cmd(CMD_MODE_GRAPHIQUE).left = Me.cmd(CMD_MODE_CHAMP).left + Me.cmd(CMD_MODE_CHAMP).Width + 5
        End If
        'Set Me.cmd(CMD_MODE_CHAMP).Picture = Me.imglst.ListImages(IMG_BOULEBF).Picture
LabSuite:
        Me.MnuChpAjout.tag = Index
        Me.MnuChpGraphique.tag = p_i_tabExcel
    Else
        If bModeFormule Then
        Else
            If grdCell(Index).CellPicture = imglst.ListImages(IMG_SOMME).Picture Then
                'MsgBox "formule"
                Me.cmd(CMD_MODE_FORMULE).Visible = True
                Me.cmd(CMD_MODE_FORMULE).Top = grdCell(Index).Top + p_YgrdCell + 200
                Me.cmd(CMD_MODE_FORMULE).left = p_XgrdCell
                'Me.FrmFormule.Visible = True
                Me.FrmProp.Visible = False
                cmd(CMD_MODE_POLICE).Visible = False
                cmd(CMD_MODE_CHAMP).Visible = False
                cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
                cmd(CMD_MODE_SIMUL).Visible = False
                cmd(CMD_MODE_LIEN).Visible = False
                'If p_XgrdCell > grdCell(g_numfeuille).Width / 2 Then ' à gauche
                '    Me.FrmFormule.left = Me.cmd(CMD_MODE_FORMULE).left - Me.FrmFormule.Width
                'Else    ' à droite
                '    Me.FrmFormule.left = Me.cmd(CMD_MODE_FORMULE).left + Me.FrmFormule.Width
                'End If
                'If p_XgrdCell > grdCell(g_numfeuille).Height / 2 Then ' au dessus
                '    Me.FrmFormule.Top = Me.cmd(CMD_MODE_FORMULE).Top - 1000
                'Else    ' en dessous
                '    Me.FrmFormule.Top = Me.cmd(CMD_MODE_FORMULE).Top + 1000
                'End If
                'Me.FrmFormule.Top = Me.cmd(CMD_MODE_FORMULE).Top + 200
                'Me.FrmFormule.left = Me.cmd(CMD_MODE_FORMULE).left + 200
            ElseIf grdCell(Index).TextMatrix(grdCell(Index).RowSel, grdCell(Index).ColSel) = "" Then
                ' Les deux
                Me.cmd(CMD_MODE_POLICE).Visible = True
                Me.cmd(CMD_MODE_POLICE).Top = grdCell(Index).Top + p_YgrdCell - 500
                Me.cmd(CMD_MODE_POLICE).left = p_XgrdCell
                Me.FrmFormule.Visible = False
                Me.FrmProp.Visible = False
                Me.cmd(CMD_MODE_FORMULE).Visible = True
                Me.cmd(CMD_MODE_FORMULE).Top = Me.cmd(CMD_MODE_POLICE).Top
                Me.cmd(CMD_MODE_FORMULE).left = Me.cmd(CMD_MODE_POLICE).left + Me.cmd(CMD_MODE_POLICE).Width + 50
                Me.cmd(CMD_MODE_CHAMP).Visible = True
                cmd(CMD_MODE_GRAPHIQUE).Visible = False
                Me.cmd(CMD_MODE_SIMUL).Visible = False
                cmd(CMD_MODE_LIEN).Visible = False
                ' Nouveau champ
                Set Me.cmd(CMD_MODE_CHAMP).Picture = Me.imglst.ListImages(IMG_BOULEBC).Picture
                Me.cmd(CMD_MODE_CHAMP).Top = Me.cmd(CMD_MODE_POLICE).Top
                Me.cmd(CMD_MODE_CHAMP).left = Me.cmd(CMD_MODE_FORMULE).left + Me.cmd(CMD_MODE_FORMULE).Width + 50
                Me.MnuChpAjout.tag = Index
            ElseIf grdCell(Index).CellPicture = 0 Then
                'MsgBox "texte"
                Me.cmd(CMD_MODE_POLICE).Visible = True
                Me.cmd(CMD_MODE_POLICE).Top = grdCell(Index).Top + p_YgrdCell + 200
                Me.cmd(CMD_MODE_POLICE).left = p_XgrdCell
                Me.FrmFormule.Visible = False
                cmd(CMD_MODE_FORMULE).Visible = False
                cmd(CMD_MODE_CHAMP).Visible = False
                cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
                cmd(CMD_MODE_SIMUL).Visible = False
                cmd(CMD_MODE_LIEN).Visible = False
            End If
        End If
    End If
    
    If Me.cmd(CMD_MODE_LIEN).Visible Then
        ' afficher correctement CMD_MODE_LIEN
        Me.cmd(CMD_MODE_LIEN).Top = grdCell(g_numfeuille).Top + grdCell(g_numfeuille).RowHeight(grdCell(g_numfeuille).RowSel) + p_YgrdCell
        Me.cmd(CMD_MODE_LIEN).left = p_XgrdCell
    End If
    
End Sub

Private Function MettreImageTypeChamp(v_visible, V_ChpNum)
    Dim sql As String, rs As rdoResultset
    Dim i As Integer
    
    For i = 0 To 8
        Me.cmdTypeChp(i).Visible = False
    Next i
    
    If v_visible Then
        If V_ChpNum <= -10 Then
            ' Nombre total
            i = IMG_TYPECHP_ENTIER
            GoTo Lab_Suite
        End If
        If V_ChpNum < 0 Then
            sql = "select * from formetapechp where forec_num=" & (V_ChpNum * -1)
        Else
            sql = "select * from formetapechp where forec_num=" & V_ChpNum
        End If
        On Error GoTo err_open_resultset
        Set rs = Odbc_Cnx.OpenResultset(sql, rdOpenKeyset, rdConcurRowVer)
        If Not rs.EOF Then
            If rs("FOREC_Type") = "TEXT" Then
                If rs("forec_fctvalid") <> "" Then
                    If rs("forec_fctvalid") = "%ENTIER" Or rs("forec_fctvalid") = "%MONTANT" Then
                        i = IMG_TYPECHP_ENTIER
                    ElseIf rs("forec_fctvalid") = "%NUMSERVICE" Then
                        i = IMG_TYPECHP_SERVICE
                    ElseIf rs("forec_fctvalid") = "%NUMFCT" Then
                        i = IMG_TYPECHP_FONCTION
                    ElseIf rs("forec_fctvalid") = "%NUM" Then
                        i = IMG_TYPECHP_ENTIER
                    ElseIf InStr(rs("forec_fctvalid"), "%DATE") > 0 Then
                        i = IMG_TYPECHP_DATE
                    ElseIf rs("forec_fctvalid") = "%MTT" Then
                        i = IMG_TYPECHP_ENTIER
                    Else
                        MsgBox rs("forec_fctvalid")
                        i = IMG_TYPECHP_TEXT
                    End If
                End If
            ElseIf rs("FOREC_Type") = "SELECT" Then
                i = IMG_TYPECHP_SELECT
            ElseIf rs("forec_type") = "HIERARCHIE" Then
                i = IMG_TYPECHP_HIERARCHIE
            ElseIf rs("FOREC_Type") = "TEXTAREA" Then
                i = IMG_TYPECHP_TEXT
            ElseIf rs("FOREC_Type") = "RADIO" Then
                i = IMG_TYPECHP_RADIO
            ElseIf rs("FOREC_Type") = "CHECK" Then
                i = IMG_TYPECHP_CHECK
            Else
                MsgBox rs("FOREC_Type")
            End If
        End If
Lab_Suite:
        On Error GoTo Fin
        Me.cmdTypeChp(i).Visible = True
        Me.cmdTypeChp(i).left = Me.LblHelp.left + 50
        Me.cmdTypeChp(i).Top = Me.LblHelp.Top + 50
    End If
    
Fin:
    On Error GoTo 0
    Exit Function
err_open_resultset:
    MsgBox Error$
    On Error GoTo 0
End Function

Private Function Faire_Load_GrdCondChp(v_numero, v_indice, v_I_TabExcel)
    Dim i As Integer
    Dim LeIndice As Long
    Dim Indice As Integer
    
    On Error GoTo Erreur
    Indice = p_Indice_Grid_ChpCond + 1
    Load grdCondChamp(Indice)
    
    grdCondChamp(Indice).Cols = 10
    grdCondChamp(Indice).Rows = 0
    grdCondChamp(Indice).ColWidth(GrdCondChpChpNum) = 0
    grdCondChamp(Indice).ColWidth(GrdCondChpCndNum) = 0
    grdCondChamp(Indice).ColWidth(GrdCondChpCndOper) = 0
    grdCondChamp(Indice).ColWidth(GrdCondChpImgDetail) = 240
    grdCondChamp(Indice).ColWidth(GrdCondChpCndFrancais) = grdCondChamp(Indice).Width - 1000
    grdCondChamp(Indice).ColWidth(GrdCondChpCndVal) = 0
    grdCondChamp(Indice).ColWidth(GrdCondChpCndSQL) = 0
    grdCondChamp(Indice).ColWidth(GrdCondChpBoolDetail) = 0
    grdCondChamp(Indice).ColWidth(GrdCondChpIndTbl) = -1
    '
    ' mettre cet indice dans tbl_fichExcel
    p_Indice_Grid_ChpCond = p_Indice_Grid_ChpCond + 1
    tbl_fichExcel(v_I_TabExcel).CmdChpGridIndice = Indice
    tbl_fichExcel(v_I_TabExcel).CmdChpGridChargé = "Oui"
    g_i_IndexGrdChamp = Indice
    
    ' Récupérer la condition et charger le tableau
    RecupereConditionChamp v_I_TabExcel
Erreur:
    On Error GoTo 0
End Function

Private Sub grdCell_DblClick(Index As Integer)
    Dim ret As Boolean
    Dim i As Integer
    Dim bDeja As Boolean
    Dim NomCellDest As String
    Dim formule As String, texte As String
    
    bDeja = False
    ' voir si cet emplacement est déjà utilisé dans le tableau
    On Error GoTo Err_Suite2
    i = UBound(tbl_fichExcel())
    GoTo Suite2
Err_Suite2:
    Resume Continu_2
Suite2:
    On Error GoTo 0
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdType = "CHP" Then
            If tbl_fichExcel(i).CmdFenNum = Index Then
                'Debug.Print Mid(Alpha, grdCell(index).ColSel, 1)
                If tbl_fichExcel(i).CmdX = FctStrColDest(grdCell(Index).ColSel) And tbl_fichExcel(i).CmdY = grdCell(Index).RowSel Then
                    ' il y est déja
                    bDeja = True
                    p_i_tabExcel = i
                    Exit For
                End If
            End If
        End If
    Next i
Continu_2:
    On Error GoTo 0
    If Not bDeja Then
        If grdCell(Index).CellPicture = imglst.ListImages(IMG_BOULE).Picture Then
            MsgBox "cette valeur est liée à un champ de formulaire"
            Exit Sub
        End If
        On Error GoTo suite
        Exc_obj.ActiveWorkbook.Sheets(Index).Activate
        On Error GoTo 0
        NomCellDest = FctFaitNomCellDest(grdCell(Index).col, grdCell(Index).row)
        If Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).HasFormula Then
            ' début du mode formule
            bModeFormule = True
            g_ColSelDest = NomCellDest
'            cmd(CMD_MODE_FORMULE).Visible = True
            Me.FrmFormule.Visible = True
            Me.FrmFormule.Caption = "Formule pour " & NomCellDest
            Me.TxtFormule.Text = ""
            If Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).HasFormula Then
                Me.TxtFormule.Text = Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).FormulaLocal
                Me.TxtFormule.Text = Replace(Me.TxtFormule.Text, "=", "")
            End If
            Me.TxtFormule.SetFocus
            Exit Sub
        Else
            If grdCell(Index).CellPicture = imglst.ListImages(IMG_SOMME).Picture Then
                'MsgBox "formule"
                Me.cmd(CMD_MODE_FORMULE).Visible = True
                Me.cmd(CMD_MODE_FORMULE).Top = grdCell(Index).Top + p_YgrdCell + 200
                Me.cmd(CMD_MODE_FORMULE).left = p_XgrdCell
                'Me.FrmFormule.Visible = True
                Me.FrmProp.Visible = False
                cmd(CMD_MODE_POLICE).Visible = False
                cmd(CMD_MODE_CHAMP).Visible = False
                cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
                cmd(CMD_MODE_SIMUL).Visible = False
                cmd(CMD_MODE_LIEN).Visible = False
            ElseIf grdCell(Index).TextMatrix(grdCell(Index).RowSel, grdCell(Index).ColSel) = "" Then
                ' Les deux
                Me.cmd(CMD_MODE_POLICE).Visible = True
                Me.cmd(CMD_MODE_POLICE).Top = grdCell(Index).Top + p_YgrdCell - 500
                Me.cmd(CMD_MODE_POLICE).left = p_XgrdCell
                Me.FrmFormule.Visible = False
                Me.FrmProp.Visible = False
                Me.cmd(CMD_MODE_FORMULE).Visible = True
                Me.cmd(CMD_MODE_FORMULE).Top = Me.cmd(CMD_MODE_POLICE).Top
                Me.cmd(CMD_MODE_FORMULE).left = Me.cmd(CMD_MODE_POLICE).left + Me.cmd(CMD_MODE_POLICE).Width + 50
                Me.cmd(CMD_MODE_CHAMP).Visible = True
                cmd(CMD_MODE_GRAPHIQUE).Visible = False ' cmd(CMD_MODE_CHAMP).Visible
                If Me.ChkExpert.Value = 1 Then cmd(CMD_MODE_SIMUL).Visible = True
                If Me.ChkExpert.Value = 1 Then cmd(CMD_MODE_LIEN).Visible = True
                ' Nouveau champ
                Set Me.cmd(CMD_MODE_CHAMP).Picture = Me.imglst.ListImages(IMG_BOULEBC).Picture
                Me.cmd(CMD_MODE_CHAMP).Top = Me.cmd(CMD_MODE_POLICE).Top
                Me.cmd(CMD_MODE_CHAMP).left = Me.cmd(CMD_MODE_FORMULE).left + Me.cmd(CMD_MODE_FORMULE).Width + 50
                Me.MnuChpAjout.tag = Index
                'MsgBox "vérifier !!!"
                Me.MnuChpGraphique.tag = Index
            ElseIf grdCell(Index).CellPicture = 0 Then
                'MsgBox "texte"
                Me.cmd(CMD_MODE_POLICE).Visible = True
                Me.cmd(CMD_MODE_POLICE).Top = grdCell(Index).Top + p_YgrdCell + 200
                Me.cmd(CMD_MODE_POLICE).left = p_XgrdCell
                Me.FrmFormule.Visible = False
                cmd(CMD_MODE_FORMULE).Visible = False
                cmd(CMD_MODE_CHAMP).Visible = False
                cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
                cmd(CMD_MODE_SIMUL).Visible = False
                cmd(CMD_MODE_LIEN).Visible = False
            End If
        End If
    End If
suite:
    If p_numfiltre_encours = 0 Then
        MsgBox "Vous devez choisir un formulaire puis un filtre"
        ret = ajouter_filtre()
        If ret Then
            Call ajouter_champ(Index, p_numfiltre_encours, grdCell(Index).RowSel, grdCell(Index).ColSel, (Not bDeja), False)
        End If
    Else
        If Not bDeja Then
            ' on peut ajouter un champ ou un indicateur
            g_Ajouter_Champ_Index = Index
            g_Ajouter_Champ_numfiltre_encours = p_numfiltre_encours
            g_Ajouter_Champ_grdCell_RowSel = grdCell(Index).RowSel
            g_Ajouter_Champ_grdCell_ColSel = grdCell(Index).ColSel
            g_Ajouter_Champ_bdeja = bDeja
            PopupMenu Me.MnuChpAjout
        Else
            'MsgBox "si liste appeler autre fonction"
            If Mid(tbl_fichExcel(i).cmdTypeChp, 1, 6) = "Liste=" Then
                Call ajouter_champ_filtre(Index, p_numfiltre_encours, grdCell(Index).RowSel, grdCell(Index).ColSel, (Not bDeja), False)
            Else
                Call ajouter_champ(Index, p_numfiltre_encours, grdCell(Index).RowSel, grdCell(Index).ColSel, (Not bDeja), False)
            End If
        End If
    End If

End Sub

Public Function verifSiSauve()
    Dim ret As Integer
    Dim Ln1 As Integer, Ln2 As Integer, Ln3 As Integer
    
    Ln1 = 15
    Ln2 = 30
    
    cmd(CMD_ENREGISTRER).Visible = True
    
    If cmd(CMD_ENREGISTRER).tag = 0 Then
        ' MODIF LN 27/07/11
        'cmd(CMD_ENREGISTRER).Enabled = false
        'cmd(CMD_ENREGISTRER).Picture = Me.imglst.ListImages(ImgEnregPasModif).Picture
        cmd(CMD_ENREGISTRER).Enabled = True
        cmd(CMD_ENREGISTRER).Picture = Me.imglst.ListImages(ImgEnregModif1).Picture
    Else
        cmd(CMD_ENREGISTRER).Enabled = True
    End If
    'If Not p_bool_Faire_VerifSauve Then Exit Function
    If cmd(CMD_ENREGISTRER).tag = 0 Then
        cmd(CMD_ENREGISTRER).tag = cmd(CMD_ENREGISTRER).tag + 1
    ElseIf cmd(CMD_ENREGISTRER).tag = -1 Then
        cmd(CMD_ENREGISTRER).tag = cmd(CMD_ENREGISTRER).tag + 1
        ' passer en image critique
        cmd(CMD_ENREGISTRER).Picture = Me.imglst.ListImages(ImgEnregCritique).Picture
        cmd(CMD_ENREGISTRER).ToolTipText = "Attention, Enregistrez vos modifications !!!"
    ElseIf cmd(CMD_ENREGISTRER).tag > 0 And cmd(CMD_ENREGISTRER).tag < Ln1 Then
        cmd(CMD_ENREGISTRER).Picture = Me.imglst.ListImages(ImgEnregModif1).Picture
        cmd(CMD_ENREGISTRER).tag = cmd(CMD_ENREGISTRER).tag + 1
        cmd(CMD_ENREGISTRER).ToolTipText = cmd(CMD_ENREGISTRER).tag & " modifications"
    ElseIf cmd(CMD_ENREGISTRER).tag > Ln1 And cmd(CMD_ENREGISTRER).tag < Ln2 Then
        cmd(CMD_ENREGISTRER).Picture = Me.imglst.ListImages(ImgEnregModif2).Picture
        cmd(CMD_ENREGISTRER).tag = cmd(CMD_ENREGISTRER).tag + 1
        cmd(CMD_ENREGISTRER).ToolTipText = cmd(CMD_ENREGISTRER).tag & " modifications"
    ElseIf cmd(CMD_ENREGISTRER).tag > Ln2 Then
        cmd(CMD_ENREGISTRER).Picture = Me.imglst.ListImages(ImgEnregCritique).Picture
        If cmd(CMD_ENREGISTRER).tag <> -1 Then
            ret = MsgBox(Int(cmd(CMD_ENREGISTRER).tag) & " modifications effectuées, Enregistrer maintenant ?", vbDefaultButton1 + vbYesNo + vbQuestion, "Enregistrement automatique")
            If ret = vbYes Then
                Call enregistrer
                cmd(CMD_ENREGISTRER).Picture = Me.imglst.ListImages(ImgEnregPasModif).Picture
                cmd(CMD_ENREGISTRER).Visible = False
                cmd(CMD_ENREGISTRER).tag = 0
            Else
                'cmd(CMD_ENREGISTRER).tag = cmd(CMD_ENREGISTRER).tag / 2
                cmd(CMD_ENREGISTRER).tag = -1
                cmd(CMD_ENREGISTRER).ToolTipText = "Attention, Enregistrez vos modifications !!!"
            End If
        End If
    Else
        cmd(CMD_ENREGISTRER).tag = cmd(CMD_ENREGISTRER).tag + 1
    End If
End Function

Private Sub grdCell_KeyDown(Index As Integer, KeyCode As Integer, Shift As Integer)
    Dim formula As String
    Dim NomCellDest As String, formule As String, texte As String
    Dim lettre As String
        
    If KeyCode = 13 Then ' enter
        grdCell_DblClick (Index)
        bModeFormule = False
        g_ColSelDest = ""
'        cmd(CMD_MODE_FORMULE).Visible = False
        Exit Sub
    End If
    If KeyCode = 16 Then ' shift
        Exit Sub
    End If
    If KeyCode = 27 Then ' Esc
        bDeplacer = False
        bModeFormule = False
        g_ColSelDest = ""
'        cmd(CMD_MODE_FORMULE).Visible = False
        bLigCol = False
        bDeplacerTous = False
        bTransfereUn = False
        bTransfereDes = False
        bTransfereTous = False
        bCopieFiltre = False
    End If
    If KeyCode = 187 Then ' =  => mode formule
        Exc_obj.ActiveWorkbook.Sheets(Index).Activate
        NomCellDest = FctFaitNomCellDest(grdCell(Index).col, grdCell(Index).row)
        
        If Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).Value = "" Or Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).HasFormula Then
LabModeFormule:
            ' début du mode formule
            bModeFormule = True
            g_ColSelDest = NomCellDest
'            cmd(CMD_MODE_FORMULE).Visible = True
            Me.FrmFormule.Visible = True
            Me.FrmFormule.Caption = "Formule pour " & NomCellDest
            Me.TxtFormule.Text = ""
            If Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).HasFormula Then
                Me.TxtFormule.Text = Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).FormulaLocal
                Me.TxtFormule.Text = Replace(Me.TxtFormule.Text, "=", "")
            End If
            Me.TxtFormule.SelStart = Len(Me.TxtFormule.Text)
            Me.TxtFormule.SetFocus
            GoTo LabSuiteF
        Else
            GoTo Met_Texte
        End If
        
        If Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).HasFormula Then
            Me.TxtFormule.Text = Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).FormulaLocal
        ElseIf Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).Value <> "" Then
            GoTo Met_Texte
        Else
            formule = "="
        End If
        formule = InputBox("Votre formule", "Saisir une formule", formule)
        If Mid(formule, 1, 1) <> "=" Then
            GoTo Met_Texte
        End If
        
        Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).formula = formule
        grdCell(Index).TextMatrix(grdCell(Index).row, grdCell(Index).col) = formule
LabSuiteF:
        Call verifSiSauve
    ElseIf KeyCode = 46 Then ' suppr
        Public_VerifOuvrir g_CheminModele, False, True, p_tbl_FichExcelOuverts
        Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Activate
        NomCellDest = FctFaitNomCellDest(grdCell(Index).col, grdCell(Index).row)
        Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).Value = ""
        
        If grdCell(Index).CellPicture = imglst.ListImages(IMG_SOMME).Picture Then
            Set grdCell(Index).CellPicture = Nothing
        ElseIf grdCell(Index).CellPicture = imglst.ListImages(IMG_RESULTAT_RAPPORT).Picture Then
            Set grdCell(Index).CellPicture = Nothing
            tbl_fichExcel(p_i_tabExcel).CmdChpRelierà = ""
        End If
        Me.FrmProp.Visible = False
        Me.FrmFormule.Visible = False
        bModeFormule = False
        cmd(CMD_MODE_FORMULE).Visible = False
        cmd(CMD_MODE_POLICE).Visible = False
        cmd(CMD_MODE_CHAMP).Visible = False
        cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
        cmd(CMD_MODE_SIMUL).Visible = False
        cmd(CMD_MODE_LIEN).Visible = False
        
        grdCell(Index).TextMatrix(grdCell(Index).row, grdCell(Index).col) = Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).Value
        Call verifSiSauve
    Else
        On Error GoTo Fin
        Exc_obj.ActiveWorkbook.Sheets(Index).Activate
        NomCellDest = FctFaitNomCellDest(grdCell(Index).col, grdCell(Index).row)
        
        If Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).HasFormula Then
            GoTo LabModeFormule
        Else
            Call cmd_Click(CMD_MODE_POLICE)
        End If
Met_Texte:
        If Shift = 0 Then
            lettre = LCase(Chr(KeyCode))
        Else
            lettre = UCase(Chr(KeyCode))
        End If
        Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).Value = Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).Value & lettre
        grdCell(Index).TextMatrix(grdCell(Index).row, grdCell(Index).col) = Exc_obj.ActiveWorkbook.Sheets(Index).Range(NomCellDest).Value
        Call verifSiSauve
    End If
Fin:
    On Error GoTo 0
End Sub

Private Sub grdCell_MouseDown(Index As Integer, Button As Integer, Shift As Integer, x As Single, y As Single)
    Dim ColSel As Integer, RowSel As Integer
    Dim leX As Integer, leY As Integer
    Dim leNewX As Integer, leNewY As Integer
    Dim i As Integer
    Dim strX As String
    Dim MenForme As String
    Dim DepX As Integer, DepY As Integer
    Dim II As Integer, ij As Integer
    Dim selG As String, selD As String, selM As String
    Dim s As String
    Dim ret As Integer
    Dim isel As Integer
    Dim iUbound As Integer
    Dim sCol As String
    
    Button_GrdCell = Button
    
    iUbound = -1
    On Error Resume Next
    iUbound = UBound(tb_Selection)
    If iUbound > -1 Then
        MnuChpCollerSelection.tag = FctStrColDest(grdCell(Index).ColSel) & "_" & grdCell(Index).RowSel
        MnuChpCollerSelection.Caption = "Dupliquer les champs de la sélection vers " & MnuChpCollerSelection.tag
        Me.MnuChpDeplacerSelection.tag = MnuChpCollerSelection.tag
        Me.MnuChpDeplacerSelection.Caption = "Déplacer les champs de la sélection vers " & MnuChpCollerSelection.tag
        Me.MnuSelectionNewForm.Enabled = True
    End If
    
    If p_Mode_SelectionDeA Or p_Mode_SelectionClick Then
        isel = -1
        If Button = 1 Then
    '        p_i_tabExcel = 0
            If p_bool_tbl_fichExcel Then
            sCol = FctStrColDest(grdCell(Index).ColSel)
                For i = 0 To UBound(tbl_fichExcel())
                    If tbl_fichExcel(i).CmdType = "CHP" Then
                        If tbl_fichExcel(i).CmdFenNum = Index And (tbl_fichExcel(i).CmdChpNum > 0 Or tbl_fichExcel(i).CmdChpNum <= -10) Then
                            'Debug.Print i & "=" & tbl_fichExcel(i).CmdX & " " & Mid(Alpha, grdCell(index).ColSel, 1) & " : " & tbl_fichExcel(i).CmdY & " " & grdCell(index).RowSel
                            If tbl_fichExcel(i).CmdX = sCol And tbl_fichExcel(i).CmdY = grdCell(Index).RowSel Then
                                ' il y est déja
                                isel = i
                                Exit For
                            End If
                        End If
                    End If
                Next i
            End If
        End If
        If isel > -1 Then
            If p_Mode_SelectionClick Then
                iUbound = -1
                On Error Resume Next
                iUbound = UBound(tb_Selection())
                ReDim Preserve tb_Selection(iUbound + 1)
                For i = 0 To iUbound
                    If tb_Selection(i).SelX = FctIntColdest(tbl_fichExcel(isel).CmdX) Then
                        If tb_Selection(i).SelY = tbl_fichExcel(isel).CmdY Then
                            If tb_Selection(i).SelFenNum = tbl_fichExcel(isel).CmdFenNum Then
                                ' y est déjà
                                MsgBox "Ce champ appartient déjà à la sélection"
                                Exit Sub
                            End If
                        End If
                    End If
                Next i
                tb_Selection(iUbound + 1).SelX = FctIntColdest(tbl_fichExcel(isel).CmdX)
                tb_Selection(iUbound + 1).SelY = tbl_fichExcel(isel).CmdY
                tb_Selection(iUbound + 1).SelFenNum = tbl_fichExcel(isel).CmdFenNum
                tb_Selection(iUbound + 1).Sel_ItabExcel = isel
                MnuSelection.Caption = "Mode Sélection (Click) " & FctIntColdest(tb_Selection(iUbound + 1).SelX) & tb_Selection(iUbound + 1).SelY & " " & FctNomChp(tbl_fichExcel(isel).CmdChpNum)
            Else
                If MnuSelectionnerDe_A.tag = 0 Then     ' Début
                    iUbound = -1
                    On Error Resume Next
                    iUbound = UBound(tb_Selection())
                    ReDim Preserve tb_Selection(iUbound + 1)
                    tb_Selection(iUbound + 1).SelXD = FctIntColdest(tbl_fichExcel(isel).CmdX)
                    tb_Selection(iUbound + 1).SelYD = tbl_fichExcel(isel).CmdY
                    tb_Selection(iUbound + 1).SelFenNum = tbl_fichExcel(isel).CmdFenNum
                    tb_Selection(iUbound + 1).Sel_ItabExcel = 0
                    MnuSelectionnerDe_A.tag = 1
                    MnuSelection.Caption = "Mode Sélection de " & FctStrColDest(tb_Selection(iUbound + 1).SelXD) & tb_Selection(iUbound + 1).SelYD & " à"
                ElseIf MnuSelectionnerDe_A.tag = 1 Then
                    iUbound = UBound(tb_Selection())
                    tb_Selection(iUbound).SelXF = FctIntColdest(tbl_fichExcel(isel).CmdX)
                    tb_Selection(iUbound).SelYF = tbl_fichExcel(isel).CmdY
                    MnuSelection.Caption = "Mode Sélection de " & FctStrColDest(tb_Selection(iUbound).SelXD) & tb_Selection(iUbound).SelYD
                    MnuSelection.Caption = MnuSelection.Caption & " à " & FctStrColDest(tb_Selection(iUbound).SelXF) & tb_Selection(iUbound).SelYF
                    MnuSelectionnerDe_A.tag = -1
                Else
                    ' fin de sélection
                End If
            End If
        End If
        iUbound = -1
        On Error Resume Next
        iUbound = UBound(tb_Selection())
        If iUbound > -1 Then
            MnuSelection_Voir.Visible = True
            MnuSelectionNewForm.Visible = True
            MnuSelectionNewForm.Enabled = True
        End If
        Exit Sub
    End If
    
    p_YgrdCell = y
    p_XgrdCell = x
    
    Me.LblHelp.ForeColor = 0
    
    Dim stype As String, iTab As Integer
    ' voir si cet emplacement est déjà utilisé dans le tableau
    'MsgBox grdCell(index).RowSel & " " & grdCell(index).ColSel
    bDragDropCell = False
    iDragDropCell = -1
    On Error GoTo Fin
    grdCell(g_numfeuille).MousePointer = 0

    XDeplacer = grdCell(g_numfeuille).ColSel
    YDeplacer = grdCell(g_numfeuille).RowSel

    p_Simul_ITab = -1
    If Button = 1 Then
'        p_i_tabExcel = 0
        If p_bool_tbl_fichExcel Then
            sCol = FctStrColDest(grdCell(Index).ColSel)
            For i = 0 To UBound(tbl_fichExcel())
                If tbl_fichExcel(i).CmdType = "CHP" Then
                    If tbl_fichExcel(i).CmdFenNum = Index And (tbl_fichExcel(i).CmdChpNum > 0 Or tbl_fichExcel(i).CmdChpNum <= -10) Then
                        'Debug.Print i & "=" & tbl_fichExcel(i).CmdX & " " & Mid(Alpha, grdCell(index).ColSel, 1) & " : " & tbl_fichExcel(i).CmdY & " " & grdCell(index).RowSel
                        If tbl_fichExcel(i).CmdX = sCol And tbl_fichExcel(i).CmdY = grdCell(Index).RowSel Then
                            ' il y est déja
                            stype = "tableau"
                            p_i_tabExcel = i
                            'p_i_tabExcel_à_Relier = I
                            p_Simul_ITab = i
                            iTab = i
                            Exit For
                        End If
                    End If
                End If
            Next i
        End If
    End If
    
    ' Dupliquer condition CondChamp
    If cmd(CMD_CPY_CONDCHAMP).BackColor = P_JAUNE Then
        'Debug.Print cmd(CMD_CPY_CONDCHAMP).tag
        Call ajouter_condChamp("Copie", p_i_tabExcel, 0, "")
        For i = 0 To UBound(tbl_fichExcel())
            If tbl_fichExcel(i).CmdType = "CHP" Then
                If tbl_fichExcel(i).CmdChpGridChargé = "Oui" Then
                    On Error Resume Next
                    Me.grdCondChamp(tbl_fichExcel(i).CmdChpGridIndice).Visible = False
                End If
            End If
        Next i
        Me.grdCondChamp(tbl_fichExcel(p_i_tabExcel_pour_Copie).CmdChpGridIndice).Visible = True
        p_i_tabExcel = p_i_tabExcel_pour_Copie
        'cmd(CMD_CPY_CONDCHAMP).tag = ""
        'cmd(CMD_CPY_CONDCHAMP).BackColor = P_GRIS_CLAIR
        Exit Sub
    End If
    
suite:
    If Not bDeplacer And stype = "" And grdCell(g_numfeuille).TextMatrix(grdCell(g_numfeuille).RowSel, grdCell(g_numfeuille).ColSel) <> "" Then       ' si pas vide
        'MsgBox "deplacer"
        bDragDropCell = True
        grdCell(g_numfeuille).MousePointer = 15  ' 5 6 13 14 15
        iDragDropCell = -1
        XDragDropCell = grdCell(g_numfeuille).ColSel
        YDragDropCell = grdCell(g_numfeuille).RowSel
    End If
    
    If Not bDeplacer And stype = "tableau" Then
        'MsgBox "deplacer"
        bDragDropCell = True
        grdCell(g_numfeuille).MousePointer = 0  '15  ' 5 6 13 14 15
        iDragDropCell = iTab
        XDragDropCell = grdCell(g_numfeuille).ColSel
        YDragDropCell = grdCell(g_numfeuille).RowSel
    ElseIf bDeplacer And Button = 1 And DerKeycode <> 27 Then
        Call verifSiSauve
        Dim cret As Integer
        Dim s1 As String, s2 As String
        p_bfaire_RowColChange = False
        ' vérifier s'il n'y a pas déjà un champ
        ColSel = grdCell(g_numfeuille).ColSel
        RowSel = grdCell(g_numfeuille).RowSel
        sCol = FctStrColDest(ColSel)
        For i = 0 To UBound(tbl_fichExcel())
            If tbl_fichExcel(i).CmdChpNum > 0 Then
                If tbl_fichExcel(i).CmdType = "CHP" Then
                    If tbl_fichExcel(i).CmdFenNum = g_numfeuille Then
                        'Debug.Print Mid(Public_Alpha, ColSel, 1)
                        If tbl_fichExcel(i).CmdX = sCol Then
                            If tbl_fichExcel(i).CmdY = RowSel Then
                                If p_i_tabExcel_à_Relier > 0 Then
                                    Call Odbc_RecupVal("Select forec_label from formetapechp where forec_num=" & tbl_fichExcel(p_i_tabExcel_à_Relier).CmdChpNum, s1)
                                    Call Odbc_RecupVal("Select forec_label from formetapechp where forec_num=" & tbl_fichExcel(p_i_tabExcel).CmdChpNum, s2)
                                    cret = MsgBox("Voulez vous Relier le champ " & s1 & vbCrLf & "au champ " & s2, vbYesNo, "Répartition d'un champ par rapport à un autre")
                                    If cret = vbYes Then
                                        g_ChpRelier = tbl_fichExcel(p_i_tabExcel).CmdFenNum & ";" & tbl_fichExcel(p_i_tabExcel).CmdX & ";" & tbl_fichExcel(p_i_tabExcel).CmdY
                                        If p_i_tabExcel_à_Relier <> p_i_tabExcel Then
                                            tbl_fichExcel(p_i_tabExcel_à_Relier).CmdChpRelierà = g_ChpRelier
                                            Me.MnuChpRelier.tag = 0
                                            g_ChpRelier = ""
                                        End If
                                    Else
                                        bDeplacer = False
                                        p_i_tabExcel_à_Relier = 0
                                    End If
                                    p_i_tabExcel_à_Relier = 0
                                Else
                                    MsgBox "Position " & tbl_fichExcel(i).CmdX & tbl_fichExcel(i).CmdY & " déjà occupée"
                                End If
                                p_bfaire_RowColChange = True
                                bDeplacer = False
                                bModeFormule = False
                                g_ColSelDest = ""
                                bLigCol = False
                                bDeplacerTous = False
                                bTransfereTous = False
                                bTransfereUn = False
                                bTransfereDes = False
                                bCopieFiltre = False
                                Exit Sub
                            End If
                        End If
                    End If
                End If
            End If
        Next i
        ' déplacer au nouvel endroit
        ' vider l'ancien emplacement
        
        Public_VerifOuvrir NomFichierParam & p_PointExtensionXls, False, True, p_tbl_FichExcelOuverts
        
        i = p_i_tabExcel
        strX = tbl_fichExcel(i).CmdX
        leX = FctIntColdest(strX)
        leY = tbl_fichExcel(i).CmdY
        s = strX & "_" & leY
        MenForme = tbl_fichExcel(i).CmdMenFormeChp
        p_dansGrid = True
        P_MettreChamp "Vider", i, leX, leY, MenForme, val(tbl_fichExcel(i).CmdChpNum), val(tbl_fichExcel(i).CmdFormIndice), g_numfeuille, True
        ' calculer les nouvelles coordonnées
        leX = ColSel
        leY = RowSel
        ' remettre le champ
        Call P_MettreChamp("Mettre", p_i_tabExcel, leX, leY, MenForme, val(tbl_fichExcel(i).CmdChpNum), val(tbl_fichExcel(i).CmdFormIndice), g_numfeuille, False)
        ' enregistrer
        tbl_fichExcel(i).CmdX = FctStrColDest(ColSel)
        tbl_fichExcel(i).CmdY = leY
        
        ' Déplacer le graphique
        Call FctCreerGraphique("M_" & s, 0, 0, "X", g_numfeuille, i)
                
        Call verifSiSauve
            
        bDeplacer = False
        p_bfaire_RowColChange = True
        bDragDropCell = False
        iDragDropCell = -1
        grdCell(g_numfeuille).MousePointer = 0
    ElseIf bModeFormule And Button = 1 And DerKeycode <> 27 Then
        selG = left(Me.TxtFormule.Text, Me.TxtFormule.SelStart)
        selD = Right(Me.TxtFormule.Text, Len(Me.TxtFormule.Text) - Me.TxtFormule.SelStart - Me.TxtFormule.SelLength)
        selM = Me.TxtFormule.SelText
        ColSel = grdCell(g_numfeuille).ColSel
        RowSel = grdCell(g_numfeuille).RowSel
        s = FctStrColDest(ColSel) & RowSel
        Me.TxtFormule.Text = selG & s & selD
        Me.TxtFormule.SelStart = Len(selG) + Len(s)
        Me.TxtFormule.Visible = True
        Me.FrmFormule.Visible = True
        Me.TxtFormule.SetFocus
    ElseIf bDeplacerTous And Button = 1 And DerKeycode <> 27 Then
        Call verifSiSauve
        p_bfaire_RowColChange = False
        ' vérifier s'il n'y a pas déjà un champ
        ColSel = grdCell(g_numfeuille).ColSel
        RowSel = grdCell(g_numfeuille).RowSel
        For i = 0 To UBound(tbl_fichExcel())
            If tbl_fichExcel(i).CmdChpNum > 0 Then
                If tbl_fichExcel(i).CmdType = "CHP" Then
                    If tbl_fichExcel(i).CmdFenNum = g_numfeuille Then
                        'Debug.Print Mid(Public_Alpha, ColSel, 1)
                        If tbl_fichExcel(i).CmdX = FctStrColDest(ColSel) Then
                            If tbl_fichExcel(i).CmdY = RowSel Then
                                bDeplacer = False
                                bModeFormule = False
                                g_ColSelDest = ""
                                bLigCol = False
                                bTransfereTous = False
                                bTransfereUn = False
                                bTransfereDes = False
                                bDeplacerTous = False
                                bCopieFiltre = False
                                Exit Sub
                            End If
                        End If
                    End If
                End If
            End If
        Next i
        ' déplacer au nouvel endroit
        ' vider l'ancien emplacement
        i = p_i_tabExcel    ' i du tab Excel du champ cliqué
        
        strX = tbl_fichExcel(i).CmdX
        leX = FctIntColdest(strX)
        leY = tbl_fichExcel(i).CmdY
        
        DepX = ColSel - leX
        DepY = RowSel - leY
        
        ' déplacer tous les champs de cette feuille
        Me.LblHelp.Visible = True
        For II = 0 To UBound(tbl_fichExcel())
            Me.LblHelp.Caption = "déplacement du champ " & II & " / " & UBound(tbl_fichExcel())
            Me.LblHelp.Refresh
            If tbl_fichExcel(II).CmdFenNum = tbl_fichExcel(i).CmdFenNum Then
                If tbl_fichExcel(II).CmdType = "CHP" Then
                    'MsgBox tbl_fichExcel(ii).CmdChpNum & " X=" & tbl_fichExcel(ii).CmdX & " Y=" & tbl_fichExcel(ii).CmdY
                    ' même fenetre
                    ' vider
                    strX = tbl_fichExcel(II).CmdX
                    leX = FctIntColdest(strX)
                    leY = tbl_fichExcel(II).CmdY
                    ' mettre au nouvel emplacement
                    leNewX = leX + DepX
                    leNewY = leY + DepY
                    ' voir si pas déjà à cet emplacement
                    If VoirSiPasDejaChp("Voir", leNewX, leNewY, tbl_fichExcel(i).CmdFenNum) Then
                        MsgBox "Position " & tbl_fichExcel(i).CmdX & tbl_fichExcel(i).CmdY & " déjà occupée"
                    ElseIf leNewX > 0 And leNewX < grdCell(g_numfeuille).Cols Then
                        tbl_fichExcel(II).CmdX = FctIntColdest(leNewX)
                        If leNewY > 0 And leNewY < grdCell(g_numfeuille).Rows Then
                            tbl_fichExcel(II).CmdY = leNewY
                            'MsgBox tbl_fichExcel(ii).CmdChpNum & " X=" & tbl_fichExcel(ii).CmdX & " Y=" & tbl_fichExcel(ii).CmdY
                            MenForme = tbl_fichExcel(II).CmdMenFormeChp
                            P_MettreChamp "Vider", II, leX, leY, MenForme, val(tbl_fichExcel(II).CmdChpNum), val(tbl_fichExcel(II).CmdFormIndice), g_numfeuille, True
                            ' remettre le champ
                            Call P_MettreChamp("Mettre", p_i_tabExcel, leNewX, leNewY, MenForme, val(tbl_fichExcel(II).CmdChpNum), val(tbl_fichExcel(II).CmdFormIndice), g_numfeuille, False)
                        Else
                            MsgBox "Champ " & tbl_fichExcel(II).CmdX & FctStrColDest(tbl_fichExcel(II).CmdY) & " impossible à déplacer verticalement"
                        End If
                    Else
                        MsgBox "Champ " & tbl_fichExcel(II).CmdX & tbl_fichExcel(II).CmdY & " impossible à déplacer horizontalement"
                    End If
                End If
            End If
        Next II
        Me.LblHelp.Visible = False
        
        Call verifSiSauve
            
        bDeplacerTous = False
        p_bfaire_RowColChange = True
    End If
Fin:
    DerKeycode = 0

End Sub

Private Function VoirSiPasDejaChp(v_Trait As String, v_leNewX, v_leNewY, v_FenNum)
    Dim i As Integer
    Dim sCoord As String
    Dim s As String
    Dim iPrem As Integer
    
    sCoord = "ZZ"
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdChpNum > 0 Then
            If tbl_fichExcel(i).CmdType = "CHP" Then
                If tbl_fichExcel(i).CmdFenNum = v_FenNum Then
                    s = tbl_fichExcel(i).CmdX & tbl_fichExcel(i).CmdY
                    If s < sCoord Then
                        sCoord = s
                        iPrem = i
                    End If
                    If tbl_fichExcel(i).CmdX = v_leNewX Then
                        If tbl_fichExcel(i).CmdY = v_leNewY Then
                            VoirSiPasDejaChp = True
                            Exit Function
                        End If
                    End If
                End If
            End If
        End If
    Next i
    If v_Trait = "Premier" Then
        VoirSiPasDejaChp = iPrem
    Else
        VoirSiPasDejaChp = False
    End If
End Function
Private Function VoirSiLien(v_lex, v_leY, v_index)
    Dim ij As Integer
    
    VoirSiLien = ""
    If p_bool_tbl_cell Then
        For ij = 0 To UBound(tbl_cell())
            If tbl_cell(ij).CellFeuille = v_index Then
                If tbl_cell(ij).CellX = grdCell(g_numfeuille).ColSel And tbl_cell(ij).CellY = grdCell(g_numfeuille).RowSel Then
                    If tbl_cell(ij).CellLink <> "" Then
                        VoirSiLien = tbl_cell(ij).cellNumFiltre & "|" & tbl_cell(ij).CellLink
                        'Shell "C:\Program Files\Internet Explorer\iexplore.exe " & tbl_cell(ij).CellLink, vbMaximizedFocus
                    End If
                    Exit For
                End If
            End If
        Next ij
    End If
End Function

Private Sub grdCell_MouseMove(Index As Integer, Button As Integer, Shift As Integer, x As Single, y As Single)

    p_YgrdCell = y
    p_XgrdCell = x

    Me.TimerPictureLien.Enabled = False
    Me.cmd(CMD_MODE_LIEN).Picture = Me.PictureLien(0).Picture

End Sub

Private Sub grdCell_MouseUp(Index As Integer, Button As Integer, Shift As Integer, x As Single, y As Single)
    Dim ColSelDest As String
    Dim ColSelorig As String
    Dim leX As Integer, leY As Integer
    
    If bDragDropCell Then
        If iDragDropCell = -1 Then
            If XDragDropCell <> grdCell(Index).ColSel Or YDragDropCell <> grdCell(Index).RowSel Then
                ' Déplacer le texte
                Public_VerifOuvrir NomFichierParam & p_PointExtensionXls, False, True, p_tbl_FichExcelOuverts
                ColSelorig = FctStrColDest(XDragDropCell) & YDragDropCell
                ColSelDest = FctStrColDest(grdCell(Index).ColSel) & grdCell(Index).RowSel
                leX = grdCell(Index).ColSel
                leY = grdCell(Index).RowSel
                Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelDest).Value = Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelorig).Value
                Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelDest).Font.Name = Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelorig).Font.Name
                Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelDest).Font.Size = Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelorig).Font.Size
                Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelDest).Font.Bold = Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelorig).Font.Bold
                Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelDest).Font.Italic = Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelorig).Font.Italic
                Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelDest).Font.Color = Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelorig).Font.Color
                ' sauvegarde
                ComDialog.FontName = Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelDest).Font.Name
                ComDialog.FontSize = Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelDest).Font.Size
                ComDialog.FontBold = Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelDest).Font.Bold
                ComDialog.FontItalic = Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelDest).Font.Italic
                ComDialog.Color = Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelDest).Font.Color
                 
                grdCell(Index).row = leY
                grdCell(Index).col = leX
                grdCell(Index).TextMatrix(leY, leX) = Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelDest).Value
                ' remettre
                grdCell(Index).CellFontBold = ComDialog.FontBold
                grdCell(Index).CellForeColor = ComDialog.Color
                grdCell(Index).CellFontName = ComDialog.FontName
                grdCell(Index).CellFontItalic = ComDialog.FontItalic
                grdCell(Index).CellFontSize = ComDialog.FontSize
                ' Supprimer l'ancien texte
                Exc_obj.ActiveWorkbook.Sheets(Index).Range(ColSelorig).Value = ""
                grdCell(Index).TextMatrix(YDragDropCell, XDragDropCell) = ""
            End If
            grdCell(Index).MousePointer = 0
            bDragDropCell = False
            XDragDropCell = 0
            YDragDropCell = 0
            iDragDropCell = -1
            Exit Sub
        Else
            grdCell(Index).MousePointer = 0
            'MsgBox XDragDropCell & " " & grdCell(index).ColSel
            'MsgBox YDragDropCell & " " & grdCell(index).RowSel
            If XDragDropCell <> grdCell(Index).ColSel Or YDragDropCell <> grdCell(Index).RowSel Then
                bDeplacer = True
                XDragDropCell = 0
                YDragDropCell = 0
                p_i_tabExcel_à_Relier = p_i_tabExcel
                Call grdCell_MouseDown(Index, 1, 0, x, y)
                bDeplacer = False
            Else
                XDragDropCell = 0
                YDragDropCell = 0
                iDragDropCell = -1
                bDragDropCell = False
            End If
        End If
    End If
End Sub

Private Sub grdCell_RowColChange(Index As Integer)
    Dim ColSel As Integer, RowSel As Integer
    Dim leX As Integer, leY As Integer
    Dim i As Integer
    Dim LaRow As Integer, j As Integer
    Dim strX As String
    Dim MenForme As String
    Dim ancrow As Integer, AncCol As Integer
    
    If p_bfaire_RowColChange Then
    
        ' remettre les anciennes valeurs
        p_bfaire_RowColChange = False
        ancrow = grdCell(Index).row
        AncCol = grdCell(Index).col
        If p_Anc_Cell_GridRow < grdCell(p_Anc_Cell_GridIndice).Rows And p_Anc_Cell_GridCol < grdCell(p_Anc_Cell_GridIndice).col = p_Anc_Cell_GridCol Then

            grdCell(p_Anc_Cell_GridIndice).row = p_Anc_Cell_GridRow
            grdCell(p_Anc_Cell_GridIndice).col = p_Anc_Cell_GridCol
            grdCell(p_Anc_Cell_GridIndice).CellBackColor = p_Anc_Cell_BackColor
            
            p_Anc_Cell_GridIndice = Index
            
            grdCell(Index).row = ancrow
            grdCell(Index).col = AncCol
            p_Anc_Cell_GridRow = ancrow
            p_Anc_Cell_GridCol = AncCol
            
            p_Anc_Cell_BackColor = grdCell(Index).CellBackColor
            
            grdCell(Index).CellBackColor = grdCell(Index).BackColorBkg
            
            p_bfaire_RowColChange = True
            
            Call grdCell_Click(Index)
        
        End If
        
        p_bfaire_RowColChange = True
    
    End If
End Sub

Private Sub grdCond_Click(Index As Integer)
    Dim LaRow As Integer, i As Integer, j As Integer
    Dim sF As String
    Dim iRowSel As Integer
    Dim sLib As String
    Dim laS As String
    
    Me.LblHelp.Visible = False
    For i = 0 To 8
        Me.cmdTypeChp(i).Visible = False
    Next i
    If grdCond(Index).Rows > 0 Then
        iRowSel = grdCond(Index).RowSel
        If grdCond(Index).TextMatrix(grdCond(Index).row, GrdCond_TypeFL) = "F" Then
            cmd(CMD_SUPPR_COND).Visible = False
        Else
            cmd(CMD_SUPPR_COND).Visible = True
        End If
        
        LaRow = grdCond(Index).row
        For i = 0 To grdCond(Index).Rows - 1
            grdCond(Index).row = i
            For j = 0 To grdCond(Index).Cols - 1
                grdCond(Index).col = j
                If i = LaRow Then
                    If j = GrdCond_PourFeuilles And grdCond(Index).CellBackColor = &H8080FF Then
                    Else
                        grdCond(Index).CellBackColor = grdForm.BackColorFixed
                        grdCond(Index).CellFontBold = True
                    End If
                Else
                    If j = GrdCond_PourFeuilles And grdCond(Index).CellBackColor = &H8080FF Then
                    Else
                        grdCond(Index).col = j
                        grdCond(Index).CellBackColor = grdCond(0).BackColor '  grdForm.BackColorBkg
                        grdCond(Index).CellFontBold = False
                    End If
                End If
            Next j
        Next i
        ' Voir si fenetres
        laS = grdCond(Index).TextMatrix(iRowSel, GrdCond_Cond)
        laS = STR_GetChamp(laS, "¤", 3)
        If laS <> "" Then
            Me.LabelC1.Visible = True
            For i = 0 To STR_GetNbchamp(laS, ";")
                sF = STR_GetChamp(laS, ";", i)
                If sF <> "" And sF <> "*" Then
                    sLib = sLib & IIf(sLib = "", "", " / ") & tbl_fenExcel(sF).FenNom
                End If
            Next i
            Me.LabelC1.Caption = sLib
        Else
            Me.LabelC1.Visible = False
        End If
        grdCond(Index).row = LaRow
    
    Else
        MsgBox "Ce filtre ne comporte aucune condition"
    End If
End Sub

Private Sub grdCond_DblClick(Index As Integer)
    ' on peut modifier seulement si "condition ajoutée"
    Dim i As Integer
    
    If grdCond(Index).TextMatrix(grdCond(Index).row, GrdCond_TypeFL) = "A" Then '   "L" Then
        Me.LblHelp.Visible = False
        For i = 0 To 8
            Me.cmdTypeChp(i).Visible = False
        Next i
        Call modifier_cond(Index)
    End If
End Sub

Private Sub grdCond_MouseDown(Index As Integer, Button As Integer, Shift As Integer, x As Single, y As Single)
    If bDeplacer And Button = 1 And DerKeycode <> 27 Then
    End If
End Sub

Private Sub grdCondChamp_Click(Index As Integer)
    Dim i As Integer
    Dim row As Integer
    Dim ancrow As Integer
    
    'RVRVRV
    Me.LblHelp.Visible = False
    For i = 0 To 8
        Me.cmdTypeChp(i).Visible = False
    Next i
    
    row = grdCondChamp(Index).RowSel
    ancrow = row
    grdCondChamp(Index).col = GrdCondChpCndFrancais
    For i = 0 To grdCondChamp(Index).Rows - 1
        grdCondChamp(Index).row = i
        If i = row Then
            grdCondChamp(Index).CellFontBold = True
        Else
            grdCondChamp(Index).CellFontBold = False
        End If
    Next i
    
    If row = -1 Then
        cmd(CMD_SUPPR_COND_CHAMP).Visible = False
        Exit Sub
    Else
        If grdCondChamp(Index).TextMatrix(row, GrdCondChpCndNum) = -1 Then
            ' déjà supprimée
            cmd(CMD_SUPPR_COND_CHAMP).Visible = False
        Else
            If Mid(tbl_fichExcel(p_i_tabExcel).cmdTypeChp, 1, 6) = "Liste=" Then
                cmd(CMD_SUPPR_COND_CHAMP).Visible = False
            Else
                cmd(CMD_SUPPR_COND_CHAMP).Visible = True
            End If
        End If
    End If
    
    grdCondChamp(Index).col = GrdCondChpChpNum
    grdCondChamp(Index).RowSel = ancrow
    
    ' contenu de la position "GrdCondChpIndTbl" de la ligne cliquée dans GrdCondChamp (indice dans le tableau)
    If grdCondChamp(Index).TextMatrix(row, GrdCondChpIndTbl) <> "" Then
        g_i_CondTbChamp = grdCondChamp(Index).TextMatrix(row, GrdCondChpIndTbl)
    End If
    ' index du GrdCondChamp cliqué
    g_i_IndexGrdChamp = Index
    g_i_LigneGrdChamp = row
End Sub

Private Sub grdCondChamp_DblClick(Index As Integer)
    Dim i As Integer
    
    If grdCondChamp(Index).RowSel = -1 Then
        Exit Sub
    End If
    If grdCondChamp(Index).RowSel > grdCondChamp(Index).Rows - 1 Then
        Exit Sub
    End If
    
    
    If Mid(tbl_fichExcel(p_i_tabExcel).cmdTypeChp, 1, 6) <> "Liste=" Then
        Me.LblHelp.Visible = False
        For i = 0 To 8
            Me.cmdTypeChp(i).Visible = False
        Next i
        Call ajouter_condChamp("Modif", p_i_tabExcel, grdCondChamp(Index).TextMatrix(grdCondChamp(Index).RowSel, GrdCondChpIndTbl), "")
    End If
    
End Sub

Private Sub grdCondChamp_MouseDown(Index As Integer, Button As Integer, Shift As Integer, x As Single, y As Single)
    Dim ret As Integer
    
    cmd(CMD_CPY_CONDCHAMP).Visible = True
    cmd(CMD_CPY_CONDCHAMP).tag = Index & "|" & grdCondChamp(Index).RowSel
    p_i_tabExcel_pour_Copie = p_i_tabExcel
End Sub

Private Sub grdDem_Click()
    Dim LaRow As Integer, i As Integer, j As Integer
    Dim laCol As Integer
    Dim iDem As Integer
    Dim nomChp As String
    
    Me.LblHelp.Visible = False
    For i = 0 To 8
        Me.cmdTypeChp(i).Visible = False
    Next i
    
    LaRow = grdDem.row
    laCol = grdDem.col
    If LaRow >= 0 Then
        For i = 0 To grdDem.Rows - 1
            grdDem.row = i
            For j = 0 To grdDem.Cols - 1
                If i = LaRow Then
                    grdDem.col = j
                    grdDem.CellBackColor = grdForm.BackColorFixed
                    grdDem.CellFontBold = True
                Else
                    grdDem.col = j
                    grdDem.CellBackColor = grdForm.BackColorBkg
                    grdDem.CellFontBold = False
                End If
            Next j
        Next i
        ' celle sélectionnée
        grdDem.row = LaRow
        ' Est elle en "Aussi"
        On Error Resume Next
        If tbl_Demande(grdDem.TextMatrix(LaRow, 0)).DemandAussiStr <> "" Then
            cmd(CMD_PRM_DEMANDER).BackColor = grdForm.BackColorFixed
        Else
            cmd(CMD_PRM_DEMANDER).BackColor = grdForm.BackColorBkg
        End If
    End If
End Sub

Private Sub grdDem_DblClick()
    Dim LaRow As Integer, stitre As String
    Dim iDem As Integer
    Dim i As Integer
    
    Me.LblHelp.Visible = False
    For i = 0 To 8
        Me.cmdTypeChp(i).Visible = False
    Next i
    
    LaRow = grdDem.row
    If LaRow >= 0 Then
        grdDem.row = LaRow
        iDem = grdDem.TextMatrix(LaRow, 0)
        stitre = tbl_Demande(iDem).DemandChpStrPlus    ' grdDem.TextMatrix(laRow, 2)
        stitre = InputBox("Titre pour " & Chr(13) & Chr(10) & tbl_Demande(iDem).DemandChpStr, "Condition de filtre", stitre)
        If stitre <> "" Then
            tbl_Demande(iDem).DemandChpStrPlus = stitre
            grdDem.TextMatrix(LaRow, 2) = tbl_Demande(iDem).DemandChpStr & " " & tbl_Demande(iDem).DemandChpStrPlus
            Call verifSiSauve
        End If
    End If
End Sub

Private Sub grdDem_MouseDown(Button As Integer, Shift As Integer, x As Single, y As Single)
    Dim LaRow As Integer, iDem As Integer
    
    If Button = 2 Then
        LaRow = grdDem.MouseRow
        grdDem.row = LaRow
        grdDem.col = 3
        iDem = grdDem.TextMatrix(LaRow, 0)
        
        If grdDem.TextMatrix(LaRow, 3) = "FE" Then grdDem.TextMatrix(LaRow, 3) = "FO"
LabTestGlob:
        If grdDem.TextMatrix(LaRow, 3) = "FO" Then
            Me.MnuDemandeGlobaleFormulaire.Enabled = False
            Me.MnuDemandeGlobaleFiltre.Enabled = True
            Me.MnuDemandeLocale.Enabled = True
        '    Me.MnuDemandeGlobaleFeuille.Enabled = IIf(PeutGlobal(iDem), True, False)
        ElseIf grdDem.TextMatrix(LaRow, 3) = "FI" Then
            Me.MnuDemandeGlobaleFormulaire.Enabled = True
            Me.MnuDemandeGlobaleFiltre.Enabled = False
            Me.MnuDemandeLocale.Enabled = True
        '    Me.MnuDemandeGlobaleFeuille.Enabled = IIf(PeutGlobal(iDem), True, False)
        ElseIf grdDem.TextMatrix(LaRow, 3) = "LO" Then
            Me.MnuDemandeGlobaleFormulaire.Enabled = True
            Me.MnuDemandeGlobaleFiltre.Enabled = True
            Me.MnuDemandeLocale.Enabled = False
        '    Me.MnuDemandeGlobaleFeuille.Enabled = IIf(PeutGlobal(iDem), True, False)
        'ElseIf grdDem.TextMatrix(LaRow, 3) = "FE" Then
        '    Me.MnuDemandeGlobaleFormulaire.Enabled = True
        '    Me.MnuDemandeGlobaleFiltre.Enabled = True
        '    Me.MnuDemandeLocale.Enabled = True
        '    Me.MnuDemandeGlobaleFeuille.Enabled = IIf(PeutGlobal(iDem), True, False)
        ElseIf grdDem.TextMatrix(LaRow, 3) = "" Then    ' Ajoutée par un autre filtre
        Else
            MsgBox "?? " & grdDem.TextMatrix(LaRow, 3)
            grdDem.TextMatrix(LaRow, 3) = "LO"
            GoTo LabTestGlob
        End If
        'Me.MnuDemandeGlobaleFeuille.Visible = False
        'Me.MnuDemandeGlobaleFeuille.Visible = PeutGlobal(iDem)
'        If grdDem.CellPicture = Me.listImg.ListImages(1).Picture Then
'            Me.MnuDemandeGlobaleFormulaire.Enabled = False
'            Me.MnuDemandeLocale.Enabled = True
'        Else
'            Me.MnuDemandeGlobaleFormulaire.Enabled = True
'            Me.MnuDemandeLocale.Enabled = False
'        End If
    
        Me.MnuDemande.Visible = True
        PopupMenu Me.MnuDemande
    End If
End Sub
Private Sub grdFeuille_Click()
    Dim i As Integer
    Dim isel As Integer
    Dim iPrem As Integer
    
    g_numfeuille = grdFeuille.RowSel + 1
    If g_numfeuille < grdFeuille.Rows Then
        cmd(CMD_FEN_FL_BAS).Visible = True
    Else
        cmd(CMD_FEN_FL_BAS).Visible = False
    End If
    If g_numfeuille > 1 Then
        cmd(CMD_FEN_FL_HAUT).Visible = True
    Else
        cmd(CMD_FEN_FL_HAUT).Visible = False
    End If
    
    Me.LblHelp.Visible = False
    For i = 0 To 8
        Me.cmdTypeChp(i).Visible = False
    Next i
    cmd(CMD_MODE_CHAMP).Visible = False
    cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
    cmd(CMD_MODE_SIMUL).Visible = False
    cmd(CMD_MODE_LIEN).Visible = False
    cmd(CMD_MODE_FORMULE).Visible = False
    cmd(CMD_MODE_POLICE).Visible = False

    ' les mettre tous en invisibles
    For i = 1 To UBound(tbl_fenExcel())
        If tbl_fenExcel(i).FenLoad Then
            On Error Resume Next
            grdCell(i).Visible = False
        End If
    Next i
    
    'RV8359
    If tbl_fenExcel(g_numfeuille).FenNum = -1 Or tbl_fenExcel(g_numfeuille).FenNum = -100 Then
        ' feuille supprimée
        MsgBox "Cette feuille est supprimée"
        grdCell(g_numfeuille).Visible = False
        Exit Sub
    End If
    
    
    If Not tbl_fenExcel(g_numfeuille).FenLoad Then
        ' on le charge
        Me.LblHelp.Visible = True
        Me.LblHelp.Caption = "Feuille non chargée"
        cmd(CMD_SIMULATION_UNE).Visible = False
        cmd(CMD_SIMULATION_ECRAN).Visible = False
    Else
        cmd(CMD_SIMULATION_UNE).Visible = True
        cmd(CMD_SIMULATION_ECRAN).Visible = True
        
        p_Simul_IFen = g_numfeuille

        iPrem = VoirSiPasDejaChp("Premier", 0, 0, g_numfeuille)
        If iPrem > 0 Then
            p_bfaire_RowColChange = False
            grdCell(g_numfeuille).row = tbl_fichExcel(iPrem).CmdY
            grdCell(g_numfeuille).col = FctIntColdest(tbl_fichExcel(iPrem).CmdX)
            grdCell(g_numfeuille).Visible = True
            p_bfaire_RowColChange = True
            Button_GrdCell = 0
            Call grdCell_Click(g_numfeuille)
        Else
            grdCell(g_numfeuille).Visible = True
        End If
    End If
    
    For i = 0 To grdFeuille.Rows - 1
        grdFeuille.row = i
        If i = g_numfeuille - 1 Then
            grdFeuille.col = 1
            grdFeuille.CellBackColor = grdFeuille.BackColorFixed
            grdFeuille.CellFontBold = True
            grdFeuille.col = 2
            grdFeuille.CellBackColor = grdFeuille.BackColorFixed
        Else
            grdFeuille.col = 1
            grdFeuille.CellBackColor = grdFeuille.BackColorBkg
            grdFeuille.CellFontBold = False
            grdFeuille.col = 2
            grdFeuille.CellBackColor = grdFeuille.BackColorBkg
        End If
    Next i
    grdFeuille.row = g_numfeuille - 1
    
    If Not tbl_fenExcel(g_numfeuille).FenLoad Then
        Me.cmd(CMD_CHARGER_LE_RESTE).Visible = False
    Else
        If grdFeuille.TextMatrix(g_numfeuille - 1, GrdFeuil_Chargement) = "*" Then
            Me.cmd(CMD_CHARGER_LE_RESTE).Visible = False
        Else
            Me.cmd(CMD_CHARGER_LE_RESTE).Visible = True
            Me.cmd(CMD_CHARGER_LE_RESTE).Caption = grdFeuille.TextMatrix(g_numfeuille - 1, GrdFeuil_Chargement) & " / " & (grdCell(g_numfeuille).Rows - 1)
        End If
    End If
    
    Me.SetFocus
    
End Sub

Private Sub grdFeuille_dblClick()
    Dim i As Integer
    Dim isel As Integer
    
    g_numfeuille = grdFeuille.RowSel + 1
    
    ' les mettre tous en invisibles
    For i = 1 To UBound(tbl_fenExcel())
        If tbl_fenExcel(i).FenLoad Then
            On Error Resume Next
            grdCell(i).Visible = False
        End If
    Next i
    
    If tbl_fenExcel(g_numfeuille).FenNum = -1 Or tbl_fenExcel(g_numfeuille).FenNum = -100 Then
        ' feuille supprimée
        MsgBox "Cette feuille est supprimée"
        grdCell(g_numfeuille).Visible = False
        Exit Sub
    End If
    
    If Not tbl_fenExcel(g_numfeuille).FenLoad Then
        ' on le charge
        Me.LblHelp.Visible = True
        Me.LblHelp.Caption = "Chargement de la feuille : " & tbl_fenExcel(g_numfeuille).FenNom & " ( " & tbl_fenExcel(g_numfeuille).FenRowMax & " Lignes : " & tbl_fenExcel(g_numfeuille).FenColMax & " Colonnes )"
        Me.LblHelp.Refresh
        Call InitGrdCell(g_numfeuille)
        grdCell(g_numfeuille).Visible = True
    ElseIf grdFeuille.TextMatrix(g_numfeuille - 1, GrdFeuil_Chargement) <> "*" Then
        ' on charge ce qui reste
        Me.LblHelp.Visible = True
        Me.LblHelp.Caption = "Chargement de la feuille : " & tbl_fenExcel(g_numfeuille).FenNom & " ( " & tbl_fenExcel(g_numfeuille).FenRowMax & " Lignes : " & tbl_fenExcel(g_numfeuille).FenColMax & " Colonnes )"
        Me.LblHelp.Refresh
        Call InitGrdCell(g_numfeuille)
        grdCell(g_numfeuille).Visible = True
    End If
    
    p_Simul_IFen = g_numfeuille
    
    If p_TraitPublier <> "G" Then
        cmd(CMD_FEN_FL_HAUT).Visible = True
        cmd(CMD_FEN_FL_BAS).Visible = True
        For i = 0 To grdFeuille.Rows - 1
            grdFeuille.col = GrdFeuil_FenNom
            grdFeuille.row = i
            If grdFeuille.row = g_numfeuille - 1 Then
                If grdFeuille.TextMatrix(grdFeuille.row, GrdFeuil_Chargement) = "*" Then
                    Me.cmd(CMD_CHARGER_LE_RESTE).Visible = False
                Else
                    Me.cmd(CMD_CHARGER_LE_RESTE).Visible = True
                    Me.cmd(CMD_CHARGER_LE_RESTE).Caption = grdFeuille.TextMatrix(grdFeuille.row, GrdFeuil_Chargement) & " / " & (grdCell(g_numfeuille).Rows - 1)
                End If
                grdFeuille.CellFontBold = True
                If i = 0 Then
                    cmd(CMD_FEN_FL_HAUT).Visible = False
                End If
                If i = grdFeuille.Rows - 1 Then
                    cmd(CMD_FEN_FL_BAS).Visible = False
                End If
            Else
                grdFeuille.CellFontBold = False
            End If
        Next i
    End If
    
    grdCell(g_numfeuille).Visible = True
    If InStr(NomFichierParam, ".") = 0 Then
        NomFichierParam = NomFichierParam & "."
    End If
    Public_VerifOuvrir NomFichierParam & p_ExtensionXls, False, True, p_tbl_FichExcelOuverts
    Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Activate
    grdFeuille.row = g_numfeuille - 1
    On Error Resume Next
    Me.SetFocus
End Sub

Private Sub grdFeuille_MouseDown(Button As Integer, Shift As Integer, x As Single, y As Single)
    Dim i As Integer
    
    If Button = 2 Then
        If bcopier_feuille Then
            Me.MnuFeuilleCopier.Enabled = False
            Me.MnuFeuilleColler.Enabled = True
            bcopier_feuille = False
            Me.MnuFeuilleSupprimer.Enabled = False
        Else
            Me.MnuFeuilleColler.Enabled = False
            Me.MnuFeuilleCopier.Enabled = True
            Me.MnuFeuilleSupprimer.Enabled = True
        End If
        
        If Not tbl_fenExcel(g_numfeuille).FenLoad Then
            Me.MnuFeuilleCharger.Enabled = True
        Else
            Me.MnuFeuilleCharger.Enabled = False
        End If
        
        Me.MnuFeuilleChargerTout.Enabled = False
        For i = 1 To UBound(tbl_fenExcel)
            If Not tbl_fenExcel(i).FenLoad Then
                Me.MnuFeuilleChargerTout.Enabled = True
            End If
        Next i
                
        PopupMenu Me.MnuFeuille
        
    End If
End Sub

Private Function Tester_Feuille_Chargée(v_num)
    Dim leY As String
    
    On Error GoTo Erreur
    leY = grdCell(v_num).row
    On Error GoTo 0
    Tester_Feuille_Chargée = True
    Exit Function
Erreur:
    Tester_Feuille_Chargée = False
End Function

Private Sub grdForm_Click()
    'Call charge_grdfiltre(grdForm.Row)
    Dim i As Integer, j As Integer
    Dim i_grdregle As Integer
    Dim LaRow As Integer
    Dim lebool As Boolean
    Dim strX As String
    Dim leX As Integer, leY As Integer
    Dim leIndex As Integer
    Dim ANC_p_bfaire_RowColChange As Boolean
    Dim lig As Integer
    Dim nomChp As String
    Dim n As Integer
    Dim laboule As String
    Dim iBoule As Integer
    Dim ff_titre As String, sql As String
    
    If ChargementEnCours Then
        StopperChargement = True
        Exit Sub
    Else
        On Error Resume Next
        grdCell(g_numfeuille).Visible = True
    End If
    
    ChargementEnCours = True
    If grdForm.Rows = 0 Then Exit Sub
    grdDem.Visible = False
    
    Me.LblHelp.Visible = False
    For i = 0 To 8
        Me.cmdTypeChp(i).Visible = False
    Next i
    
    For i = 0 To grdForm.Rows - 1
        i_grdregle = FctAttribIndex(grdForm.TextMatrix(i, GrdForm_FF_Num), grdForm.TextMatrix(i, GrdForm_FF_NumIndice))
        '''''i_grdregle = (grdForm.TextMatrix(i, GrdForm_FF_Num) * 100) + grdForm.TextMatrix(i, GrdForm_FF_NumIndice)
        grdCond(i_grdregle).Visible = False
    Next i
    
    grdForm.ColSel = grdForm.col
    grdForm.RowSel = grdForm.row
    
    'i_grdregle = (grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num) * 100) + grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice)
    i_grdregle = FctAttribIndex(grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num), grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice))
    grdCond(i_grdregle).Visible = True
    
    cmd(CMD_SUPPR_COND).Visible = False
    For i = 0 To grdCond(i_grdregle).Rows - 1
        If grdCond(i_grdregle).TextMatrix(i, GrdCond_TypeFL) = "A" Then '   "L" Then
            cmd(CMD_SUPPR_COND).Visible = True
        End If
    Next i
    
    cmd(CMD_PARAM_FILTRE).Visible = True
    cmd(CMD_PRM_FORM).Visible = True
    cmd(CMD_AJOUT_DEM).Visible = True
    cmd(CMD_SUPPR_FORM).Visible = True
    cmd(CMD_VOIR_FORM).Visible = True
    cmd(CMD_ACCES_KALIDOC).Visible = True
    
    LaRow = grdForm.row
    For i = 0 To grdForm.Rows - 1
        If i = LaRow Then
            lebool = True
        Else
            lebool = False
        End If
        grdForm.row = i
        grdForm.col = GrdForm_FF_Titre
        grdForm.CellFontBold = lebool
        grdForm.col = GrdForm_FF_Lib
        grdForm.CellFontBold = lebool
        For j = 0 To grdForm.Cols - 1
            If lebool Then
                grdForm.col = j
                grdForm.CellBackColor = grdForm.BackColorFixed
            Else
                grdForm.col = j
                grdForm.CellBackColor = grdForm.BackColorBkg
            End If
        Next j
        DoEvents
    Next i
    grdForm.row = LaRow
    
    grdDem.Cols = 5
    
    p_numfiltre_encours = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num)
    p_numindice_encours = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice)
    sql = "select ff_titre from filtreform where ff_num=" & p_numfiltre_encours
    Call Odbc_RecupVal(sql, ff_titre)
    Me.Label1.Caption = "Liste des filtres utilisés => (" & ff_titre & ")"
    If p_numfiltre_encours = p_ANC_numfiltre_encours Then
        If p_numindice_encours = p_ANC_numindice_encours Then
            ' c'est le meme => on quitte
            ChargementEnCours = False
            grdDem.Visible = True
            ' mettre les bonnes couleurs
            Call FctMetCouleur("DEM", grdDem)
            Exit Sub
        End If
    End If
    
    p_ANC_numfiltre_encours = p_numfiltre_encours
    p_ANC_numindice_encours = p_numindice_encours
    If Odbc_RecupVal("select ff_fornum from filtreform where ff_num=" & p_numfiltre_encours, p_numfor_encours) = P_ERREUR Then
    End If

    ANC_p_bfaire_RowColChange = p_bfaire_RowColChange
    p_bfaire_RowColChange = False

    
    
Continu_2:
    On Error GoTo 0
    ' mettre aussi l'epingle dans grdform
    For i = 0 To grdForm.Rows - 1
        grdForm.row = i
        grdForm.col = GrdForm_FF_Image
        If i = LaRow Then
            Set grdForm.CellPicture = imglst.ListImages(IMG_BOULEBF).Picture
        Else
            Set grdForm.CellPicture = imglst.ListImages(IMG_BOULEBC).Picture 'Nothing
        End If
    Next i
    
    grdForm.row = LaRow
    
    ' afficher le grid des champs à demander
    grdDem.Rows = 0
    grdDem.Visible = False
    Label3.Visible = True
    cmd(CMD_AJOUT_DEM).Visible = True
    cmd(CMD_SUPPR_DEM).Visible = False
    cmd(CMD_PRM_DEMANDER).Visible = cmd(CMD_SUPPR_DEM).Visible
    On Error GoTo err_TabDem
    grdDem.Cols = 5
    grdDem.ColWidth(0) = 0
    grdDem.ColWidth(1) = 0
    grdDem.ColWidth(2) = grdDem.Width - 700
    grdDem.ColWidth(3) = 300
    grdDem.ColWidth(4) = 400
    ' mettre aussi les demandes globales si même formulaire FO  - ou même filtre FI
    For i = 0 To UBound(tbl_Demande)
        If tbl_Demande(i).DemandChpNum = -1 Then GoTo NextI
        If tbl_Demande(i).DemandAussiStr <> "" And InStr(tbl_Demande(i).DemandAussiStr, p_numfiltre_encours & ":" & p_numindice_encours & ":") > 0 Then GoTo Faire
        If InStr("LO*FO*FI", tbl_Demande(i).DemandGlobale) = 0 Then
            tbl_Demande(i).DemandGlobale = "LO"
        End If
        If tbl_Demande(i).DemandGlobale = "FO" And tbl_Demande(i).DemandForNum = p_numfor_encours Then
            GoTo Faire
        ElseIf tbl_Demande(i).DemandGlobale = "FI" And tbl_Demande(i).DemandFFNum = p_numfiltre_encours Then
            GoTo Faire
        Else
            ' voir si elle est locale
            If tbl_Demande(i).DemandForNum = p_numfor_encours Then
                If tbl_Demande(i).DemandFFNum = p_numfiltre_encours Then
                    If tbl_Demande(i).DemandFormInd = p_numindice_encours Then
                        GoTo Faire
                    End If
                End If
            End If
        End If
        GoTo NextI
Faire:
        lig = grdDem.Rows
        nomChp = FctNomChp(tbl_Demande(i).DemandChpNum)
        nomChp = nomChp & " " & tbl_Demande(i).DemandChpStrPlus
        If tbl_Demande(i).DemandAussiStr <> "" And InStr(tbl_Demande(i).DemandAussiStr, p_numfiltre_encours & ":" & p_numindice_encours & ":") > 0 Then
            iBoule = IMG_BOULEBC
        ElseIf tbl_Demande(i).DemandAussiStr <> "" Then
            iBoule = IMG_BOULEBF
        Else
            iBoule = -1
        End If

        'If InStr(tbl_Demande(i).DemandAussiStr, p_numfiltre_encours & ":" & p_numfor_encours & ":") > 0 Or InStr(tbl_Demande(i).DemandAussiStr, p_numfiltre_encours & ":" & p_numfor_encours & ":") > 0 Then
        If iBoule >= 0 Then
            grdDem.AddItem i & vbTab & tbl_Demande(i).DemandChpNum & vbTab & nomChp & " (" & tbl_Demande(i).DemandForNum & "_" & tbl_Demande(i).DemandFormInd & ")" & vbTab & "" & vbTab & tbl_Demande(i).DemandFouA, lig
        Else
            grdDem.AddItem i & vbTab & tbl_Demande(i).DemandChpNum & vbTab & nomChp & " (" & tbl_Demande(i).DemandForNum & "_" & tbl_Demande(i).DemandFormInd & ")" & vbTab & tbl_Demande(i).DemandGlobale & vbTab & tbl_Demande(i).DemandFouA, lig
        End If
        grdDem.row = grdDem.Rows - 1
        grdDem.col = 3
        If iBoule >= 0 Then
            Set grdDem.CellPicture = imglst.ListImages(iBoule).Picture
        Else
            Set grdDem.CellPicture = Nothing
        End If
        grdDem.Visible = True
        cmd(CMD_AJOUT_DEM).Visible = True
        cmd(CMD_SUPPR_DEM).Visible = True
        cmd(CMD_PRM_DEMANDER).Visible = True
NextI:
    Next i
    If tbl_Demande(grdDem.TextMatrix(0, 0)).DemandAussiStr = "" Then
        cmd(CMD_PRM_DEMANDER).BackColor = &HE0E0E0  ' grdForm.BackColorFixed
    Else
        cmd(CMD_PRM_DEMANDER).BackColor = &H80C0FF  ' grdForm.BackColorBkg
    End If
err_TabDem:
    On Error GoTo 0
    
    cmd(CMD_PRM_COND).Visible = True
        
    ' mettre les bonnes couleurs
    Call FctMetCouleur("DEM", grdDem)
    '**********************************************************
    ' mettre les epingles à la bonne couleur
    On Error GoTo Err_Suite2
    i = UBound(tbl_fichExcel())
    GoTo Suite_2
Err_Suite2:
    Resume Continu_2
Suite_2:
    On Error GoTo 0
    For i = 0 To UBound(tbl_fichExcel())
        If StopperChargement Then
            StopperChargement = False
            ChargementEnCours = False
            grdCell(g_numfeuille).Visible = False
            Exit Sub
        End If
        If tbl_fichExcel(i).CmdType = "CHP" Then
            If tbl_fichExcel(i).CmdFenNum = g_numfeuille Then
                ' MODIF LN 19/12/11
                'If tbl_fichExcel(i).CmdChpNum > -1 Then
                If tbl_fichExcel(i).CmdChpNum <> -1 Then
                    ' emplacement du champ
                    strX = tbl_fichExcel(i).CmdX
                    leX = FctIntColdest(strX)
                    ' pour tester
                    If Not Tester_Feuille_Chargée(g_numfeuille) Then GoTo Suite_3
                    leY = grdCell(g_numfeuille).row
                    leY = tbl_fichExcel(i).CmdY
                    'MsgBox tbl_fichExcel(I).CmdTypeChp
                    ' on ne le fait que pour les lignes déjà chargée
                    'MsgBox val(grdFeuille.TextMatrix(g_numfeuille - 1, GrdFeuil_Chargement))
                    If leY > val(grdFeuille.TextMatrix(g_numfeuille - 1, GrdFeuil_Chargement)) Then
                        GoTo Suite_3
                    End If
                    If tbl_fichExcel(i).CmdFormNum = p_numfiltre_encours And tbl_fichExcel(i).CmdFormIndice = p_numindice_encours Then
                        ' on met en rouge
                        grdCell(g_numfeuille).row = leY
                        grdCell(g_numfeuille).col = leX
                        If Mid(tbl_fichExcel(i).cmdTypeChp, 1, 6) = "Liste=" Then
                            If InStr(tbl_fichExcel(i).cmdTypeChp, "Ici") > 0 Then
                                Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_CHP_LOUPEB).Picture
                            Else
                                Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_CHP_LOUPER).Picture
                            End If
                        Else
                            If grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_BOULE_ERREUR).Picture Then
                                ' c'est rouge, on laisse
                            ElseIf tbl_fichExcel(i).CmdChpSQL <> "" Then
                                If tbl_fichExcel(i).CmdCondition <> "" Then
                                    Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_SQL_SELECT_FPLUS).Picture
                                Else
                                    Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_SQL_SELECT_F).Picture
                                End If
                            ElseIf tbl_fichExcel(i).CmdCondition <> "" Then
                                Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_BOULEBF_PLUS).Picture
                            Else
                                Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_BOULEBF).Picture
                            End If
                        End If
                    Else
                        ' on met en jaune
                        grdCell(g_numfeuille).row = leY
                        grdCell(g_numfeuille).col = leX
                        If Mid(tbl_fichExcel(i).cmdTypeChp, 1, 6) = "Liste=" Then
                            If InStr(tbl_fichExcel(i).cmdTypeChp, "Ici") > 0 Then
                                Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_CHP_LOUPEB).Picture
                            Else
                                Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_CHP_LOUPER).Picture
                            End If
                        Else
                            If grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_BOULE_ERREUR).Picture Then
                                ' c'est rouge, on laisse
                            ElseIf tbl_fichExcel(i).CmdChpSQL <> "" Then
                                If tbl_fichExcel(i).CmdCondition <> "" Then
                                    Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_SQL_SELECT_CPLUS).Picture
                                Else
                                    Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_SQL_SELECT_C).Picture
                                End If
                            ElseIf tbl_fichExcel(i).CmdCondition <> "" Then
                                Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_BOULEBC_PLUS).Picture
                            Else
                                Set grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_BOULEBC).Picture
                            End If
                        End If
                    End If
                    GoTo Suite_3
Err_Suite_3:
                    Resume Suite_3
Suite_3:
                    On Error GoTo 0
                End If
            End If
        End If
'Sleep 500
        DoEvents
    Next i
    
    p_bfaire_RowColChange = ANC_p_bfaire_RowColChange
    ChargementEnCours = False
    If grdCell.Count > 1 Then
        grdCell(g_numfeuille).Visible = True
    End If
    On Error GoTo 0
    
End Sub

Private Function FctNomChp(v_numchp As Integer)
    Dim sql As String
    Dim rs As rdoResultset
    
    If (v_numchp < -10) Then
        FctNomChp = "nombre de fiches"
        Exit Function
    End If
    
    sql = "select * from formetapechp where forec_num=" & v_numchp
    
    Set rs = Odbc_Cnx.OpenResultset(sql, rdOpenKeyset, rdConcurRowVer)
    FctNomChp = rs("FOREC_Label").Value
End Function


Private Sub grdform_KeyDown(KeyCode As Integer, Shift As Integer)

    If KeyCode = vbKeyF4 Then
        KeyCode = 0
        Call ajouter_filtre
    ElseIf KeyCode = vbKeyDelete Then
        KeyCode = 0
        Call supprimer_form
    End If
    
End Sub

Private Sub grdForm_MouseDown(Button As Integer, Shift As Integer, x As Single, y As Single)
    Dim LaUbound As Integer, i As Integer
    Dim j As Integer
    Dim ret As Integer
    Dim num As String
    
    If Button = 2 Then
        PopupMenu Me.MnuFiltre
    ElseIf bCopieFiltre And Button = 1 And DerKeycode <> 27 Then
        bCopieFiltre = False
    ElseIf (bTransfereSelection Or bTransfereDes Or bTransfereUn Or bTransfereFen Or bTransfereTous) And Button = 1 And DerKeycode <> 27 Then
        If bTransfereUn Then
            tbl_fichExcel(p_i_tabExcel).CmdFormNum = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num)
            tbl_fichExcel(p_i_tabExcel).CmdFormIndice = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice)
            bTransfereUn = False
            grdForm.row = grdForm.RowSel
            Call grdForm_Click
            Me.LblHelp.Visible = False
            Me.LblHelp.ForeColor = 0
            Call verifSiSauve
        ElseIf bTransfereSelection Then
            LaUbound = -1
            On Error GoTo Vide
            LaUbound = -1
            LaUbound = UBound(tb_Selection())
            If LaUbound > -1 Then
                ret = FaireCopy("Transférer")
                If ret Then
                    ' on a terminé : vider la selection
                    MnuSelection.Caption = "Transfert des champs terminé"
                    'MnuSelectionStop.Visible = True
                    MnuSelection_Voir.Visible = True
                    MnuChpCollerSelection.tag = 0
                    MnuChpDeplacerSelection.tag = 0
                End If
            End If
            bTransfereSelection = False
        ElseIf bTransfereTous Or bTransfereFen Then
            LaUbound = -1
            On Error GoTo Vide
            LaUbound = UBound(tbl_fichExcel())
            On Error GoTo 0
            For i = 0 To LaUbound
                If val(tbl_fichExcel(i).CmdFenNum) = g_numfeuille Then
                    If tbl_fichExcel(i).CmdType = "CHP" Then
                        If i <> p_i_tabExcel Then
                            If bTransfereTous Or (bTransfereFen And val(tbl_fichExcel(i).CmdFenNum) = g_numfeuille) Then
                                If tbl_fichExcel(i).CmdFormIndice = tbl_fichExcel(p_i_tabExcel).CmdFormIndice Then
                                    If tbl_fichExcel(i).CmdFormNum = tbl_fichExcel(p_i_tabExcel).CmdFormNum Then
                                        ' ok : on transfère
                                        tbl_fichExcel(i).CmdFormIndice = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice)
                                        tbl_fichExcel(i).CmdFormNum = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num)
                                        'tbl_fichExcel(i).CmdFormIndice = grdForm.TextMatrix(grdForm.RowSel, GrdCond_NumIndice)
                                        'tbl_fichExcel(i).CmdFormNum = grdForm.TextMatrix(grdForm.RowSel, GrdCond_NumFiltre)
                                    End If
                                End If
                            End If
                        End If
                    End If
                End If
            Next i
            ' le dernier
            If bTransfereTous Or (bTransfereFen And val(tbl_fichExcel(p_i_tabExcel).CmdFenNum) = g_numfeuille) Then
                tbl_fichExcel(p_i_tabExcel).CmdFormNum = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num)
                tbl_fichExcel(p_i_tabExcel).CmdFormIndice = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice)
            End If
            bTransfereTous = False
            bTransfereFen = False
            grdForm.row = grdForm.RowSel
            Call grdForm_Click
            Me.LblHelp.Visible = False
            Me.LblHelp.ForeColor = 0
            Call verifSiSauve
        ElseIf bTransfereDes Then
            LaUbound = -1
            On Error GoTo Vide
            LaUbound = UBound(tbl_fichExcel())
            On Error GoTo 0
            For j = 0 To STR_GetNbchamp(lstTransfert, ";")
                num = STR_GetChamp(lstTransfert, ";", j)
                If num <> "" Then
                    For i = 0 To LaUbound
                        If val(tbl_fichExcel(i).CmdChpNum) = val(num) Then
                            If tbl_fichExcel(i).CmdType = "CHP" Then
                                ' ok : on transfère
                                tbl_fichExcel(i).CmdFormIndice = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice)
                                tbl_fichExcel(i).CmdFormNum = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num)
                                Exit For
                            End If
                        End If
                    Next i
                End If
            Next j
            ' le dernier
            'If bTransfereTous Or (bTransfereFen And val(tbl_fichExcel(p_i_tabExcel).CmdFenNum) = g_numfeuille) Then
            '    tbl_fichExcel(p_i_tabExcel).CmdFormNum = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num)
            '    tbl_fichExcel(p_i_tabExcel).CmdFormIndice = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice)
            'End If
            bTransfereDes = False
            grdForm.row = grdForm.RowSel
            Call grdForm_Click
            Me.LblHelp.Visible = False
            Me.LblHelp.ForeColor = 0
            Call verifSiSauve
        End If
        On Error Resume Next
        grdCell(g_numfeuille).Visible = True
    End If
Vide:
    On Error GoTo 0
End Sub

Private Sub LblHelp_DblClick()
    FormDétail.Caption = "Détail"
    FormDétail.Détail_Text.Text = Me.LblHelp.Caption
    FormDétail.Show 1
End Sub

Private Sub MnuChpAjoutChamp_Click()
    cmd(CMD_MODE_CHAMP).Visible = False
    cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
    cmd(CMD_MODE_SIMUL).Visible = False
    cmd(CMD_MODE_LIEN).Visible = False
    cmd(CMD_MODE_FORMULE).Visible = False
    cmd(CMD_MODE_POLICE).Visible = False
    Call ajouter_champ(g_Ajouter_Champ_Index, g_Ajouter_Champ_numfiltre_encours, g_Ajouter_Champ_grdCell_RowSel, g_Ajouter_Champ_grdCell_ColSel, (Not g_Ajouter_Champ_bdeja), False)
End Sub

Private Sub MnuChpAjoutResultatRapport_Click()
    cmd(CMD_MODE_CHAMP).Visible = False
    cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
    cmd(CMD_MODE_SIMUL).Visible = False
    cmd(CMD_MODE_LIEN).Visible = False
    cmd(CMD_MODE_FORMULE).Visible = False
    cmd(CMD_MODE_POLICE).Visible = False
    Call ajouter_resultatrapport
End Sub

Private Sub MnuChpAjoutChampFiltre_Click()
    cmd(CMD_MODE_CHAMP).Visible = False
    cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
    cmd(CMD_MODE_SIMUL).Visible = False
    cmd(CMD_MODE_LIEN).Visible = False
    cmd(CMD_MODE_FORMULE).Visible = False
    cmd(CMD_MODE_POLICE).Visible = False
    Call ajouter_champ_filtre(g_Ajouter_Champ_Index, g_Ajouter_Champ_numfiltre_encours, g_Ajouter_Champ_grdCell_RowSel, g_Ajouter_Champ_grdCell_ColSel, (Not g_Ajouter_Champ_bdeja), False)
End Sub

Private Sub MnuChpAjoutIndic_Click()
    cmd(CMD_MODE_CHAMP).Visible = False
    cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
    cmd(CMD_MODE_SIMUL).Visible = False
    cmd(CMD_MODE_LIEN).Visible = False
    cmd(CMD_MODE_FORMULE).Visible = False
    cmd(CMD_MODE_POLICE).Visible = False

End Sub

Private Sub MnuChpAjoutPlusieursChamp_Click()
    cmd(CMD_MODE_CHAMP).Visible = False
    cmd(CMD_MODE_GRAPHIQUE).Visible = cmd(CMD_MODE_CHAMP).Visible
    cmd(CMD_MODE_SIMUL).Visible = False
    cmd(CMD_MODE_LIEN).Visible = False
    cmd(CMD_MODE_FORMULE).Visible = False
    cmd(CMD_MODE_POLICE).Visible = False
    Call ajouter_Plusieurs_champ(g_Ajouter_Champ_Index, g_Ajouter_Champ_numfiltre_encours, g_Ajouter_Champ_grdCell_RowSel, g_Ajouter_Champ_grdCell_ColSel, (Not g_Ajouter_Champ_bdeja), False)

End Sub

Private Sub MnuChpColler_Click()
    Dim newDim As Integer
    Dim AncNum As Integer
    Dim strX As String
    Dim leX As Integer
    Dim leY As Integer
    Dim chpnum As Integer
    Dim sql As String, rs As rdoResultset
    Dim idgrid As String
    Dim IndiceNum As Integer
    Dim i_Ubound  As Integer
    Dim i As Integer
    Dim der_uBound As Integer
    
    If Me.MnuChpCopier.tag > 0 Then
        AncNum = Me.MnuChpCopier.tag
        idgrid = g_numfeuille
        On Error GoTo Err_Suite_3
        newDim = UBound(tbl_fichExcel()) + 1
        GoTo Suite_3
Err_Suite_3:
        newDim = 1
        Resume Suite_3
Suite_3:
        On Error GoTo 0
        ReDim Preserve tbl_fichExcel(newDim) As SFICH_PARAM_EXCEL
        p_bool_tbl_fichExcel = True
        tbl_fichExcel(newDim).CmdType = "CHP"
        tbl_fichExcel(newDim).CmdFormNum = tbl_fichExcel(AncNum).CmdFormNum
        tbl_fichExcel(newDim).CmdFormIndice = tbl_fichExcel(AncNum).CmdFormIndice
        tbl_fichExcel(newDim).CmdChpNum = tbl_fichExcel(AncNum).CmdChpNum
        tbl_fichExcel(newDim).CmdFenNum = tbl_fichExcel(AncNum).CmdFenNum
        tbl_fichExcel(newDim).CmdX = FctStrColDest(grdCell(idgrid).ColSel)
        tbl_fichExcel(newDim).CmdY = grdCell(idgrid).RowSel
        tbl_fichExcel(newDim).CmdMenFormeChp = tbl_fichExcel(AncNum).CmdMenFormeChp
        tbl_fichExcel(newDim).CmdCondition = tbl_fichExcel(AncNum).CmdCondition
        tbl_fichExcel(newDim).CmdChpSQL = tbl_fichExcel(AncNum).CmdChpSQL
        ' les conditions du champ
        IndiceNum = tbl_fichExcel(AncNum).CmdChpGridIndice
        ' charger le nouveau
        If p_bool_tbl_condCHP Then
            der_uBound = UBound(tbl_condChp)
        End If
        Faire_Load_GrdCondChp tbl_fichExcel(newDim).CmdChpNum, tbl_fichExcel(newDim).CmdChpIndice, newDim
        If p_bool_tbl_condCHP Then
            For i = der_uBound + 1 To UBound(tbl_condChp)
                tbl_condChp(i).CondChpChpFormIndice = p_Indice_Grid_ChpCond
            Next i
        End If
        
        Public_VerifOuvrir g_CheminModele, False, True, p_tbl_FichExcelOuverts
            
        Call verifSiSauve
        
        ' finaliser l'affichage
        'MsgBox Forme
        strX = tbl_fichExcel(newDim).CmdX
        leX = FctIntColdest(strX)
        leY = tbl_fichExcel(newDim).CmdY
        ' Mettre le champ
        chpnum = tbl_fichExcel(newDim).CmdChpNum
        If chpnum > 0 Then
            sql = "select * from formetapechp where forec_num = " & tbl_fichExcel(newDim).CmdChpNum
            If Odbc_SelectV(sql, rs) = P_ERREUR Then
                Exit Sub
            End If
        End If
        'grdCell(v_idgrid).TextMatrix(leY, leX) = "    " & rs("forec_nom")
        p_bfaire_RowColChange = False
        grdCell(idgrid).row = leY
        grdCell(idgrid).col = leX
        Set grdCell(idgrid).CellPicture = imglst.ListImages(IMG_CHAMP).Picture
        ' Mise en forme
        IndiceNum = p_numindice_encours
    
        Public_VerifOuvrir g_CheminModele, False, True, p_tbl_FichExcelOuverts
    
        Call P_MettreChamp("Mettre", newDim, leX, leY, tbl_fichExcel(newDim).CmdMenFormeChp, chpnum, IndiceNum, val(idgrid), False)
        p_bfaire_RowColChange = True
    
        ' MODIF LN 27/07/11
        Call verifSiSauve
        
        If p_ListeRafraichirFenetre <> "" Then
            MsgBox "Votre feuille a besoin d'être ajustée."
            p_ListeRafraichirFenetre = ""
            p_ListeRafraichirTropX = 0
            p_ListeRafraichirTropY = 0
            Call Rafraichir
        End If
    End If
End Sub

Private Sub MnuChpCollerSelection_Click()
    Dim ret As Integer

    If InStr(MnuChpCollerSelection.tag, "_") > 0 Then
        ret = FaireCopy("Copier")
        If ret Then
            ' on a terminé : vider la selection
            p_Mode_SelectionDeA = False
            p_Mode_SelectionClick = False
            MnuSelection.Caption = "Duplication des champs terminée"
            MnuSelectionNewForm.Visible = True
            'MnuSelectionStop.Visible = True
            MnuSelection_Voir.Visible = True
            MnuChpCollerSelection.tag = 0
            MnuChpDeplacerSelection.tag = 0
            ' la remplir avec
            If MsgBox("Raffraichir", vbQuestion + vbYesNo) = vbYes Then
                If g_Feuille2_araffraichir > 0 Then
                    g_numfeuille = g_Feuille2_araffraichir
                    g_Feuille2_araffraichir = 0
                    Call cmd_Click(CMD_RAFRAICHIR)
                End If
                If g_Feuille1_araffraichir > 0 Then
                    g_numfeuille = g_Feuille1_araffraichir
                    g_Feuille1_araffraichir = 0
                    Call cmd_Click(CMD_RAFRAICHIR)
                End If
            End If
        End If
    End If
End Sub

Private Sub MnuChpDeplacerSelection_Click()
    Dim ret As Integer

    If InStr(MnuChpCollerSelection.tag, "_") > 0 Then
        ret = FaireCopy("Déplacer")
        If ret Then
            ' on a terminé : vider la selection
            p_Mode_SelectionDeA = False
            p_Mode_SelectionClick = False
            MnuSelection.Caption = "Mode Sélection"
            MnuSelectionNewForm.Visible = True
            'MnuSelectionStop.Visible = True
            MnuSelection_Voir.Visible = True
            MnuChpCollerSelection.tag = 0
            MnuChpDeplacerSelection.tag = 0
            ' la remplir avec
            If MsgBox("Raffraichir", vbQuestion + vbYesNo) = vbYes Then
                If g_Feuille2_araffraichir > 0 Then
                    g_numfeuille = g_Feuille2_araffraichir
                    g_Feuille2_araffraichir = 0
                    Call cmd_Click(CMD_RAFRAICHIR)
                End If
                If g_Feuille1_araffraichir > 0 Then
                    g_numfeuille = g_Feuille1_araffraichir
                    g_Feuille1_araffraichir = 0
                    Call cmd_Click(CMD_RAFRAICHIR)
                End If
            End If
        End If
    End If
End Sub

Private Sub MnuChpCopier_Click()
    
    Me.MnuChpCopier.tag = p_i_tabExcel
    Me.MnuChpCopier.Enabled = False
    Me.MnuChpColler.Enabled = True
End Sub

Private Sub MnuChpGraphiqueCopier_Click()
    Dim nbgraph As Integer
    Dim i As Integer
    Dim nbre As Integer
    Dim sret As String
    Dim lib As String
    Dim ret As Integer
    Dim TypeGraphique As Variant
    Dim Graphique As Integer
    Dim Feuille As Integer
    Dim snom As String
    
    ' faire la liste de tous les graphiques
Lab_Init:
    Call CL_Init
    nbgraph = 0
    On Error GoTo Err_Suite2
    i = UBound(tbl_fichExcel())
    GoTo Suite_2
Err_Suite2:
    Resume Fin
Suite_2:
    On Error GoTo 0
    'Call CL_InitGererTousRien(True)
    'Call CL_InitMultiSelect(True, True)
    'MsgBox "ici"
    NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
    If InStr(NomFichierParam, ".") = 0 Then
        NomFichierParam = NomFichierParam & "."
    End If
    ' ouvrir le fichier Excel
    Public_VerifOuvrir NomFichierParam & p_ExtensionXls, False, True, p_tbl_FichExcelOuverts()
    Set Exc_wrk = Exc_obj.ActiveWorkbook
    Exc_wrk.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Activate
    
    ' prendre tous les champs
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdChpNum > 0 Then
            If tbl_fichExcel(i).CmdType = "CHP" Then
                ret = VoirSiChartExiste("C", "", g_numfeuille, i, sret)
                If ret >= 0 Then
                    ret = VoirSiChartExiste("Titre", TypeGraphique, g_numfeuille, i, sret)
                    If ret >= 0 Then
                        lib = sret & vbTab & Exc_obj.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Shapes(ret).Name
                    Else
                        If p_VersionExcel = "2003" Then
                            lib = Replace(Exc_obj.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Shapes(ret).Name, "KALITECH_", "")
                        Else
                            lib = Replace(Exc_obj.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Shapes(ret).Name, "KALITECH_", "")
                        End If
                    End If
                    If TypeGraphique = xlPie Then
                        lib = lib & vbTab & "(Secteur)"
                    Else
                        lib = lib & vbTab & "(Histogramme)"
                    End If
                    Call CL_AddLigne(lib, ret, g_numfeuille, False)
                    nbgraph = nbgraph + 1
                End If
            End If
        End If
    Next i
    
    ' prendre tous les autres graphiques
    If p_VersionExcel = "2003" Then
        For i = 1 To Exc_obj.Sheets.Count
            If Exc_obj.Sheets(i).ChartObjects.Count > 0 Then
                For nbre = 1 To Exc_obj.Sheets(i).ChartObjects.Count
                    If Exc_obj.Sheets(i).ChartObjects(nbre).type = 3 Then
                        If InStr(Exc_obj.Sheets(i).ChartObjects(nbre).Name, "KALITECH") = 0 Then
                            Exc_obj.Sheets(i).ChartObjects(nbre).Select
                            If Exc_obj.ActiveChart.HasTitle Then
                                lib = Exc_obj.ActiveChart.ChartTitle.Text
                            Else
                                lib = Exc_obj.Sheets(i).ChartObjects(nbre).Name
                            End If
        
                            Call CL_AddLigne(lib, nbre, i, False)
                            nbgraph = nbgraph + 1
                        End If
                    End If
                Next nbre
            End If
        Next i
    Else
        For i = 1 To Exc_obj.Sheets.Count
            If Exc_obj.Sheets(i).Shapes.Count > 0 Then
                For nbre = 1 To Exc_obj.Sheets(i).Shapes.Count
                    If Exc_obj.Sheets(i).Shapes(nbre).type = 3 Then ' type graphique
                        If InStr(Exc_obj.Sheets(i).Shapes(nbre).Name, "KALITECH") = 0 Then
                            Exc_obj.Sheets(i).Shapes(nbre).Select
                            If Exc_obj.Sheets(i).Shapes(nbre).Chart.HasTitle Then
                                lib = Exc_obj.Sheets(i).Shapes(nbre).Chart.ChartTitle.Text & vbTab & Exc_obj.Sheets(i).Shapes(nbre).Chart.Name
                            Else
                                lib = "" & vbTab & Exc_obj.Sheets(i).Shapes(nbre).Chart.Name
                            End If
                            If TypeGraphique = xlPie Then
                                lib = lib & vbTab & "(Secteur)"
                            Else
                                lib = lib & vbTab & "(Histogramme)"
                            End If
                            Call CL_AddLigne(lib, nbre, i, False)
                            nbgraph = nbgraph + 1
                        End If
                    End If
                Next nbre
            End If
        Next i
    End If
    If nbgraph = 0 Then
        MsgBox "Aucun graphique à générer dans cette feuille"
        Exit Sub
    End If
    Call CL_InitTitreHelp("Graphiques déjà créés", "")
    Call CL_AddBouton("Renommer", "", 0, vbKeyEscape, 2000)
    Call CL_AddBouton("Recopier", "", 0, vbKeyEscape, 2000)
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
    Call CL_InitTaille(0, -15)
    
    ChoixListe.Show 1
    If CL_liste.retour = 2 Then
        Exit Sub
    End If
        
    If CL_liste.retour = 0 Then ' Renommer un graphique
        Graphique = CL_liste.lignes(CL_liste.pointeur).num
        Feuille = CL_liste.lignes(CL_liste.pointeur).tag
        snom = "KALITECH_" & tbl_fichExcel(Me.MnuChpGraphique.tag).CmdX & "_" & tbl_fichExcel(Me.MnuChpGraphique.tag).CmdY
        sret = InputBox("Nom du graphique (ex: " & snom & ")", "Renommer", snom)
        If sret <> "" Then
            Exc_obj.Sheets(Feuille).Shapes(Graphique).Name = sret
        End If
        GoTo Lab_Init
        Exit Sub
    End If
        
    ' Générer les graphiques
    Graphique = CL_liste.lignes(CL_liste.pointeur).num
    Feuille = CL_liste.lignes(CL_liste.pointeur).tag
    ' Sélectionner l'ancien graphique
    
    Call FctCreerGraphique("AP", Graphique, Feuille, "", g_numfeuille, Me.MnuChpGraphique.tag)
    MsgBox "Graphique recopié"
    GoTo Lab_Init
Fin:
    On Error GoTo 0
End Sub

Private Sub MnuChpGraphiqueHisto_Click()
    Dim i_FenDest As Integer
    Dim iTab As Integer
    
    NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
    If InStr(NomFichierParam, ".") = 0 Then
        NomFichierParam = NomFichierParam & "."
    End If
    ' ouvrir le fichier Excel
    Public_VerifOuvrir NomFichierParam & p_ExtensionXls, False, True, p_tbl_FichExcelOuverts()
    Set Exc_wrk = Exc_obj.ActiveWorkbook
    Exc_wrk.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Activate
    
    i_FenDest = g_numfeuille
    iTab = Me.MnuChpGraphique.tag
    Call FctCreerGraphique("C", 0, 0, "H", i_FenDest, iTab)
End Sub

Private Sub MnuChpGraphiqueRenommer_Click()
    Dim i_FenDest As Integer
    Dim iTab As Integer
    Dim snom As String
    Dim sret As String
    Dim num As Integer
    Dim cellule As String
    
    NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
    If InStr(NomFichierParam, ".") = 0 Then
        NomFichierParam = NomFichierParam & "."
    End If
    ' ouvrir le fichier Excel
    Public_VerifOuvrir NomFichierParam & p_ExtensionXls, False, True, p_tbl_FichExcelOuverts()
    Set Exc_wrk = Exc_obj.ActiveWorkbook
    Exc_wrk.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Activate
    
    i_FenDest = g_numfeuille
    iTab = Me.MnuChpGraphique.tag
    num = VoirSiChartExiste("Type", 0, g_numfeuille, Me.MnuChpGraphique.tag, sret)

    snom = "KALITECH_" & i_FenDest & "_" & tbl_fichExcel(Me.MnuChpGraphique.tag).CmdX & "_" & tbl_fichExcel(Me.MnuChpGraphique.tag).CmdY
    cellule = tbl_fichExcel(Me.MnuChpGraphique.tag).CmdX & tbl_fichExcel(Me.MnuChpGraphique.tag).CmdY
    sret = InputBox("Nom du graphique " & Chr(13) & Chr(10) & "ex: " & snom & Chr(13) & Chr(10) & " pour Fenêtre " & i_FenDest & " cellule " & cellule, "Renommer", snom)
    If sret <> "" Then
         Exc_obj.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Shapes(num).Name = sret
    End If
End Sub

Private Sub MnuChpGraphiqueSecteur_Click()
    Dim i_FenDest As Integer
    Dim iTab As Integer
    
    NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
    If InStr(NomFichierParam, ".") = 0 Then
        NomFichierParam = NomFichierParam & "."
    End If
    ' ouvrir le fichier Excel
    Public_VerifOuvrir NomFichierParam & p_ExtensionXls, False, True, p_tbl_FichExcelOuverts()
    Set Exc_wrk = Exc_obj.ActiveWorkbook
    Exc_wrk.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Activate
    
    i_FenDest = g_numfeuille
    iTab = Me.MnuChpGraphique.tag
    Call FctCreerGraphique("C", 0, 0, "S", i_FenDest, iTab)
End Sub

Private Function FctCreerGraphique(v_Trait As String, v_iShapeOrig As Integer, v_iFeuilleOrig As Integer, v_typegraphique As String, v_numfeuille As Integer, v_iTab As Integer)
    Dim Sheet As Sheets
    Dim laShape As shape
    Dim sret As String
    Dim nb As Integer
    Dim ret As Integer
    Dim iChart As Integer
    Dim shape As shape
    Dim stitre As String
    Dim n1 As String, n2 As String
    Dim v1 As String, v2 As String
    Dim s1 As String
    Dim x1 As String
    Dim x2 As String
    Dim s2 As String
    Dim t As String
    Dim r As Range
    Dim MenForme As String
    Dim s As String
    Dim nbre As Integer
    Dim bTrouvé As Boolean
    Dim nTrouvé As Integer
    Dim AncType As Variant, AncTitre As Variant
    Dim Chart As Object
    Dim num As Integer
    Dim sTypeChart As Variant
    Dim orientation As Integer
    Dim y2 As Integer
    Dim values As String
    Dim xvalues As String
    '
    On Error GoTo LabFin
    
    Set Exc_wrk = Exc_obj.ActiveWorkbook
    Exc_wrk.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Activate
    
    MenForme = tbl_fichExcel(v_iTab).CmdMenFormeChp
    If Mid(MenForme, 1, 5) = "Liste" Then Exit Function
    s = STR_GetChamp(MenForme, "#", 0)    ' libelle ou valeur
    
    If v_Trait = "AP" Then
        If p_VersionExcel = "2003" Then
            ' Sélectionner le Chart d'origine
            Exc_obj.Sheets(v_iFeuilleOrig).ChartObjects(v_iShapeOrig).Select
            Exc_obj.ActiveChart.ChartArea.Copy
            ' se mettre sur la bonne feuille
            Exc_obj.Sheets(v_numfeuille).Select
            ' se mettre sur la bonne cellule
            Exc_obj.Sheets(v_numfeuille).Range(tbl_fichExcel(v_iTab).CmdX & tbl_fichExcel(v_iTab).CmdY).Select
            Exc_obj.ActiveSheet.Paste
            If Exc_obj.ActiveChart.HasTitle Then
                Exc_obj.ActiveChart.ChartTitle.Text = "Nouveau"
            End If
            Exc_obj.ActiveSheet.ChartObjects(Exc_obj.ActiveSheet.ChartObjects.Count).Name = "KALITECH_" & v_numfeuille & "_" & tbl_fichExcel(v_iTab).CmdX & "_" & tbl_fichExcel(v_iTab).CmdY
            iChart = Exc_obj.ActiveSheet.ChartObjects.Count
        Else
            ' Sélectionner le Chart d'origine
            Exc_obj.Sheets(v_iFeuilleOrig).Shapes(v_iShapeOrig).Select
            Exc_obj.ActiveChart.ChartArea.Copy
            ' se mettre sur la bonne feuille
            Exc_obj.Sheets(v_numfeuille).Select
            ' se mettre sur la bonne cellule
            Exc_obj.Sheets(v_numfeuille).Range(tbl_fichExcel(v_iTab).CmdX & tbl_fichExcel(v_iTab).CmdY).Select
            Exc_obj.ActiveSheet.Paste
            If Exc_obj.ActiveChart.HasTitle Then
                Exc_obj.ActiveChart.ChartTitle.Text = "Nouveau"
            End If
            Exc_obj.ActiveSheet.Shapes(Exc_obj.ActiveSheet.Shapes.Count).Name = "KALITECH_" & v_numfeuille & "_" & tbl_fichExcel(v_iTab).CmdX & "_" & tbl_fichExcel(v_iTab).CmdY
            ret = VoirSiChartExiste("Activate", "", v_numfeuille, v_iTab, sret)
            iChart = Exc_obj.ActiveSheet.ChartObjects.Count
        End If
    End If
    
    If v_Trait = "C" Then
        ret = VoirSiChartExiste("C", "", v_numfeuille, v_iTab, sret)
        If ret >= 0 Then
            MsgBox sret
            If VoirSiChartExiste("C", "", v_numfeuille, v_iTab, sret) = 0 Then
                If v_typegraphique = "H" Then
                Else
                    Exc_obj.ActiveChart.ChartType = xlPie
                End If
            End If
            ' c'est une modification du type de graphique ?
            Exit Function
        End If
    ElseIf Mid(v_Trait, 1, 1) = "M" Then
        ret = VoirSiChartExiste(v_Trait, "", v_numfeuille, v_iTab, sret)
        If ret >= 0 Then
            ' le renommer
            If p_VersionExcel = "2003" Then
                Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects(ret).Name = "KALITECH_" & v_numfeuille & "_" & tbl_fichExcel(v_iTab).CmdX & "_" & tbl_fichExcel(v_iTab).CmdY
                Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects(ret).Select
            Else
                Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes(ret).Name = "KALITECH_" & v_numfeuille & "_" & tbl_fichExcel(v_iTab).CmdX & "_" & tbl_fichExcel(v_iTab).CmdY
            End If
            iChart = ret
        End If
    End If
    
    If v_typegraphique = "S" Then
        ' Cas des secteurs
        If MenForme = "" Or s = "Ligne_Lib_Val" Or s = "Ligne_Val" Or s = "Ligne_Lib" Then
            s1 = "$" & tbl_fichExcel(v_iTab).CmdX & "$" & tbl_fichExcel(v_iTab).CmdY
            If v_typegraphique = "S" Then
                s1 = "$" & tbl_fichExcel(v_iTab).CmdX & "$" & tbl_fichExcel(v_iTab).CmdY + 1
            End If
            x1 = FctIntColdest(tbl_fichExcel(v_iTab).CmdX)
            x2 = tbl_fichExcel(v_iTab).CmdX_Fin
            If x2 = 0 Then
                x2 = (x1 + 3)
            End If
            x2 = FctStrColDest(x2)
            s2 = "$" & x2 & "$" & (tbl_fichExcel(v_iTab).CmdY + 1)
        ElseIf s = "Colonne_Lib_Val" Or s = "Colonne_Val" Or s = "Colonne_Lib" Then
            s1 = "$" & tbl_fichExcel(v_iTab).CmdX & "$" & tbl_fichExcel(v_iTab).CmdY
            x1 = FctIntColdest(tbl_fichExcel(v_iTab).CmdX)
            x2 = FctStrColDest((x1 + 1))
            
            y2 = tbl_fichExcel(v_iTab).CmdY_Fin
            If y2 = 0 Then
                y2 = (tbl_fichExcel(v_iTab).CmdY + 3)
            End If
            s2 = "$" & x2 & "$" & y2
        End If
        If p_VersionExcel = "2003" Then
            Exc_obj.ActiveWorkbook.Charts.Add
            Exc_obj.ActiveChart.ChartType = xlPie
            Exc_obj.ActiveChart.Location Where:=xlLocationAsObject, Name:=tbl_fenExcel(v_numfeuille).FenNom
            nb = Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects.Count
            Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects(nb).Name = "KALITECH_" & v_numfeuille & "_" & tbl_fichExcel(v_iTab).CmdX & "_" & tbl_fichExcel(v_iTab).CmdY
            iChart = nb
        Else
            Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes.AddChart.Select
            Exc_obj.ActiveChart.ChartType = xlColumnClustered
            Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes(Exc_obj.ActiveSheet.Shapes.Count).Name = "KALITECH_" & v_numfeuille & "_" & tbl_fichExcel(v_iTab).CmdX & "_" & tbl_fichExcel(v_iTab).CmdY
            Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes(Exc_obj.ActiveSheet.Shapes.Count).Select
            iChart = Exc_obj.ActiveSheet.Shapes.Count
        End If
        
        If iChart = 0 Then iChart = 1
        Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects(iChart).Select
        Exc_obj.ActiveChart.HasTitle = True
        If t <> "" Then
            If Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Range(t & ":" & t) = "" Then
                Exc_obj.ActiveChart.ChartTitle.Text = FctNomChp(tbl_fichExcel(v_iTab).CmdChpNum)
            Else
                Exc_obj.ActiveChart.ChartTitle.Text = Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Range(t & ":" & t)
            End If
        Else
            Exc_obj.ActiveChart.ChartTitle.Text = FctNomChp(tbl_fichExcel(v_iTab).CmdChpNum)
        End If
        Exc_obj.ActiveChart.HasDataTable = False
        Call MajGraphSourceData(v_iTab)
LabNew:
LabSuite:
        On Error GoTo 0
        If v_typegraphique = "S" Then
        Else
            If Exc_obj.ActiveChart.HasLegend Then
                Exc_obj.ActiveChart.Legend.Select
                Exc_obj.SELECTION.Delete
            End If
        End If
    Else    ' histogramme ou modification ou deplacement d'un champ
        If MenForme = "" Or s = "Ligne_Lib_Val" Or s = "Ligne_Val" Or s = "Ligne_Lib" Then
            s1 = "$" & tbl_fichExcel(v_iTab).CmdX & "$" & tbl_fichExcel(v_iTab).CmdY
            x1 = FctIntColdest(tbl_fichExcel(v_iTab).CmdX)
            x2 = tbl_fichExcel(v_iTab).CmdX_Fin
            If x2 = 0 Then
                x2 = (x1 + 3)
            End If
            x2 = FctStrColDest(x2)
            s2 = "$" & x2 & "$" & (tbl_fichExcel(v_iTab).CmdY + 1)
        ElseIf s = "Colonne_Lib_Val" Or s = "Colonne_Val" Or s = "Colonne_Lib" Then
            s1 = "$" & tbl_fichExcel(v_iTab).CmdX & "$" & tbl_fichExcel(v_iTab).CmdY
            x1 = FctIntColdest(tbl_fichExcel(v_iTab).CmdX)
            x2 = FctStrColDest((x1 + 1))
            y2 = tbl_fichExcel(v_iTab).CmdY_Fin
            If y2 = 0 Then
                y2 = (tbl_fichExcel(v_iTab).CmdY + 3)
            End If
            s2 = "$" & x2 & "$" & y2
            values = "$" & tbl_fichExcel(v_iTab).CmdX & "$" & tbl_fichExcel(v_iTab).CmdY
        End If
        
        If v_Trait = "C" Then
            If p_VersionExcel = "2003" Then
                Exc_obj.ActiveWorkbook.Charts.Add
                Exc_obj.ActiveChart.ChartType = xlColumnClustered
                Exc_obj.ActiveChart.Location Where:=xlLocationAsObject, Name:=tbl_fenExcel(v_numfeuille).FenNom
                nb = Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects.Count
                Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects(nb).Name = "KALITECH_" & v_numfeuille & "_" & tbl_fichExcel(v_iTab).CmdX & "_" & tbl_fichExcel(v_iTab).CmdY
                iChart = nb
                FctCreerGraphique = iChart
            Else
                Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes.AddChart.Select
                Exc_obj.ActiveChart.ChartType = xlColumnClustered
                num = Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes.Count    ' car il le crée en 1
                Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes(num).Name = "KALITECH_" & v_numfeuille & "_" & tbl_fichExcel(v_iTab).CmdX & "_" & tbl_fichExcel(v_iTab).CmdY
                iChart = Exc_obj.ActiveSheet.Shapes.Count
                FctCreerGraphique = iChart
            End If
        ElseIf v_Trait = "AP" Then
        End If
        
        If iChart = 0 Then iChart = 1
        Set Chart = Exc_obj.ActiveChart
        On Error GoTo lab_donnees
        Chart.HasTitle = True
        t = ""
        If t <> "" Then
            If Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Range(t & ":" & t) = "" Then
                Chart.ChartTitle.Text = FctNomChp(tbl_fichExcel(v_iTab).CmdChpNum)
            Else
                Chart.ChartTitle.Text = Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Range(t & ":" & t)
            End If
        Else
            Chart.ChartTitle.Text = FctNomChp(tbl_fichExcel(v_iTab).CmdChpNum)
        End If
lab_donnees:
        Chart.HasDataTable = False
        If Chart.SeriesCollection.Count = 0 Then
            Chart.SeriesCollection.NewSeries
        End If
        If v_Trait <> "AP" Then
            Chart.ChartType = xlColumnClustered
        End If
        Call MajGraphSourceData(v_iTab)
LabNewH:
LabSuiteH:
        On Error GoTo 0
        If v_Trait <> "AP" And v_typegraphique <> "X" Then
            If v_typegraphique <> "S" Then
                If Exc_obj.ActiveChart.HasLegend Then
                    Exc_obj.ActiveChart.Legend.Select
                    Exc_obj.SELECTION.Delete
                End If
            End If
        End If
    End If
LabFin:
    'Resume Next
    On Error GoTo 0
End Function

Private Function VoirSiChartExiste(v_Trait, ByRef r_type, v_numfeuille, v_iTab, ByRef r_mess) As Integer
    Dim nbre As Integer
    Dim trouvé As Boolean
    Dim leChart As Chart
    Dim leX As Integer, leY As Integer
    Dim sleX As String
    
    On Error GoTo Erreur
    If v_Trait = "C" Or v_Trait = "Titre" Or v_Trait = "Type" Or v_Trait = "Activate" Then
        sleX = tbl_fichExcel(v_iTab).CmdX
        leY = tbl_fichExcel(v_iTab).CmdY
    ElseIf Mid(v_Trait, 1, 1) = "M" Then
        sleX = STR_GetChamp(v_Trait, "_", 1)
        leY = STR_GetChamp(v_Trait, "_", 2)
    End If
    trouvé = False
    If p_VersionExcel = "2003" Then
        Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Activate
        If Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects.Count > 0 Then
            For nbre = 1 To Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects.Count
                If Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects(nbre).Name = "KALITECH_" & v_numfeuille & "_" & sleX & "_" & leY Then
                    VoirSiChartExiste = nbre   ' => existe déja
                    If v_Trait = "Activate" Then
                        Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects(nbre).Select
                    ElseIf v_Trait = "Titre" Then
                        Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects(nbre).Select
                        If Exc_obj.ActiveChart.HasTitle Then
                            r_mess = Exc_obj.ActiveChart.ChartTitle.Text
                        Else
                            r_mess = Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects(nbre).Name
                        End If
                        r_type = Exc_obj.ActiveChart.ChartType
                    ElseIf v_Trait = "Type" Then
                        Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects(nbre).Select
                        r_type = Exc_obj.ActiveChart.ChartType
                    Else
                        r_mess = "Un graphique existe déjà pour ce champ en " & tbl_fichExcel(v_iTab).CmdX & tbl_fichExcel(v_iTab).CmdY
                        Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).ChartObjects(nbre).Select
                    End If
                    VoirSiChartExiste = nbre
                    Exit Function
                End If
            Next nbre
        End If
    Else
        If Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes.Count > 0 Then
            For nbre = 1 To Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes.Count
                If Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes(nbre).type = 3 Then
'                    MsgBox Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes(nbre).Name
                    If Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes(nbre).Name = "KALITECH_" & v_numfeuille & "_" & sleX & "_" & leY Then
                        VoirSiChartExiste = nbre   ' => existe déja
                        If v_Trait = "Activate" Then
                            Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes(nbre).Select
                        ElseIf v_Trait = "Titre" Then
                            Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes(nbre).Select
                            If Exc_obj.ActiveChart.HasTitle Then
                                r_mess = Exc_obj.ActiveChart.ChartTitle.Text
                            Else
                                r_mess = Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes(nbre).Name
                            End If
                            r_type = Exc_obj.ActiveChart.ChartType
                        ElseIf v_Trait = "Type" Then
                            Exc_obj.Sheets(tbl_fenExcel(v_numfeuille).FenNom).Shapes(nbre).Select
                            r_type = Exc_obj.ActiveChart.ChartType
                        Else
                            r_mess = "Un graphique existe déjà pour ce champ en " & tbl_fichExcel(v_iTab).CmdX & tbl_fichExcel(v_iTab).CmdY
                        End If
                        VoirSiChartExiste = nbre
                        Exit Function
                    End If
                End If
            Next nbre
        End If
    End If
Erreur:
    VoirSiChartExiste = -1       ' pas trouvé
    On Error GoTo 0
End Function

Private Function FctMenFGraphique(v_typegraphique As String, v_numfeuille As Integer, v_iTab As Integer, v_S1 As String, v_S2 As String, v_Sens As String)
    Dim HG As String, BS As String
    Dim MenForme As String
    Dim x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer
    
    MenForme = STR_GetChamp(tbl_fichExcel(v_iTab).CmdMenFormeChp, "#", 0)
    If v_typegraphique = "S" Then
        ' Cas des secteurs
    Else
    End If
End Function

Private Sub MnuChpRelier_Click()
    Me.MnuChpRelier.tag = p_i_tabExcel
End Sub

Private Sub MnuDemandeGlobaleFormulaire_Click()
    Dim LaRow As Integer, iDem As Integer
    Dim nomChp As String
    
    LaRow = grdDem.row
    grdDem.col = 3
    iDem = grdDem.TextMatrix(LaRow, 0)
    grdDem.TextMatrix(LaRow, 3) = "FO"
    tbl_Demande(iDem).DemandGlobale = "FO"
    Call verifSiSauve
    nomChp = tbl_Demande(iDem).DemandChpStr
    grdDem.TextMatrix(LaRow, 2) = nomChp & " " & tbl_Demande(iDem).DemandChpStrPlus

End Sub

Private Sub MnuDemandeGlobaleFiltre_Click()
    Dim LaRow As Integer, iDem As Integer
    Dim nomChp As String
    
    LaRow = grdDem.row
    grdDem.col = 3
    iDem = grdDem.TextMatrix(LaRow, 0)
    grdDem.TextMatrix(LaRow, 3) = "FI"
    tbl_Demande(iDem).DemandGlobale = "FI"
    
    Call verifSiSauve
    nomChp = tbl_Demande(iDem).DemandChpStr
    grdDem.TextMatrix(LaRow, 2) = nomChp & " " & tbl_Demande(iDem).DemandChpStrPlus

End Sub

Private Sub MnuDemandeLocale_Click()
    Dim LaRow As Integer, iDem As Integer
    Dim nomChp As String
    
    LaRow = grdDem.row
        
    iDem = grdDem.TextMatrix(LaRow, 0)
    grdDem.TextMatrix(LaRow, 3) = "LO"
    tbl_Demande(iDem).DemandGlobale = "LO"
    Call verifSiSauve
    nomChp = tbl_Demande(iDem).DemandChpStr
    grdDem.TextMatrix(LaRow, 2) = nomChp & " " & tbl_Demande(iDem).DemandChpStrPlus


End Sub

Private Sub MnuFeuilleCharger_Click()
    grdFeuille_dblClick
End Sub

Private Sub MnuFeuilleChargerTout_Click()
    Dim i As Integer
    Dim Anc_P_Imax As Integer
        
    Me.MnuFeuilleChargerTout.Enabled = False
    Anc_P_Imax = p_Imax
    'p_Imax = 25
    For i = 1 To UBound(tbl_fenExcel)
        If tbl_fenExcel(i).FenNum <> -1 Then          ' feuille supprimée
            If Not tbl_fenExcel(i).FenLoad Then
                grdFeuille.RowSel = i - 1
                Call grdFeuille_dblClick
                'grdCell(tbl_fenExcel(i).FenNum).Visible = True
            End If
        End If
    Next i
    p_Imax = Anc_P_Imax

End Sub

Private Sub MnuFeuilleColler_Click()
    Dim i_FenDest As Integer
    Dim NumIndice As Integer
    Dim newDimFEN As Integer
    Dim newdimCHP As Integer
    Dim i As Integer, iNext As Integer, NomFen As String, s As String
    Dim j As Integer, bDupliquer As Boolean
    Dim jj As Integer
    Dim leIndex As Integer
    Dim lig As Integer
    Dim numFenetre As Integer
    Dim LaUbound As Integer
    Dim NomFichierParam As String
    Dim iFiltre As Integer, iFormulaire As Integer, iIndice As Integer
    Dim iIndex As Integer
    Dim NumFiltre As Long, Indfiltre As Integer
    Dim ret As Integer
    Dim DimTbl As Integer
    
    ' pour dupliquer une fenetre
    ' créer dans tbl_fenExcel à la fin
    i_FenDest = Me.grdFeuille.Rows
    '
    NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
    If InStr(NomFichierParam, ".") = 0 Then
        NomFichierParam = NomFichierParam & "."
    End If
    ' ouvrir le fichier Excel
    Public_VerifOuvrir NomFichierParam & p_ExtensionXls, False, True, p_tbl_FichExcelOuverts()
    Set Exc_wrk = Exc_obj.ActiveWorkbook
    iNext = Exc_wrk.Sheets.Count + 1
    NomFen = InputBox("Nom de la nouvelle feuille", "Ajouter une fenêtre", "Feuille" & iNext)
    If NomFen <> "" Then
        p_bool_Faire_VerifSauve = False

        Exc_wrk.Sheets.Add After:=Exc_wrk.Sheets(Exc_wrk.Sheets.Count)
        'MsgBox Exc_wrk.Sheets(Exc_wrk.Sheets.Count).Name
        Exc_wrk.Sheets(Exc_wrk.Sheets.Count).Name = NomFen
        'MsgBox Exc_wrk.Sheets(Exc_wrk.Sheets.Count).Name
        newDimFEN = UBound(tbl_fenExcel) + 1
        ReDim Preserve tbl_fenExcel(newDimFEN) As SFEN_EXCEL
        p_bool_tbl_fenExcel = True
        tbl_fenExcel(newDimFEN).FenNum = newDimFEN
        numFenetre = newDimFEN
        tbl_fenExcel(newDimFEN).FenNom = NomFen
        tbl_fenExcel(newDimFEN).FenLoad = False
        tbl_fenExcel(newDimFEN).FenColMax = tbl_fenExcel(p_i_feuilleExcel).FenColMax
        tbl_fenExcel(newDimFEN).FenRowMax = tbl_fenExcel(p_i_feuilleExcel).FenRowMax
        If tbl_fenExcel(p_i_feuilleExcel).FenColMax < 10 Then tbl_fenExcel(p_i_feuilleExcel).FenColMax = 10
        If tbl_fenExcel(p_i_feuilleExcel).FenRowMax < 20 Then tbl_fenExcel(p_i_feuilleExcel).FenRowMax = 20
        tbl_fenExcel(newDimFEN).FenItbl_fichExcel = 1000
    
        ' Ajouter la fenêtre dans tbl_fichexcel
        DimTbl = UBound(tbl_fichExcel) + 1
        On Error GoTo 0
        ReDim Preserve tbl_fichExcel(DimTbl) As SFICH_PARAM_EXCEL
        tbl_fichExcel(DimTbl).CmdType = "FEN"
        tbl_fichExcel(DimTbl).CmdFenNum = newDimFEN
        tbl_fichExcel(DimTbl).CmdX = tbl_fenExcel(p_i_feuilleExcel).FenColMax
        tbl_fichExcel(DimTbl).CmdY = tbl_fenExcel(p_i_feuilleExcel).FenRowMax
    
        ' Faire la liste des filtres qui concernent les champs de cette fenetre
        Dim bDéja As Boolean
        Dim uBound_Tbl_rdoL As Integer
        Dim uBound_Tbl_rdoF As Integer
        Dim uBound_TblCond As Integer
        Dim ProchainIndex As Integer
        Dim i_Ubound As Integer
        Dim new_i_Ubound As Integer
        Dim titre  As String
        
        uBound_TblCond = 0
        On Error Resume Next
        uBound_Tbl_rdoL = -1
        uBound_Tbl_rdoL = UBound(tbl_rdoL())
        On Error Resume Next
        uBound_Tbl_rdoF = -1
        uBound_Tbl_rdoF = UBound(tbl_rdoF())
        
        Dim b_aChamp As Boolean
        Dim tbtmp_cond()
        LaUbound = -1
        On Error Resume Next
        LaUbound = UBound(tbl_fichExcel())
        On Error GoTo 0
        For i = 0 To LaUbound
            b_aChamp = False
            If tbl_fichExcel(i).CmdType = "CONDF" Then
                ' Voir s'il a des champs dans cette fenêtre
                For j = 0 To LaUbound
                    If tbl_fichExcel(j).CmdType = "CHP" Then
                        If tbl_fichExcel(j).CmdFormNum = tbl_fichExcel(i).CmdFormNum Then
                            If tbl_fichExcel(j).CmdFormIndice = tbl_fichExcel(i).CmdFormIndice Then
                                If val(tbl_fichExcel(j).CmdFenNum) = p_i_feuilleExcel Then
                                    b_aChamp = True
                                    Exit For
                                End If
                            End If
                        End If
                    End If
                Next j
            End If
            If b_aChamp Then
                'MsgBox tbl_fichExcel(i).CmdType
                If tbl_fichExcel(i).CmdType = "CONDF" Then
                    For j = 0 To grdForm.Rows - 1
                        If tbl_fichExcel(i).CmdFormNum = grdForm.TextMatrix(j, GrdForm_FF_Num) Then
                            If tbl_fichExcel(i).CmdFormIndice = grdForm.TextMatrix(j, GrdForm_FF_NumIndice) Then
                                ' on l'ajoute
                                On Error Resume Next
                                uBound_TblCond = UBound(tbtmp_cond(), 2) + 1
                                If uBound_TblCond = 0 Then
                                    bDéja = False
                                Else
                                    bDéja = False
                                    For jj = 0 To uBound_TblCond - 1
                                        If tbtmp_cond(1, jj) = j And tbtmp_cond(2, jj) = tbl_fichExcel(i).CmdType Then
                                            bDéja = True
                                            Exit For
                                        End If
                                    Next jj
                                End If
                                If Not bDéja Then
                                    ReDim Preserve tbtmp_cond(10, uBound_TblCond)
                                    tbtmp_cond(1, uBound_TblCond) = j   ' ligne du grid origine
                                    tbtmp_cond(2, uBound_TblCond) = tbl_fichExcel(i).CmdType
                                    tbtmp_cond(3, uBound_TblCond) = grdForm.TextMatrix(j, GrdForm_FF_Lib) & " => " & grdForm.TextMatrix(j, GrdForm_FF_Titre)
                                    tbtmp_cond(4, uBound_TblCond) = "Non"
                                    tbtmp_cond(5, uBound_TblCond) = tbl_fichExcel(i).CmdFormNum
                                    tbtmp_cond(6, uBound_TblCond) = tbl_fichExcel(i).CmdFormIndice
                                    tbtmp_cond(7, uBound_TblCond) = 0   ' Indice Filtre final
                                End If
                            End If
                        End If
                    Next j
                End If
            End If
        Next i
                
        ' pour chaque filtre, doit on dupliquer les filtres ou les conserver pour cette nouvelle feuille
        On Error GoTo Suite1
        i = UBound(tbtmp_cond())
        For i = 0 To UBound(tbtmp_cond(), 2)
            If MsgBox("Dupliquer " & tbtmp_cond(3, i), vbYesNo, "Copier les Filtres de la Feuille") = vbYes Then
                tbtmp_cond(4, i) = "Dupliquer"
                ' calcul de l'index
                NumFiltre = grdForm.TextMatrix(tbtmp_cond(1, i), GrdForm_FF_Num)
                ProchainIndex = ChercherProchainIndex(NumFiltre)
                titre = grdForm.TextMatrix(tbtmp_cond(1, i), GrdForm_FF_Titre) & " - Copie"
                
                If ajouter_form_grd(NumFiltre, ProchainIndex, True, False, titre) = P_OUI Then
                    tbtmp_cond(7, i) = grdForm.TextMatrix(grdForm.Rows - 1, GrdForm_FF_NumIndice)
                    
                    ' récupérer tbl_cond pour les conditions ajoutées CONDL
                    GoTo Suite2
                    i_Ubound = -1
                    On Error Resume Next
                    i_Ubound = UBound(tbl_cond())
                    new_i_Ubound = i_Ubound
                    'For j = 0 To UBound(tbl_cond())
                    '    Debug.Print "tbl_cond " & tbl_cond(j).CondNumFiltre & " " & tbl_cond(j).CondFormIndice & " " & tbl_cond(j).CondType
                    'Next j
                    For j = 0 To i_Ubound
                        If tbl_cond(j).CondType = "CONDL" Then
                            If tbl_cond(j).CondNumFiltre = grdForm.TextMatrix(tbtmp_cond(1, i), GrdForm_FF_Num) Then
                                If tbl_cond(j).CondFormIndice = grdForm.TextMatrix(tbtmp_cond(1, i), GrdForm_FF_NumIndice) Then
                                    new_i_Ubound = new_i_Ubound + 1
                                    ReDim Preserve tbl_cond(new_i_Ubound) As SCOND_PARAM
                                    tbl_cond(new_i_Ubound) = tbl_cond(j)
                                    tbl_cond(new_i_Ubound).CondFormIndice = ProchainIndex
                                End If
                            End If
                        End If
                    Next j
Suite2:
                    RecupereConditionF 0, NumFiltre, ProchainIndex
                    
                    ChargerGridRegle NumFiltre, ProchainIndex
                
                    ' dupliquer les CONDL du premier
                    For j = 0 To UBound(tbl_fichExcel())
                        If tbl_fichExcel(j).CmdType = "CONDL" Then
                            If tbl_fichExcel(j).CmdFormNum = NumFiltre And tbl_fichExcel(j).CmdFormIndice = tbtmp_cond(6, i) Then
                                DimTbl = UBound(tbl_fichExcel) + 1
                                ReDim Preserve tbl_fichExcel(DimTbl) As SFICH_PARAM_EXCEL
                                tbl_fichExcel(DimTbl) = tbl_fichExcel(j)
                                tbl_fichExcel(DimTbl).CmdFenNum = newDimFEN
                                tbl_fichExcel(DimTbl).CmdFormNum = NumFiltre
                                tbl_fichExcel(DimTbl).CmdFormIndice = ProchainIndex
                                Call ajouter_cond("Init", DimTbl)
                            End If
                        End If
                    Next j
                    leIndex = FctAttribIndex(NumFiltre, ProchainIndex)
                    Call FctMetCouleur("COND", grdCond(leIndex))
                    
                    ' Ajouter dans tbl_fichExcel
                    DimTbl = UBound(tbl_fichExcel) + 1
                    On Error GoTo 0
                    ReDim Preserve tbl_fichExcel(DimTbl) As SFICH_PARAM_EXCEL
                    p_bool_tbl_fichExcel = True
                    tbl_fichExcel(DimTbl).CmdType = "CONDF"
                    tbl_fichExcel(DimTbl).CmdFenNum = newDimFEN
                    tbl_fichExcel(DimTbl).CmdFormNum = tbl_rdoF(UBound(tbl_rdoF)).RDOF_num
                    tbl_fichExcel(DimTbl).CmdChpNum = "0"
                    tbl_fichExcel(DimTbl).CmdFormIndice = tbl_rdoF(UBound(tbl_rdoF)).RDOF_FormIndice
    
                    i_Ubound = -1
                    On Error Resume Next
                    i_Ubound = UBound(tbl_rdoL())
                    new_i_Ubound = i_Ubound
                    For j = 0 To i_Ubound
                        If tbl_rdoL(j).RDOL_num = grdForm.TextMatrix(tbtmp_cond(1, i), GrdForm_FF_Num) Then
                            If tbl_rdoL(j).RDOL_FormIndice = grdForm.TextMatrix(tbtmp_cond(1, i), GrdForm_FF_NumIndice) Then
                                new_i_Ubound = new_i_Ubound + 1
                                ReDim Preserve tbl_rdoL(new_i_Ubound) As RDOL
                                tbl_rdoL(new_i_Ubound) = tbl_rdoL(j)
                                tbl_rdoL(new_i_Ubound).RDOL_FormIndice = ProchainIndex
                            End If
                        End If
                    Next j
                    
                    ' récupérer tbl_demande
                    i_Ubound = -1
                    On Error Resume Next
                    i_Ubound = UBound(tbl_Demande())
                    new_i_Ubound = i_Ubound
                    For j = 0 To i_Ubound
                        If tbl_Demande(j).DemandFFNum = grdForm.TextMatrix(tbtmp_cond(1, i), GrdForm_FF_Num) Then
                            If tbl_Demande(j).DemandFormInd = grdForm.TextMatrix(tbtmp_cond(1, i), GrdForm_FF_NumIndice) Then
                                new_i_Ubound = new_i_Ubound + 1
                                ReDim Preserve tbl_Demande(new_i_Ubound)
                                tbl_Demande(new_i_Ubound) = tbl_Demande(j)
                                tbl_Demande(new_i_Ubound).DemandFormInd = ProchainIndex
                            End If
                        End If
                    Next j
                End If
            End If
        Next i
        
        ' Dupliquer les Champs
        For i = 0 To UBound(tbtmp_cond(), 2)
            If tbtmp_cond(4, i) = "Dupliquer" Or tbtmp_cond(4, i) = "Non" Then
                LaUbound = UBound(tbl_fichExcel())
                For j = 0 To UBound(tbl_fichExcel) - 1
                    If val(tbl_fichExcel(j).CmdFenNum) = p_i_feuilleExcel Then
                        If tbl_fichExcel(j).CmdType = "CHP" Then
                            If tbl_fichExcel(j).CmdFormNum = tbtmp_cond(5, i) Then
                                If tbl_fichExcel(j).CmdFormIndice = tbtmp_cond(6, i) Then
                                    NumFiltre = tbl_fichExcel(j).CmdFormNum
                                    If tbtmp_cond(4, i) = "Dupliquer" Then
                                        NumIndice = tbtmp_cond(7, i)
                                    Else
                                        NumIndice = tbl_fichExcel(j).CmdFormIndice
                                    End If
                                    Dim tbl_fichExcel_tmp(0) As SFICH_PARAM_EXCEL
                                    newdimCHP = UBound(tbl_fichExcel()) + 1
                                    ReDim Preserve tbl_fichExcel(newdimCHP) As SFICH_PARAM_EXCEL
                                    tbl_fichExcel_tmp(0) = tbl_fichExcel(j)
                                    tbl_fichExcel(newdimCHP) = tbl_fichExcel_tmp(0)
                                    tbl_fichExcel(newdimCHP).CmdFenNum = numFenetre
                                    tbl_fichExcel(newdimCHP).CmdFormIndice = NumIndice
                                    
                                    If tbtmp_cond(4, i) = "Non" Then GoTo Pas_Recup_CondL
                                    ' récupérer tbl_condChp de ce champ
                                    If tbl_fichExcel(j).CmdChpGridIndice = 0 Then
                                        GoTo Pas_Loadé
                                    Else
                                        GoTo Déjà_Loadé
                                    End If
Pas_Loadé:
                                    Faire_Load_GrdCondChp tbl_fichExcel(j).CmdChpNum, tbl_fichExcel(j).CmdChpIndice, j
Déjà_Loadé:
                                    NumIndice = tbl_fichExcel(j).CmdChpGridIndice
                                    i_Ubound = -1
                                    On Error Resume Next
                                    i_Ubound = UBound(tbl_condChp())
                                    new_i_Ubound = i_Ubound
                                    For jj = 0 To i_Ubound
                                        If tbl_condChp(jj).CondChpCndChpNum = tbl_condChp(j).CondChpCndChpNum Then
                                            If tbl_condChp(jj).CondChpCndFormNum = tbtmp_cond(5, i) Then
                                                If tbl_condChp(jj).CondChpChpFormIndice = tbtmp_cond(6, i) Then
                                                    new_i_Ubound = new_i_Ubound + 1
                                                    ReDim Preserve tbl_condChp(new_i_Ubound) As SCOND_CHAMP
                                                    tbl_condChp(new_i_Ubound) = tbl_condChp(jj)
                                                    tbl_condChp(new_i_Ubound).CondChpChpFormIndice = tbtmp_cond(7, i)
                                                End If
                                            End If
                                        End If
                                    Next jj
Pas_Recup_CondL:
                                End If
                            End If
                        End If
                    End If
                Next j
            End If
        Next i
Suite1:
        ' ajouter au tableau des fenetres
        tbl_fenExcel(UBound(tbl_fenExcel)).FenItbl_fichExcel = newDimFEN
        lig = grdFeuille.Rows
        grdFeuille.AddItem "", lig
        grdFeuille.TextMatrix(lig, GrdFeuil_FenNum) = tbl_fenExcel(numFenetre).FenNum
        grdFeuille.TextMatrix(lig, GrdFeuil_FenNom) = tbl_fenExcel(numFenetre).FenNom
        grdFeuille.TextMatrix(lig, GrdFeuil_RowMax) = tbl_fenExcel(numFenetre).FenRowMax
        grdFeuille.TextMatrix(lig, GrdFeuil_ColMax) = tbl_fenExcel(numFenetre).FenColMax
        grdFeuille.TextMatrix(lig, GrdFeuil_LoadFait) = ""
        
        ' copier la Feuille Excel
'        On Error GoTo Err_Copie_Excel
        Exc_obj.Sheets(tbl_fenExcel(p_i_feuilleExcel).FenNom).Select
        Exc_obj.Sheets(tbl_fenExcel(p_i_feuilleExcel).FenNom).Cells.Select
        'Exc_obj.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Selection.Copy
        'Exc_wrk.Sheets(tbl_fenExcel(numFenetre).FenNom).Select
        'Exc_wrk.Sheets(tbl_fenExcel(numFenetre).FenNom).Cells.Select
        'ActiveSheet.Paste
        Exc_obj.Sheets(tbl_fenExcel(p_i_feuilleExcel).FenNom).Cells.Copy
        Exc_wrk.Sheets(tbl_fenExcel(numFenetre).FenNom).Select
        Exc_wrk.ActiveSheet.Paste
        p_i_feuilleExcel = -1
                    
        ' Activer la fenêtre
        Exc_wrk.Sheets(tbl_fenExcel(numFenetre).FenNom).Activate
        g_numfeuille = numFenetre
        grdFeuille.RowSel = numFenetre - 1
        Call grdFeuille_dblClick
        Call grdFeuille_Click
        p_bool_Faire_VerifSauve = True
    End If
End Sub

Private Sub FctGereCondForm()
    Dim n As Integer
    Dim sql  As String, rs As rdoResultset
Exit Sub
    Call CL_Init
    n = 0
    
    sql = "select * from formulaire where for_num=" & g_DernierNumFor
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Choisir_Form = 0
        Exit Sub
    End If
    ' celui sélectionné
    While Not rs.EOF
        If rs("For_Lib").Value <> "" Then
            Call CL_AddLigne(rs("For_Lib").Value, rs("FOR_Num").Value, "", True)
            n = n + 1
        End If
        rs.MoveNext
    Wend
    rs.Close
    ' les autres
    sql = "select * from formulaire where for_num<>" & g_DernierNumFor _
            & " order by for_Lib"
    If Odbc_SelectV(sql, rs) = P_ERREUR Then
        Choisir_Form = 0
        Exit Sub
    End If
    ' les autres
    While Not rs.EOF
        If rs("For_Lib").Value <> "" Then
            Call CL_AddLigne(rs("For_Lib").Value, rs("FOR_Num").Value, "", False)
            n = n + 1
        End If
        rs.MoveNext
    Wend
    rs.Close
    If n = 0 Then
        Choisir_Form = 0
        Exit Sub
    End If
    
    Call CL_InitTitreHelp("Formulaires disponibles", "")
    Call CL_AddBouton("", p_chemin_appli + "\btnok.gif", vbKeyO, vbKeyF1, 0)
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
    Call CL_InitTaille(0, -15)
    ChoixListe.Show 1
    If CL_liste.retour = 1 Then
    End If
End Sub

Private Sub MnuFeuilleCopier_Click()
    bcopier_feuille = True
    p_i_feuilleExcel = g_numfeuille
End Sub

Private Sub MnuFeuilleNbrLignes_Click()
    Dim nbLignes As String
    Dim sql As String, rs As rdoResultset
    
    nbLignes = InputBox("Indiquez le nombre de lignes", "Nombre de lignes au chargement", p_Imax)
    If nbLignes <> "" Then
        'If nbLignes <> p_Imax Then
            p_Imax = nbLignes
            Me.MnuFeuilleNbrLignes.Caption = "Chargement par " & p_Imax & " lignes"
            sql = "update rapport_type set rp_nbLig = '" & p_Imax & "' where rp_num=" & g_numModele
            If Odbc_SelectV(sql, rs) = P_ERREUR Then
                Exit Sub
            End If
        'End If
    End If
End Sub

Private Sub MnuFeuilleRenommer_Click()
    Dim LaUbound As Integer, i As Integer, j As Integer
    Dim AncDisplay As Boolean
    Dim stitre As String
    
    NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
    If InStr(NomFichierParam, ".") = 0 Then
        NomFichierParam = NomFichierParam & "."
    End If
    ' ouvrir le fichier Excel
    Call Public_VerifOuvrir(NomFichierParam & p_ExtensionXls, False, True, p_tbl_FichExcelOuverts())
    
    ' Renommer la feuille Excel
    AncDisplay = Exc_obj.DisplayAlerts
    Exc_obj.DisplayAlerts = False
    
SaisieNom:
    stitre = InputBox("Indiquez le nom de la feuille", "Titre de la Feuille", Exc_wrk.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Name)
    If stitre <> "" Then
        If stitre <> Exc_wrk.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Name Then
            On Error GoTo ErrRename
            Exc_wrk.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Name = stitre
            p_bool_forcer_vider_temp = True
            GoTo SuiteRename
        End If
    Else
        GoTo Fin
    End If
ErrRename:
    MsgBox "Nom de feuille non conforme"
    Resume SaisieNom
SuiteRename:
    Exc_obj.DisplayAlerts = AncDisplay
    Call verifSiSauve
    
    grdFeuille.TextMatrix(grdFeuille.row, GrdFeuil_FenNom) = stitre
    
    On Error Resume Next
    grdCell(g_numfeuille).TextMatrix(0, 0) = stitre
    tbl_fenExcel(g_numfeuille).FenNom = stitre
Fin:

End Sub

Private Sub MnuFeuilleSupprimer_Click()
    Dim LaUbound As Integer, i As Integer, j As Integer
    Dim AncDisplay As Boolean
    Dim sAncNom As String
    Dim ret As Integer
    
    ret = MsgBox("Confirmez vous la suppression de la feuille " & grdFeuille.TextMatrix(g_numfeuille - 1, GrdFeuil_FenNom), vbDefaultButton2 + vbYesNo + vbQuestion)
    If ret <> vbYes Then
        Exit Sub
    End If
    
    NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
    If InStr(NomFichierParam, ".") = 0 Then
        NomFichierParam = NomFichierParam & "."
    End If
    ' ouvrir le fichier Excel
    Call Public_VerifOuvrir(NomFichierParam & p_ExtensionXls, False, True, p_tbl_FichExcelOuverts())
    
    AncDisplay = Exc_obj.DisplayAlerts
    Exc_obj.DisplayAlerts = False
    'Exc_wrk.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Delete
    sAncNom = Exc_wrk.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Name
    If InStr(Exc_wrk.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Name, "(supprimée)") = 0 Then
        Exc_wrk.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Name = "Feuille " & g_numfeuille & " (supprimée)"
        tbl_fenExcel(g_numfeuille).FenNom = "Feuille " & g_numfeuille & " (supprimée)"
    End If
    Exc_obj.DisplayAlerts = AncDisplay
    p_bool_Faire_VerifSauve = False
    p_bool_forcer_vider_temp = True
    Call verifSiSauve
    ' supprimer la fenetre et les champs associés
    LaUbound = -1
    On Error Resume Next
    LaUbound = UBound(tbl_fichExcel())
    On Error GoTo 0
    
    For i = 0 To LaUbound
        If tbl_fichExcel(i).CmdType = "CHP" Then
            ' enlever tous les champs
            If tbl_fichExcel(i).CmdFenNum = g_numfeuille Then
                If tbl_fichExcel(i).CmdChpNum > 0 Or tbl_fichExcel(i).CmdChpNum <= -10 Then
                    tbl_fichExcel(i).CmdChpNum = -1
                End If
            End If
        End If
    Next i
    For i = 1 To UBound(tbl_fenExcel())
        On Error Resume Next
        'If tbl_fichExcel(i).CmdType = "FEN" Then
            If tbl_fenExcel(g_numfeuille).FenNom = tbl_fenExcel(i).FenNom Then
                Unload grdCell(g_numfeuille)
                tbl_fenExcel(g_numfeuille).FenNum = -1
            End If
        'End If
    Next i
        
    grdFeuille.RowHeight(g_numfeuille - 1) = 0
    
    p_bool_Faire_VerifSauve = True

    'MsgBox "Votre tableau va être rechargé"
    'If quitter("AUTO") Then
    '    p_boolRechargerModeleAuto = True
    'End If
End Sub

Private Sub MnuFiltre_Click()
    MnuFiltreRecopier.Visible = False
End Sub

Private Sub MnuFiltreRecopier_Click()
    bCopieFiltre = True
    Me.LblHelp.ForeColor = 255
    Me.LblHelp.Visible = True
    Me.LblHelp.Caption = "Cliquez sur le filtre destinataire de tous ces champs"
    MsgBox "Cliquez sur le filtre destinataire de tous ces champs"
End Sub

Private Sub MnuFiltreRenommer_Click()
    Dim i_grdregle As Integer
    Dim LaRow As Integer
    Dim i As Integer
    Dim stitre As String
    Dim ff_titre As String
    Dim ff_num As Integer
    Dim sql As String, rs As rdoResultset
    
    Me.LblHelp.Visible = False
    For i = 0 To 8
        Me.cmdTypeChp(i).Visible = False
    Next i
    
    grdForm.ColSel = grdForm.col
    grdForm.RowSel = grdForm.row
    
    'i_grdregle = (grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num) * 100) + grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice)
    i_grdregle = FctAttribIndex(grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num), grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice))
    grdCond(i_grdregle).Visible = True
    
    cmd(CMD_PARAM_FILTRE).Visible = True
    cmd(CMD_SUPPR_FORM).Visible = True
    cmd(CMD_ACCES_KALIDOC).Visible = True
    
    LaRow = grdForm.row
    For i = 0 To grdForm.Rows - 1
        If i = LaRow Then
            grdForm.row = i
            grdForm.col = GrdForm_FF_Num
            ff_num = grdForm.TextMatrix(i, GrdForm_FF_Num)
            sql = "select ff_titre from filtreform where ff_num=" & ff_num
            Call Odbc_RecupVal(sql, ff_titre)
            grdForm.col = GrdForm_FF_Titre
            stitre = grdForm.TextMatrix(i, GrdForm_FF_Titre)
            stitre = InputBox("Titre (filtre " & ff_titre & ")", "Condition de filtre", stitre)
            If stitre <> "" Then
                grdForm.TextMatrix(i, GrdForm_FF_Titre) = stitre
                Call verifSiSauve
            End If
        End If
    Next i
End Sub

Private Sub MnuLigCol_AddColAvant_Click()
    Dim nblig As Integer
    Dim nbCol As Integer
    Dim i As Integer, j As Integer
    Dim lig As Integer, col As Integer
    Dim sret As String
    Dim NomFichierParam As String
    Dim strX As String
    
    Dim MenForme As String
    Dim leX As Integer, leY As Integer
    
    nbCol = 1
    'MsgBox "ICI X=" & XDeplacer & " Y=" & YDeplacer
    sret = InputBox("Nombre de colonnes à ajouter", "Ajout de colonnes", nbCol)
    If val(sret) > 0 Then
        nbCol = val(sret)
        bLigCol = True
        NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
        If InStr(NomFichierParam, ".") = 0 Then
            NomFichierParam = NomFichierParam & "."
        End If
        ' ouvrir le fichier Excel
        Public_VerifOuvrir NomFichierParam & p_ExtensionXls, False, True, p_tbl_FichExcelOuverts()
        Set Exc_wrk = Exc_obj.ActiveWorkbook
        'Exc_obj.Visible = True
        'MsgBox grdCell(g_numfeuille).row
        ' Ajouter les lignes dans le tableau Excel
        Me.LblHelp.Visible = True
        For i = 1 To nbCol
            Me.LblHelp.Caption = "Insertion colonne " & i
            Me.LblHelp.Refresh
            'MsgBox grdCell(g_numfeuille).row & ":" & grdCell(g_numfeuille).row
            strX = FctStrColDest(XDeplacer)

            Exc_obj.ActiveWorkbook.ActiveSheet.Columns(strX & ":" & strX).Select
            SELECTION.Insert Shift:=xlToRight
        Next
        
        '' Déplacer tout ce qui est dans le grid (sauf les champs)
        'For col = grdCell(g_numfeuille).Cols - NbCol - 1 To XDeplacer + 1 Step -1
        '    'MsgBox "col=" & col & " lig=" & lig & " " & grdCell(g_numfeuille).CellPicture
        '    For lig = 1 To grdCell(g_numfeuille).Rows
        '        If lig >= grdCell(g_numfeuille).Rows Then Exit For
        '        If col >= grdCell(g_numfeuille).Cols Then Exit For
        '        grdCell(g_numfeuille).col = col
        '        grdCell(g_numfeuille).row = lig
        '        If grdCell(g_numfeuille).CellPicture = 0 Or grdCell(g_numfeuille).CellPicture = imglst.ListImages(IMG_SOMME).Picture Then
        '            If Trim(grdCell(g_numfeuille).TextMatrix(lig, col)) <> "" Then
        '                'MsgBox grdCell(g_numfeuille).TextMatrix(lig, col)
        '                grdCell(g_numfeuille).TextMatrix(lig, col + NbCol) = grdCell(g_numfeuille).TextMatrix(lig, col)
        '                grdCell(g_numfeuille).TextMatrix(lig, col) = ""
        '                ' Sauvegarder la mise en forme de la cellule
        '                grdCell(g_numfeuille).row = lig
        '                grdCell(g_numfeuille).col = col
        '                ComDialog.FontBold = grdCell(g_numfeuille).CellFontBold
        '                ComDialog.Color = grdCell(g_numfeuille).CellForeColor
        '                ComDialog.FontName = grdCell(g_numfeuille).CellFontName
        '                ComDialog.FontItalic = grdCell(g_numfeuille).CellFontItalic
        '                ComDialog.FontSize = grdCell(g_numfeuille).CellFontSize
        '
        '                ' restaurer la mise en forme de la cellule
        '                grdCell(g_numfeuille).row = lig
        '                grdCell(g_numfeuille).col = col + NbCol
        '                grdCell(g_numfeuille).CellFontBold = ComDialog.FontBold
        '                grdCell(g_numfeuille).CellForeColor = ComDialog.Color
        '                grdCell(g_numfeuille).CellFontName = ComDialog.FontName
        '                grdCell(g_numfeuille).CellFontItalic = ComDialog.FontItalic
        '                grdCell(g_numfeuille).CellFontSize = ComDialog.FontSize
        '            End If
        '        End If
        '    Next lig
        'Next col
        
        ' Vider les texte et les formules
        For i = 1 To grdCell(g_numfeuille).Rows - 1
            grdCell(g_numfeuille).row = i
            For j = 1 To grdCell(g_numfeuille).Cols - 1
                grdCell(g_numfeuille).TextMatrix(i, j) = ""
                grdCell(g_numfeuille).col = j
                Set grdCell(g_numfeuille).CellPicture = Nothing
            Next j
        Next i
        
        'grdCell(g_numfeuille).Cols = grdCell(g_numfeuille).Cols + nbCol
        
        ' Déplacer tout ce qu'il y a dans tbl_Excel
        p_dansExcel = False
        For i = 0 To UBound(tbl_fichExcel())
            Me.LblHelp.Caption = "Déplacement des champs " & i
            Me.LblHelp.Refresh
            If tbl_fichExcel(i).CmdType = "CHP" Then
                If tbl_fichExcel(i).CmdFenNum = g_numfeuille Then
                    leX = FctIntColdest(tbl_fichExcel(i).CmdX)
                    If leX >= XDeplacer Then
                        ' vider ancien champ
                        strX = tbl_fichExcel(i).CmdX
                        leX = FctIntColdest(strX)
                        leY = tbl_fichExcel(i).CmdY
                        MenForme = tbl_fichExcel(i).CmdMenFormeChp
                        P_MettreChamp "Vider", i, leX, leY, MenForme, val(tbl_fichExcel(i).CmdChpNum), val(tbl_fichExcel(i).CmdFormIndice), g_numfeuille, True
                        
                        leX = leX + nbCol
                        tbl_fichExcel(i).CmdX = FctStrColDest(leX)
                        
                        ' mettre nouveau champ
                        strX = tbl_fichExcel(i).CmdX
                        leX = FctIntColdest(strX)
                        leY = tbl_fichExcel(i).CmdY
                        MenForme = tbl_fichExcel(i).CmdMenFormeChp
                        P_MettreChamp "Mettre", i, leX, leY, MenForme, val(tbl_fichExcel(i).CmdChpNum), val(tbl_fichExcel(i).CmdFormIndice), g_numfeuille, True

                    End If
                End If
            End If
        Next i
        Me.LblHelp.Visible = False
        'MsgBox "Votre feuille va être rechargée"
        Call Rafraichir
    End If


End Sub

Private Sub MnuLigCol_AddLigDessous_Click()
    Dim nblig As Integer
    Dim i As Integer, j As Integer
    Dim sret As String
    Dim NomFichierParam As String
    Dim strX As String
    Dim MenForme As String
    Dim leX As Integer, leY As Integer
    
    'MsgBox "ICI X=" & XDeplacer & " Y=" & YDeplacer
    nblig = 1
    sret = InputBox("Nombre de lignes à ajouter", "Ajout de lignes", nblig)
    If val(sret) > 0 Then
        nblig = val(sret)
        bLigCol = True
        NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
        If InStr(NomFichierParam, ".") = 0 Then
            NomFichierParam = NomFichierParam & "."
        End If
        ' ouvrir le fichier Excel
        Public_VerifOuvrir NomFichierParam & p_ExtensionXls, False, True, p_tbl_FichExcelOuverts()
        Set Exc_wrk = Exc_obj.ActiveWorkbook
        'Exc_obj.Visible = True
        'MsgBox grdCell(g_numfeuille).row
        ' Ajouter les lignes dans le tableau
        Me.LblHelp.Visible = True
        For i = 1 To nblig
            Me.LblHelp.Caption = "Insertion ligne " & i
            Me.LblHelp.Refresh
            'MsgBox grdCell(g_numfeuille).row & ":" & grdCell(g_numfeuille).row
            Exc_obj.ActiveWorkbook.ActiveSheet.Rows(grdCell(g_numfeuille).row + 1 & ":" & grdCell(g_numfeuille).row + 1).Select
            Exc_obj.ActiveWorkbook.ActiveSheet.Range("B" & grdCell(g_numfeuille).row + 1).Activate
            Exc_obj.SELECTION.Insert Shift:=xlDown
        Next
        
        'Exc_obj.ActiveWorkbook.ActiveSheet.Range("A" & (grdCell(g_numfeuille).row + nblig)).Value = "***"
        
        ' Vider les texte et les formules
        For i = 1 To grdCell(g_numfeuille).Rows - 1
            grdCell(g_numfeuille).row = i
            For j = 1 To grdCell(g_numfeuille).Cols - 1
                grdCell(g_numfeuille).TextMatrix(i, j) = ""
                grdCell(g_numfeuille).col = j
                Set grdCell(g_numfeuille).CellPicture = Nothing
            Next j
        Next i
            
        ' Déplacer tout ce qu'il y a dans tbl_Excel
        For i = 0 To UBound(tbl_fichExcel())
            Me.LblHelp.Caption = "Déplacement des champs " & i
            Me.LblHelp.Refresh
            If tbl_fichExcel(i).CmdType = "CHP" Then
                If tbl_fichExcel(i).CmdFenNum = g_numfeuille Then
                    If tbl_fichExcel(i).CmdY >= YDeplacer Then
                        ' vider ancien champ
                        strX = tbl_fichExcel(i).CmdX
                        leX = FctIntColdest(strX)
                        leY = tbl_fichExcel(i).CmdY
                        MenForme = tbl_fichExcel(i).CmdMenFormeChp
                        P_MettreChamp "Vider", i, leX, leY, MenForme, val(tbl_fichExcel(i).CmdChpNum), val(tbl_fichExcel(i).CmdFormIndice), g_numfeuille, True
                        
                        tbl_fichExcel(i).CmdY = tbl_fichExcel(i).CmdY + nblig
                        
                        ' mettre nouveau champ
                        strX = tbl_fichExcel(i).CmdX
                        leX = FctIntColdest(strX)
                        leY = tbl_fichExcel(i).CmdY
                        MenForme = tbl_fichExcel(i).CmdMenFormeChp
                        P_MettreChamp "Mettre", i, leX, leY, MenForme, val(tbl_fichExcel(i).CmdChpNum), val(tbl_fichExcel(i).CmdFormIndice), g_numfeuille, True
                    End If
                End If
            End If
        Next i
        Me.LblHelp.Visible = False
        'MsgBox "Votre feuille va être rechargée"
        Call Rafraichir
    End If

End Sub

Private Sub MnuLigCol_AddLigDessus_Click()
    Dim nblig As Integer
    Dim i As Integer, j As Integer
    Dim sret As String
    Dim NomFichierParam As String
    Dim strX As String
    Dim MenForme As String
    Dim sel As Excel.Range
    Dim leX As Integer, leY As Integer
    
    'Public_VerifOuvrir g_CheminModele, True, True, p_tbl_FichExcelPublier
    
    nblig = 1
    'MsgBox "ICI X=" & XDeplacer & " Y=" & YDeplacer
    sret = InputBox("Nombre de lignes à ajouter", "Ajout de lignes", nblig)
    If val(sret) > 0 Then
        nblig = val(sret)
        bLigCol = True
        NomFichierParam = Replace(g_CheminModele, p_PointExtensionXls, "")
        If InStr(NomFichierParam, ".") = 0 Then
            NomFichierParam = NomFichierParam & "."
        End If
        ' ouvrir le fichier Excel
        Public_VerifOuvrir NomFichierParam & p_ExtensionXls, True, True, p_tbl_FichExcelOuverts()
        Set Exc_wrk = Exc_obj.ActiveWorkbook
        'Exc_obj.Visible = True
        'MsgBox grdCell(g_numfeuille).row
        ' Ajouter les lignes dans le tableau
        Me.LblHelp.Visible = True
        For i = 1 To nblig
            Me.LblHelp.Caption = "Insertion ligne " & i
            Me.LblHelp.Refresh
            'MsgBox grdCell(g_numfeuille).row & ":" & grdCell(g_numfeuille).row
            Exc_obj.ActiveWorkbook.ActiveSheet.Rows(grdCell(g_numfeuille).row & ":" & grdCell(g_numfeuille).row).Select
            Exc_obj.SELECTION.Insert Shift:=xlUp
        Next
                
        ' Vider les texte et les formules
        For i = 1 To grdCell(g_numfeuille).Rows - 1
            grdCell(g_numfeuille).row = i
            For j = 1 To grdCell(g_numfeuille).Cols - 1
                grdCell(g_numfeuille).TextMatrix(i, j) = ""
                grdCell(g_numfeuille).col = j
                Set grdCell(g_numfeuille).CellPicture = Nothing
            Next j
        Next i
            
        ' Déplacer tout ce qu'il y a dans tbl_Excel
        For i = 0 To UBound(tbl_fichExcel())
            Me.LblHelp.Caption = "Déplacement des champs " & i
            Me.LblHelp.Refresh
            If tbl_fichExcel(i).CmdType = "CHP" Then
                If tbl_fichExcel(i).CmdFenNum = g_numfeuille Then
                    If tbl_fichExcel(i).CmdY >= YDeplacer Then
                        ' vider ancien champ
                        strX = tbl_fichExcel(i).CmdX
                        leX = FctIntColdest(strX)
                        leY = tbl_fichExcel(i).CmdY
                        MenForme = tbl_fichExcel(i).CmdMenFormeChp
                        P_MettreChamp "Vider", i, leX, leY, MenForme, val(tbl_fichExcel(i).CmdChpNum), val(tbl_fichExcel(i).CmdFormIndice), g_numfeuille, True
                    
                        'Debug.Print tbl_fichExcel(i).CmdY & " -> " & tbl_fichExcel(i).CmdY + NbLig
                        tbl_fichExcel(i).CmdY = tbl_fichExcel(i).CmdY + nblig
                    
                        ' mettre nouveau champ
                        strX = tbl_fichExcel(i).CmdX
                        leX = FctIntColdest(strX)
                        leY = tbl_fichExcel(i).CmdY
                        MenForme = tbl_fichExcel(i).CmdMenFormeChp
                        P_MettreChamp "Mettre", i, leX, leY, MenForme, val(tbl_fichExcel(i).CmdChpNum), val(tbl_fichExcel(i).CmdFormIndice), g_numfeuille, True
                    
                    End If
                End If
            End If
        Next i
        Me.LblHelp.Visible = False
        MsgBox "Votre feuille va être rechargée"
        Call Rafraichir
    End If
End Sub

Private Function FaireCopy(v_Trait As String)
    Dim x As String
    Dim y As Integer
    Dim X_Prem As Integer, Y_Prem As Integer
    Dim tb1()
    Dim tb()
    Dim New_TB()
    Dim i_tabExcel As Integer
    Dim i As Integer, j As Integer, jj As Integer
    Dim laDim As Integer
    Dim b_aChamp As Boolean
    Dim LaUbound As Integer, NumFiltre As Long, NumIndice As Long, i_Ubound As Integer
    Dim newdimCHP As Integer, new_i_Ubound As Integer
    Dim ret As Integer
    Dim prem As Boolean, déjà As Boolean
    Dim nb As Integer
    Dim nb_New As Integer
    Dim decalX As Integer, decalY As Integer
    Dim der_uBound As Integer
    
    FaireCopy = True
    If v_Trait = "Transférer" Then
        GoTo LabDébut
    End If
    If InStr(MnuChpCollerSelection.tag, "_") > 0 Then
        nb = 0
        x = STR_GetChamp(MnuChpCollerSelection.tag, "_", 0)
        y = STR_GetChamp(MnuChpCollerSelection.tag, "_", 1)
LabDébut:
        If v_Trait = "Copier" Then
            ret = MsgBox("Dupliquer les champs de la sélection vers " & x & y, vbQuestion + vbYesNo, "Dupliquer la sélection")
        ElseIf v_Trait = "Déplacer" Then
            ret = MsgBox("Déplacer les champs de la sélection vers " & x & y, vbQuestion + vbYesNo, "Déplacer la sélection")
        ElseIf v_Trait = "Transférer" Then
            ret = MsgBox("Transférer les champs de la sélection vers le filtre " & grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Titre), vbQuestion + vbYesNo, "Transférer la sélection")
        Else
            Exit Function
        End If
        Dim coord As String
        Dim iCoord As Integer
        Dim strY As String
        If ret <> vbYes Then
            coord = InputBox(v_Trait & " vers", "", x & y)
            x = ""
            strY = ""
            If coord <> "" Then
                FaireCopy = True
                For iCoord = 1 To Len(coord)
                    If Not IsNumeric(Mid(coord, iCoord, 1)) Then
                        x = x & Mid(coord, iCoord, 1)
                    Else
                        strY = strY & Mid(coord, iCoord, 1)
                    End If
                Next iCoord
                y = strY
                GoTo LabFaire
            End If
            FaireCopy = False
            Exit Function
        Else
            ' faire un tableau avec les champs de la sélection (sans doublons)
LabFaire:
            prem = True
            For i = 0 To UBound(tb_Selection)
                If tb_Selection(i).Sel_ItabExcel = 0 Then ' c'est une zone De ... à
                    ' Faire la liste de tous les champs qui sont dans cette tranche
                    For j = 0 To UBound(tbl_fichExcel())
                        If tbl_fichExcel(j).CmdType = "CHP" Then
                            If tbl_fichExcel(j).CmdFenNum = tb_Selection(i).SelFenNum Then
                                If FctIntColdest(tbl_fichExcel(j).CmdX) >= tb_Selection(i).SelXD Then
                                    If FctIntColdest(tbl_fichExcel(j).CmdX) <= tb_Selection(i).SelXF Then
                                        If tbl_fichExcel(j).CmdY >= tb_Selection(i).SelYD Then
                                            If tbl_fichExcel(j).CmdY <= tb_Selection(i).SelYF Then
                                                Call ajouterChamp(nb, tb(), j)
                                            End If
                                        End If
                                    End If
                                End If
                            End If
                        End If
                    Next j
                Else
                    Call ajouterChamp(nb, tb(), tb_Selection(i).Sel_ItabExcel)
                End If
            Next i
            
            If nb > 0 Then
                ' Trouver celui qui est en haut à gauche
                If v_Trait = "Transférer" Then
                    For i = 0 To UBound(tb())
                        i_tabExcel = tb(i)
                        tbl_fichExcel(i_tabExcel).CmdFormIndice = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_NumIndice)
                        tbl_fichExcel(i_tabExcel).CmdFormNum = grdForm.TextMatrix(grdForm.RowSel, GrdForm_FF_Num)
                        cmd(CMD_ENREGISTRER).tag = cmd(CMD_ENREGISTRER).tag + 1
                    Next i
                    Call verifSiSauve
                    FaireCopy = True
                    If MsgBox("Raffraichir", vbQuestion + vbYesNo) = vbYes Then
                        Call grdForm_Click
                    End If
                    Exit Function
                End If
                
                X_Prem = 999
                Y_Prem = 999
                For i = 0 To UBound(tb)
                    j = tb(i)
                    If FctIntColdest(tbl_fichExcel(j).CmdX) < X_Prem Then X_Prem = FctIntColdest(tbl_fichExcel(j).CmdX)
                    If tbl_fichExcel(j).CmdY < Y_Prem Then Y_Prem = tbl_fichExcel(j).CmdY
                Next i
                decalX = FctIntColdest(x) - X_Prem
                decalY = y - Y_Prem
                If v_Trait = "Copier" Then
                    ' Dupliquer les Champs
                    g_Feuille1_araffraichir = g_numfeuille
                    For i = 0 To UBound(tb())
                        i_tabExcel = tb(i)
                        Dim tbl_fichExcel_tmp(0) As SFICH_PARAM_EXCEL
                        newdimCHP = UBound(tbl_fichExcel()) + 1
                        ReDim Preserve tbl_fichExcel(newdimCHP) As SFICH_PARAM_EXCEL
                        tbl_fichExcel_tmp(0) = tbl_fichExcel(i_tabExcel)
                        tbl_fichExcel(newdimCHP) = tbl_fichExcel_tmp(0)
                        If tbl_fichExcel(newdimCHP).CmdFenNum <> g_numfeuille Then
                            g_Feuille2_araffraichir = tbl_fichExcel(newdimCHP).CmdFenNum
                        End If
                        tbl_fichExcel(newdimCHP).CmdFenNum = g_numfeuille   ' p_i_feuilleExcel + 1
                        ' le placer au bon endroit
                        tbl_fichExcel(newdimCHP).CmdX = FctIntColdest(tbl_fichExcel(newdimCHP).CmdX) + decalX
                        tbl_fichExcel(newdimCHP).CmdX = FctStrColDest(tbl_fichExcel(newdimCHP).CmdX)
                        tbl_fichExcel(newdimCHP).CmdY = tbl_fichExcel(newdimCHP).CmdY + decalY
                        ' gérer la fenêtre
                        If FctIntColdest(tbl_fichExcel(newdimCHP).CmdX) > tbl_fenExcel(p_i_feuilleExcel + 1).FenColMax Then
                            tbl_fenExcel(p_i_feuilleExcel + 1).FenColMax = FctIntColdest(tbl_fichExcel(newdimCHP).CmdX)
                        End If
                        If tbl_fichExcel(newdimCHP).CmdY > tbl_fenExcel(p_i_feuilleExcel + 1).FenRowMax Then
                            tbl_fenExcel(p_i_feuilleExcel + 1).FenRowMax = tbl_fichExcel(newdimCHP).CmdY
                        End If
                        If nb_New = 0 Then
                            ReDim Preserve New_TB(0)
                        Else
                            ReDim Preserve New_TB(nb_New)
                        End If
                        New_TB(nb_New) = newdimCHP  ' mettre le nouveau champ dans new_tb
                        nb_New = nb_New + 1
                        

                        ' charger le nouveau
                        If p_bool_tbl_condCHP Then
                            der_uBound = UBound(tbl_condChp)
                        End If
                        Faire_Load_GrdCondChp tbl_fichExcel(newdimCHP).CmdChpNum, tbl_fichExcel(newdimCHP).CmdChpIndice, newdimCHP
                        If p_bool_tbl_condCHP Then
                            For j = der_uBound + 1 To UBound(tbl_condChp)
                                tbl_condChp(j).CondChpChpFormIndice = p_Indice_Grid_ChpCond
                                cmd(CMD_ENREGISTRER).tag = cmd(CMD_ENREGISTRER).tag + 1
                            Next j
                        End If
                    Next i
                    Call verifSiSauve
                    ' mettre les nouveaux dans tb_selection
                    Erase tb_Selection
                    nb_New = nb_New - 1
                    For i = 0 To nb_New
                        ReDim Preserve tb_Selection(i)
                        tb_Selection(i).Sel_ItabExcel = New_TB(i)
                        tb_Selection(i).SelFenNum = tbl_fichExcel(New_TB(i)).CmdFenNum
                        tb_Selection(i).SelX = FctIntColdest(tbl_fichExcel(New_TB(i)).CmdX)
                        tb_Selection(i).SelY = tbl_fichExcel(New_TB(i)).CmdY
                    Next i
                Else
                    g_Feuille1_araffraichir = g_numfeuille
                    For i = 0 To UBound(tb())
                        i_tabExcel = tb(i)
                        ' supprimé car je suis pas sûr
                        If tbl_fichExcel(i_tabExcel).CmdFenNum <> g_numfeuille Then
                            g_Feuille2_araffraichir = tbl_fichExcel(i_tabExcel).CmdFenNum
                        End If
                        tbl_fichExcel(i_tabExcel).CmdFenNum = g_numfeuille  'p_i_feuilleExcel + 1
                        ' le placer au bon endroit
                        tbl_fichExcel(i_tabExcel).CmdX = FctStrColDest(FctIntColdest(tbl_fichExcel(i_tabExcel).CmdX) + decalX)
                        tbl_fichExcel(i_tabExcel).CmdX = FctStrColDest(FctIntColdest(tbl_fichExcel(i_tabExcel).CmdX))
                        tbl_fichExcel(i_tabExcel).CmdY = tbl_fichExcel(i_tabExcel).CmdY + decalY
                        ' gérer la fenêtre
                        If FctIntColdest(tbl_fichExcel(i_tabExcel).CmdX) > tbl_fenExcel(p_i_feuilleExcel + 1).FenColMax Then
                            'tbl_fenExcel(p_i_feuilleExcel + 1).FenColMax = FctIntColdest(tbl_fichExcel(i_tabExcel).CmdX)
                            tbl_fenExcel(g_numfeuille).FenColMax = FctIntColdest(tbl_fichExcel(i_tabExcel).CmdX)
                        End If
                        If tbl_fichExcel(i_tabExcel).CmdY > tbl_fenExcel(p_i_feuilleExcel + 1).FenRowMax Then
                            'tbl_fenExcel(p_i_feuilleExcel + 1).FenRowMax = tbl_fichExcel(i_tabExcel).CmdY
                            tbl_fenExcel(g_numfeuille).FenRowMax = tbl_fichExcel(i_tabExcel).CmdY
                        End If
                        cmd(CMD_ENREGISTRER).tag = cmd(CMD_ENREGISTRER).tag + 1
                    Next i
                    Call verifSiSauve
                End If
            End If
        End If
    End If
End Function

Private Function ajouterChamp(ByRef r_nb, ByRef r_TB(), ByVal i_tabExcel)
    Dim déjà As Boolean, prem As Boolean
    Dim i_Ubound As Integer, j As Integer, laDim As Integer
    
    i_Ubound = -1
    prem = True
    On Error GoTo LabErr
    i_Ubound = UBound(r_TB)
    prem = False
    GoTo LabOK
LabErr:
    prem = True
LabOK:
    déjà = False
    For j = 0 To i_Ubound
        If r_TB(j) = i_tabExcel Then
            déjà = True
            r_nb = i_Ubound + 1
            Exit Function
        End If
    Next j
    If Not déjà Then
        If prem Then
            laDim = 0
        Else
            laDim = UBound(r_TB) + 1
        End If
        ReDim Preserve r_TB(laDim)
        r_TB(laDim) = i_tabExcel
        r_nb = r_nb + 1
    End If

End Function


Private Sub MnuSelectionnerNewForm_Click()
    MsgBox "ici"
End Sub

Private Sub MnuSelection_Voir_Click()
    Call VoirSelection
End Sub

Private Function VoirSelection()
    Dim nb As Integer
    Dim s As String
    Dim sql As String
    Dim j As Integer, i As Integer
    Dim lib As String
    Dim coord As String
    Dim n As Integer
    Dim ret As Integer
    Dim libFen As String
    
LabDebut:
    Call CL_Init
    nb = -1
    n = 0
    On Error Resume Next
    nb = UBound(tb_Selection())
    If nb > -1 Then
        'Call CL_InitMultiSelect(True, True)
        For i = 0 To nb
            If tb_Selection(i).SelFenNum >= 0 Then
                libFen = "Feuille " & tbl_fenExcel(tb_Selection(i).SelFenNum).FenNom
                If tb_Selection(i).Sel_ItabExcel > 0 Then ' cas du click
                    lib = libFen & " => " & FctStrColDest(tb_Selection(i).SelX) & tb_Selection(i).SelY & " Champs : " & FctNomChp(tbl_fichExcel(tb_Selection(i).Sel_ItabExcel).CmdChpNum)
                    Call CL_AddLigne(lib, tbl_fichExcel(tb_Selection(i).Sel_ItabExcel).CmdChpNum, i, False)
                    n = n + 1
                Else        ' cas de la zone
                    If tb_Selection(i).SelXD > 0 And tb_Selection(i).SelXF > 0 Then ' cas du click
                        lib = libFen & " => de " & FctStrColDest(tb_Selection(i).SelXD) & tb_Selection(i).SelYD & " à " & FctStrColDest(tb_Selection(i).SelXF) & tb_Selection(i).SelYF
                        Call CL_AddLigne(lib, 0, i, False)
                        ' Faire la liste de tous les champs qui sont dans cette tranche
                        For j = 0 To UBound(tbl_fichExcel())
                            If tbl_fichExcel(j).CmdType = "CHP" Then
                                If tbl_fichExcel(j).CmdFenNum = tb_Selection(i).SelFenNum Then
                                    If FctIntColdest(tbl_fichExcel(j).CmdX) >= tb_Selection(i).SelXD Then
                                        If FctIntColdest(tbl_fichExcel(j).CmdX) <= tb_Selection(i).SelXF Then
                                            If tbl_fichExcel(j).CmdY >= tb_Selection(i).SelYD Then
                                                If tbl_fichExcel(j).CmdY <= tb_Selection(i).SelYF Then
                                                    If tbl_fichExcel(j).CmdChpNum > 0 Then
                                                        lib = "... " & tbl_fichExcel(j).CmdX & tbl_fichExcel(j).CmdY & " Champs : " & FctNomChp(tbl_fichExcel(j).CmdChpNum)
                                                    ElseIf tbl_fichExcel(j).CmdChpNum <= -10 Then
                                                        sql = "select for_lib from formulaire,filtreform where formulaire.for_num = filtreform.ff_fornum " & " and filtreform.ff_num = " & tbl_fichExcel(j).CmdFormNum
                                                        Call Odbc_RecupVal(sql, s)
                                                        lib = "... " & tbl_fichExcel(j).CmdX & tbl_fichExcel(j).CmdY & " Champs : nombre de " & s
                                                    Else
                                                        lib = "... " & tbl_fichExcel(j).CmdX & tbl_fichExcel(j).CmdY & " Champs : supprimé"
                                                    End If
                                                    Call CL_AddLigne(lib, n, -1, False)
                                                End If
                                            End If
                                        End If
                                    End If
                                End If
                            End If
                        Next j
                        n = n + 1
                    End If
                End If
            End If
        Next i
        If n = 0 Then
            Exit Function
            MnuSelection.Caption = "Mode Sélection"
        End If
        Call CL_InitTitreHelp("Champs sélectionnés", "")
        Call CL_AddBouton("", p_chemin_appli + "\btnsupprimer.gif", 0, vbKeyDelete, 0)
        Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
        Call CL_InitTaille(0, -15)
        
        ChoixListe.Show 1
        
        If CL_liste.retour = 1 Then
            Exit Function
        End If
        ' Supprimer
        If CL_liste.lignes(CL_liste.pointeur).tag = -1 Then
            i = CL_liste.lignes(CL_liste.pointeur).num
            lib = CL_liste.lignes(i).texte
            i = CL_liste.lignes(i).tag
            ret = MsgBox("Supprimer toute la sélection " & lib, vbYesNo, "Supprimer")
            If ret = vbYes Then
                tb_Selection(i).SelFenNum = -1 ' indique qu'il est supprimé
            End If
        Else
            tb_Selection(CL_liste.lignes(CL_liste.pointeur).tag).SelFenNum = -1 ' indique qu'il est supprimé
        End If
        GoTo LabDebut
    End If

End Function
Private Sub MnuSelectionnerDe_A_Click()
    Call MnuSelectionStop_Click
    p_Mode_SelectionDeA = True
    MnuSelectionnerDe_A.tag = 0
    p_Mode_SelectionClick = False
    MnuSelection.Caption = "Mode Sélection ( de -> à )"
    MnuSelectionNewForm.Visible = False
    'MnuSelectionStop.Visible = True
    'MnuSelectionStop.Enabled = True
    MnuSelection_Voir.Visible = False
    'MnuSelectionCpy.Visible = False
    'MnuSelectionCpy.Caption = "Copier-Coller"
    MnuChpCollerSelection.tag = 0
    Me.MnuChpDeplacerSelection.tag = 0
    'MnuChpCollerSelection.Caption = "Copier la sélection"
End Sub

Private Sub MnuSelectionnerUne_par_Une_Click()
    p_Mode_SelectionDeA = False
    MnuSelectionnerDe_A.tag = 0
    p_Mode_SelectionClick = True
    MnuSelection.Caption = "Mode Sélection (Click)"
    MnuSelectionNewForm.Visible = False
    'MnuSelectionStop.Visible = True
    'MnuSelectionStop.Enabled = True
    MnuSelection_Voir.Visible = False
    'MnuSelectionCpy.Visible = False
    'MnuSelectionCpy.Caption = "Copier-Coller"
    MnuChpCollerSelection.tag = 0
    Me.MnuChpDeplacerSelection.tag = 0
    'MnuChpCollerSelection.Caption = "Copier la sélection"
End Sub

Private Sub MnuSelectionNewForm_Click()
    Dim iUbound As Integer
    
    On Error Resume Next
    iUbound = -1
    iUbound = UBound(tb_Selection)
    If iUbound = -1 Then
        Me.MnuSelection.Caption = "Mode Sélection"
        Me.MnuSelectionNewForm.Enabled = False
    Else
        bTransfereSelection = True
        Me.LblHelp.Visible = True
        Me.LblHelp.ForeColor = 255
        Me.LblHelp.Caption = "Cliquez sur le filtre destinataire des champs sélectionnés"
        MsgBox "Cliquez sur le filtre destinataire des champs sélectionnés"
    End If
End Sub

Private Sub MnuSelectionStop_Click()
    p_Mode_SelectionDeA = False
    p_Mode_SelectionClick = False
    MnuSelection.Caption = "Mode Sélection"
    MnuSelectionNewForm.Visible = False
    'MnuSelectionStop.Enabled = False
    MnuSelection_Voir.Visible = False
    'MnuSelectionCpy.Visible = False
    MnuChpCollerSelection.tag = 0
    Me.MnuChpDeplacerSelection.tag = 0
    MnuChpCollerSelection.Enabled = False
    Me.MnuChpDeplacerSelection.Enabled = False
    MnuChpCollerSelection.Caption = "Copier la sélection"
    MnuChpDeplacerSelection.Caption = "Déplacer la sélection"

    Erase tb_Selection
End Sub

Private Sub MnuSimulCell_Click()
    p_dansExcel = True
    'If Me.MnuChpCopier.Enabled Then
    '    Me.MnuChpColler.Enabled = False
    'Else
    '    Me.MnuChpColler.Enabled = True
    'End If
End Sub

Private Sub MnuSimulCellChgFiltreDesChp_Click()
    Dim lstChp As String
    
    bTransfereDes = True
    Me.LblHelp.Visible = True
    Me.LblHelp.ForeColor = 255
    ' Choisir les champs
    lstTransfert = choisirChp()
    If lstTransfert <> "" Then
        Me.LblHelp.Caption = "Cliquez sur le filtre destinataire de ces champ"
        MsgBox "Cliquez sur le filtre destinataire de ces champ"
    Else
        lstTransfert = ""
        bTransfereDes = False
    End If
End Sub

Private Function choisirChp()
    Dim i As Integer, n As Integer
    Dim s As String, num As Long
    Dim sX As String, sY As String
    Dim leX As String, leY As String
    Dim LstChpChoisis As String
    
    Call CL_Init
    Call CL_InitGererTousRien(True)
    Call CL_InitMultiSelect(True, True)
    n = 0
    On Error GoTo Err_Suite2
    i = UBound(tbl_fichExcel())
    GoTo Suite_2
Err_Suite2:
    Resume Fin
Suite_2:
    On Error GoTo 0
    For i = 0 To UBound(tbl_fichExcel())
        If tbl_fichExcel(i).CmdChpNum > 0 Or tbl_fichExcel(i).CmdChpNum < 0 Then
            If tbl_fichExcel(i).CmdType = "CHP" Then
                If tbl_fichExcel(i).CmdFenNum = g_numfeuille Then
                    num = tbl_fichExcel(i).CmdChpNum
                    'Debug.Print num
                    Call Odbc_RecupVal("select forec_label from formetapechp where forec_num=" & num, s)
                    sX = tbl_fichExcel(i).CmdX
                    leX = FctIntColdest(sX)
                    leY = tbl_fichExcel(i).CmdY
                    Call CL_AddLigne("(" & sX & ":" & leY & ")  " & s, num, "", True)
                End If
            End If
        End If
    Next i
    Call CL_InitTitreHelp("Champ à transférer", "")
    Call CL_AddBouton("", p_chemin_appli + "\btnok.gif", vbKeyO, vbKeyF1, 0)
    Call CL_AddBouton("", p_chemin_appli + "\btnporte.gif", 0, vbKeyEscape, 0)
    Call CL_InitTaille(0, -15)
    ChoixListe.Show 1
    If CL_liste.retour = 1 Then
        choisirChp = ""
    ElseIf CL_liste.retour = 0 Then
        For i = 0 To UBound(CL_liste.lignes)
            If CL_liste.lignes(i).selected Then
                If LstChpChoisis = "" Then
                    LstChpChoisis = CL_liste.lignes(i).num
                Else
                    LstChpChoisis = LstChpChoisis & ";" & CL_liste.lignes(i).num
                End If
            End If
        Next i
    End If
    choisirChp = LstChpChoisis
Fin:
End Function

Private Sub MnuSimulCellChgFiltreTousChp_Click()
    bTransfereTous = True
    Me.LblHelp.Visible = True
    Me.LblHelp.ForeColor = 255
    Me.LblHelp.Caption = "Cliquez sur le filtre destinataire de tous ces champs"
    MsgBox "Cliquez sur le filtre destinataire de tous ces champs"
End Sub

Private Sub MnuSimulCellChgFiltreFenChp_Click()
    bTransfereFen = True
    Me.LblHelp.Visible = True
    Me.LblHelp.ForeColor = 255
    Me.LblHelp.Caption = "Cliquez sur le filtre destinataire de tous ces champs"
    MsgBox "Cliquez sur le filtre destinataire de tous ces champs"
End Sub

Private Sub MnuSimulCellChgFiltreUnChp_Click()
    bTransfereUn = True
    Me.LblHelp.Visible = True
    Me.LblHelp.ForeColor = 255
    Me.LblHelp.Caption = "Cliquez sur le filtre destinataire de ce champ"
    MsgBox "Cliquez sur le filtre destinataire de ce champ"
End Sub

Private Sub MnuSimulCellDeplacer_Click()
    bDeplacer = True
    Me.LblHelp.Caption = "Cliquez sur la cellule de destination du champ à déplacer"
    Me.LblHelp.ForeColor = 255
    Me.LblHelp.Visible = True
    MsgBox "Cliquez sur la cellule de destination du champ à déplacer"
End Sub

Private Sub MnuSimulCellDeplacerTous_Click()
    bDeplacerTous = True
    Me.LblHelp.Visible = True
    Me.LblHelp.Caption = "Cliquez sur la cellule de la fenêtre de destination"
    Me.LblHelp.ForeColor = 255
    MsgBox "Cliquez sur la cellule de destination"
    CellAncRow = grdCell(g_numfeuille).RowSel
    CellAncCol = grdCell(g_numfeuille).ColSel
End Sub

Private Sub MnuSimulCellSimul_Click()
    Dim chemin As String
    Dim i As Integer, ret As Integer
    Dim strFichG As String, strFichd As String
    Dim fichierXls As String
    
    Call Excel_Simulation("Une", chemin, ret)
        
    If p_dansExcel Then
        For i = 1 To Exc_obj.Workbooks.Count
            strFichG = Replace(UCase(Exc_obj.Workbooks(i).FullName), "\", "$")
            strFichG = Replace(strFichG, "/", "$")
            strFichd = Replace(UCase(chemin), "\", "$")
            strFichd = Replace(strFichd, "/", "$")
            If strFichG = strFichd Then
            'If UCase(Exc_obj.Workbooks(i).FullName) = UCase(Chemin) Then
                Exc_obj.Workbooks(i).Save
                Exc_obj.Workbooks(i).Activate
                Call Excel_MetVisible
                Exit For
            End If
        Next i
        MsgBox "La simulation est terminée"
        If p_dansExcel Then
            If p_TraitPublier = "P" Then
                fichierXls = p_Chemin_Modeles_Local & "\Temp_" & p_nummodele & p_PointExtensionXls
            Else
                fichierXls = p_Chemin_Modeles_Local & "\Temp_" & p_nummodele & p_PointExtensionXls
            End If
            Call Public_VerifOuvrir(fichierXls, True, True, p_tbl_FichExcelOuverts())
        End If

        p_dansExcel = False
        Call FctTrace("Après MetFrmHTML_Visible")
    End If
End Sub

Private Sub MnuSimulCellSimulFeuille_Click()
    Dim chemin As String
    Dim i As Integer, ret As Integer
    Dim strFichG As String, strFichd As String
    
    Call Excel_Simulation("Feuille", chemin, ret)
        
    For i = 1 To Exc_obj.Workbooks.Count
        strFichG = Replace(UCase(Exc_obj.Workbooks(i).FullName), "\", "$")
        strFichG = Replace(strFichG, "/", "$")
        strFichd = Replace(UCase(chemin), "\", "$")
        strFichd = Replace(strFichd, "/", "$")
        If strFichG = strFichd Then
        'If UCase(Exc_obj.Workbooks(i).FullName) = UCase(Chemin) Then
            Exc_obj.Workbooks(i).Save
            Exc_obj.Workbooks(i).Activate
            Call Excel_MetVisible
            Exit For
        End If
    Next i

End Sub

Private Sub MnuSimulCellSimulToutes_Click()
    Dim chemin As String
    Dim i As Integer, ret As Integer
    Dim strFichG As String, strFichd As String

    Call Excel_Simulation("Toutes", chemin, ret)

    For i = 1 To Exc_obj.Workbooks.Count
        strFichG = Replace(UCase(Exc_obj.Workbooks(i).FullName), "\", "$")
        strFichG = Replace(strFichG, "/", "$")
        strFichd = Replace(UCase(chemin), "\", "$")
        strFichd = Replace(strFichd, "/", "$")
        If strFichG = strFichd Then
        'If UCase(Exc_obj.Workbooks(i).FullName) = UCase(Chemin) Then
            Exc_obj.Workbooks(i).Save
            Exc_obj.Workbooks(i).Activate
            Call Excel_MetVisible
            Exit For
        End If
    Next i
End Sub

Private Sub TimerPictureLien_Timer()
    
    If Me.TimerPictureLien.tag = 0 Then
        Me.TimerPictureLien.tag = 1
    Else
        Me.TimerPictureLien.tag = 0
    End If
    Me.cmd(CMD_MODE_LIEN).Picture = Me.PictureLien(Me.TimerPictureLien.tag).Picture
End Sub

Private Sub TxtFormule_KeyDown(KeyCode As Integer, Shift As Integer)
    'Call EscapeFormule
End Sub

Private Sub TxtFormule_KeyPress(KeyAscii As Integer)
    'Call EscapeFormule
End Sub

Private Sub EscapeFormule()
    Dim leI As Integer, leJ As Integer
    Dim bAnc As Boolean
    
    leI = FctIntColdest(Mid(g_ColSelDest, 1, 1))
    leJ = Replace(g_ColSelDest, Mid(g_ColSelDest, 1, 1), "")
    
    bAnc = p_bfaire_RowColChange
    p_bfaire_RowColChange = False
    grdCell(g_numfeuille).row = leJ
    grdCell(g_numfeuille).col = leI
    
    p_bfaire_RowColChange = True
    Call grdCell_RowColChange(g_numfeuille)
    
    p_bfaire_RowColChange = bAnc
    
    Me.TxtFormule.Text = ""
    Me.FrmFormule.Visible = False
    cmd(CMD_MODE_FORMULE).Visible = False
    g_ColSelDest = ""
    bModeFormule = False

End Sub

Private Sub txtPolice_KeyDown(KeyCode As Integer, Shift As Integer)
    
    If KeyCode = 13 And Shift = 0 Then
        
         On Error GoTo LabFin
         Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).Font.Name = ComDialog.FontName
         Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).Font.Size = ComDialog.FontSize
         Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).Font.Bold = ComDialog.FontBold
         Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).Font.Italic = ComDialog.FontItalic
         Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).Font.Color = ComDialog.Color
        
         Exc_obj.ActiveWorkbook.Sheets(tbl_fenExcel(g_numfeuille).FenNom).Range(g_ColSelDest).Value = Me.txtPolice.Text
         
         grdCell(g_numfeuille).CellFontBold = ComDialog.FontBold
         grdCell(g_numfeuille).CellForeColor = ComDialog.Color
         grdCell(g_numfeuille).CellFontName = ComDialog.FontName
         grdCell(g_numfeuille).CellFontItalic = ComDialog.FontItalic
         grdCell(g_numfeuille).CellFontSize = ComDialog.FontSize
        
        grdCell(g_numfeuille).TextMatrix(grdCell(g_numfeuille).RowSel, grdCell(g_numfeuille).ColSel) = Me.txtPolice.Text
                
        Me.FrmProp.Visible = False
        
        Call verifSiSauve
   
    ElseIf KeyCode = 27 Then
        Me.FrmProp.Visible = False
        cmd(CMD_MODE_POLICE) = False
    End If
LabFin:
    On Error GoTo 0
End Sub

